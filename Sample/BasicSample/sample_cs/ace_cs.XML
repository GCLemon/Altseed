<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ace_cs</name>
    </assembly>
    <members>
        <member name="F:ace.EngineOption.IsFullScreen">
            <summary>
            フルスクリーンで起動するか?
            </summary>
        </member>
        <member name="F:ace.EngineOption.GraphicsDevice">
            <summary>
            描画に使用するデバイス
            </summary>
        </member>
        <member name="F:ace.EngineOption.IsReloadingEnabled">
            <summary>
            リソースの再読み込みを有効にするかどうか?
            </summary>
        </member>
        <member name="F:ace.EngineOption.AutoGeneratedLayer">
            <summary>
            起動時に自動的に生成されるシーンとレイヤーの種類
            </summary>
        </member>
        <member name="M:ace.Engine.Initialize(System.String,System.Int32,System.Int32,ace.EngineOption)">
            <summary>
            初期化を行う。
            </summary>
            <param name="title">タイトル</param>
            <param name="width">横幅</param>
            <param name="height">縦幅</param>
            <param name="option">オプション</param>
            <returns>成否</returns>
        </member>
        <member name="M:ace.Engine.InitializeByExternalWindow(System.IntPtr,System.IntPtr,System.Int32,System.Int32,ace.EngineOption)">
            <summary>
            外部ウインドウにゲーム画面を表示する初期化を行う。
            </summary>
            <param name="handle1">ハンドル1</param>
            <param name="handle2">ハンドル2</param>
            <param name="width">横幅</param>
            <param name="height">縦幅</param>
            <param name="option">オプション</param>
            <returns>成否</returns>
        </member>
        <member name="M:ace.Engine.DoEvents">
            <summary>
            イベントを実行し、進行可否を判断する。
            </summary>
            <returns>進行可能か?</returns>
        </member>
        <member name="M:ace.Engine.Update">
            <summary>
            更新処理を行う。
            </summary>
        </member>
        <member name="M:ace.Engine.Terminate">
            <summary>
            終了処理を行う。
            </summary>
        </member>
        <member name="M:ace.Engine.AddObject2D(ace.Object2D)">
            <summary>
            一番最初に追加された2Dレイヤーにオブジェクトを追加する。
            </summary>
            <param name="o">オブジェクト</param>
            <returns>成否</returns>
        </member>
        <member name="M:ace.Engine.RemoveObject2D(ace.Object2D)">
            <summary>
            一番最初に追加された2Dレイヤーにオブジェクトを削除する。
            </summary>
            <param name="o">オブジェクト</param>
            <returns>成否</returns>
        </member>
        <member name="M:ace.Engine.AddObject3D(ace.Object3D)">
            <summary>
            一番最初に追加された3Dレイヤーにオブジェクトを追加する。
            </summary>
            <param name="o">オブジェクト</param>
            <returns>成否</returns>
        </member>
        <member name="M:ace.Engine.RemoveObject3D(ace.Object3D)">
            <summary>
            一番最初に追加された3Dレイヤーにオブジェクトを削除する。
            </summary>
            <param name="o">オブジェクト</param>
            <returns>成否</returns>
        </member>
        <member name="M:ace.Engine.ChangeScene(ace.Scene)">
            <summary>
            描画する対象となるシーンを変更する。
            </summary>
            <param name="scene">次のシーン</param>
        </member>
        <member name="M:ace.Engine.ChangeSceneWithTransition(ace.Scene,ace.Transition)">
            <summary>
            描画する対象となるシーンを画面遷移効果ありで変更する。
            </summary>
            <param name="scene">次のシーン</param>
            <param name="transition">画面遷移効果</param>
        </member>
        <member name="M:ace.Engine.Close">
            <summary>
            ウインドウを閉じる。
            </summary>
        </member>
        <member name="M:ace.Engine.TakeScreenshot(System.String)">
            <summary>
            スクリーンショットをpngとして保存する。
            </summary>
            <param name="path">出力先</param>
        </member>
        <member name="P:ace.Engine.CurrentScene">
            <summary>
            現在描画対象となっているシーンを表す ace.Scene クラスのインスタンスを取得します。
            </summary>
        </member>
        <member name="P:ace.Engine.ProfilerIsVisible">
            <summary>
            プロファイリング結果を画面に表示するかどうかを表す真偽値を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.Engine.DeltaTime">
            <summary>
            1フレームで経過した実時間(秒)を取得、または設定する。
            </summary>
            <remarks>
            基本的に開発者は使用する取得のみで設定する必要はない。
            何らかの理由で無理やり経過時間を指定する場合に使用する。
            </remarks>
        </member>
        <member name="P:ace.Engine.CurrentFPS">
            <summary>
            現在のFPSを取得する。
            </summary>
        </member>
        <member name="P:ace.Engine.TargetFPS">
            <summary>
            目標FPSを取得、または設定する。
            </summary>
        </member>
        <member name="P:ace.Engine.TimeSpan">
            <summary>
            間を指定可能なオブジェクトの実時間あたりの進行速度を取得、または設定する。
            </summary>
        </member>
        <member name="P:ace.Engine.FramerateMode">
            <summary>
            フレームレートの制御方法を取得、または設定する。
            </summary>
        </member>
        <member name="P:ace.Engine.WindowHandle">
            <summary>
            ウインドウズの場合、ウインドウハンドルを取得する。
            </summary>
        </member>
        <member name="P:ace.Engine.WindowSize">
            <summary>
            ウィンドウのサイズを取得する。
            </summary>
            <returns>ウィンドウのサイズ</returns>
        </member>
        <member name="T:ace.GarbageCollector">
            <summary>
            実際にネイティブのオブジェクトのGCを行うクラス
            </summary>
        </member>
        <member name="M:ace.GarbageCollector.AddObject(System.Object)">
            <summary>
            破棄するインスタンスを追加する。
            </summary>
            <param name="o">インスタンス</param>
        </member>
        <member name="M:ace.GarbageCollector.Collect">
            <summary>
            インスタンスを破棄する。
            </summary>
        </member>
        <member name="M:ace.GC.GenerateSoundSource(ace.swig.SoundSource,ace.GC.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:ace.GC.GenerateTexture2D(ace.swig.Texture2D,ace.GC.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:ace.GC.GenerateRenderTexture2D(ace.swig.RenderTexture2D,ace.GC.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:ace.GC.GenerateCubemapTexture(ace.swig.CubemapTexture,ace.GC.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:ace.GC.GenerateEffect(ace.swig.Effect,ace.GC.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:ace.GC.GenerateFont(ace.swig.Font,ace.GC.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:ace.GC.GenerateMesh(ace.swig.Mesh,ace.GC.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:ace.GC.GenerateDeformer(ace.swig.Deformer,ace.GC.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:ace.GC.GenerateModel(ace.swig.Model,ace.GC.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:ace.GC.GenerateMassModel(ace.swig.MassModel,ace.GC.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:ace.GC.GenerateTerrain3D(ace.swig.Terrain3D,ace.GC.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:ace.GC.GenerateKeyframeAnimation(ace.swig.KeyframeAnimation,ace.GC.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:ace.GC.GenerateAnimationSource(ace.swig.AnimationSource,ace.GC.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:ace.GC.GenerateAnimationClip(ace.swig.AnimationClip,ace.GC.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:ace.GC.GenerateInternal``2(``0,``1,ace.GC.GenerationType)">
            <summary>
            Generate*メソッドの内部処理
            </summary>
            <typeparam name="E"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="existing"></param>
            <param name="o"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:ace.GC.GenerationType">
            <summary>
            C++のインスタンスの生成及び取得方法
            </summary>
        </member>
        <member name="F:ace.GC.GenerationType.Create">
            <summary>
            ファイルパス等からC++のインスタンスが生成された場合
            生成時に使い回しをしている場合、カウンタを増やしているので、
            使い回しと判定した場合、カウンタを減らす
            </summary>
        </member>
        <member name="F:ace.GC.GenerationType.Get">
            <summary>
            C++のインスタンスを取得した場合、
            新規の場合はC#側でC++のインスタンスを保持するのでカウンタを増やす
            </summary>
        </member>
        <member name="T:ace.IDestroy">
            <summary>
            破棄可能なインスタンス
            </summary>
        </member>
        <member name="M:ace.IDestroy.Destroy">
            <summary>
            破棄する。
            </summary>
        </member>
        <member name="P:ace.IDestroy.IsDestroyed">
            <summary>
            破棄されているか？
            </summary>
        </member>
        <member name="T:ace.AnimationClip">
            <summary>
            アニメーションソースを元に情報が付加されたアニメーションクラス
            </summary>
        </member>
        <member name="P:ace.AnimationClip.Source">
            <summary>
            ソースを取得、または設定する。
            </summary>
        </member>
        <member name="P:ace.AnimationClip.IsLoopingMode">
            <summary>
            ループするかを取得、または設定する。
            </summary>
        </member>
        <member name="T:ace.AnimationSource">
            <summary>
            アニメーションの元データのクラス
            </summary>
        </member>
        <member name="M:ace.AnimationSource.AddAnimation(ace.KeyframeAnimation)">
            <summary>
            ボーンごとのアニメーションを追加する。
            </summary>
            <param name="keyframeAnimation">アニメーション</param>
        </member>
        <member name="M:ace.AnimationSource.RemoveAnimation(ace.KeyframeAnimation)">
            <summary>
            ボーンごとのアニメーションを削除する。
            </summary>
            <param name="keyframeAnimation">アニメーション</param>
        </member>
        <member name="P:ace.AnimationSource.Length">
            <summary>
            アニメーションの長さ(60フレーム単位)を取得する。
            </summary>
        </member>
        <member name="T:ace.AnimationSystem">
            <summary>
            アニメーションに関するインスタンスを生成するためのクラス
            </summary>
        </member>
        <member name="M:ace.AnimationSystem.CreateAnimationClip">
            <summary>
            アニメーションクリップのインスタンスを生成する。
            </summary>
            <returns>インスタンス</returns>
        </member>
        <member name="M:ace.AnimationSystem.CreateAnimationSource">
            <summary>
            アニメーションソースのインスタンスを生成する。
            </summary>
            <returns>インスタンス</returns>
        </member>
        <member name="M:ace.AnimationSystem.CreateKeyframeAnimation">
            <summary>
            キーフレームアニメーションのインスタンスを生成する。
            </summary>
            <returns>インスタンス</returns>
        </member>
        <member name="T:ace.KeyframeAnimation">
            <summary>
            キーフレームで指定するアニメーションのクラス
            </summary>
        </member>
        <member name="M:ace.KeyframeAnimation.AddKeyframe(ace.FCurveKeyframe)">
            <summary>
            キーフレームを追加する。
            </summary>
            <param name="kf">キーフレーム</param>
        </member>
        <member name="M:ace.KeyframeAnimation.GetValue(System.Single)">
            <summary>
            指定した時間の値を取得する。
            </summary>
            <param name="time">時間</param>
            <returns>値</returns>
        </member>
        <member name="P:ace.KeyframeAnimation.Name">
            <summary>
            名称を取得、または設定する。
            </summary>
        </member>
        <member name="T:ace.CubemapTexture">
            <summary>
            キューブマップ
            </summary>
        </member>
        <member name="P:ace.CubemapTexture.MipmapCount">
            <summary>
            ミップマップ数
            </summary>
        </member>
        <member name="T:ace.FCurveKeyframe">
            <summary>
            Fカーブのキーフレーム
            </summary>
        </member>
        <member name="F:ace.FCurveKeyframe.KeyValue">
            <summary>
            時間と値
            </summary>
        </member>
        <member name="F:ace.FCurveKeyframe.LeftHandle">
            <summary>
            制御用ハンドル
            </summary>
        </member>
        <member name="F:ace.FCurveKeyframe.RightHandle">
            <summary>
            制御用ハンドル
            </summary>
        </member>
        <member name="F:ace.FCurveKeyframe.Interpolation">
            <summary>
            補間方法
            </summary>
        </member>
        <member name="T:ace.RenderSettings">
            <summary>
            描画設定のクラス
            </summary>
        </member>
        <member name="F:ace.RenderSettings.IsLightweightMode">
            <summary>
            遅延レンダリングから軽量レンダリングに変更し高速に描画するか?
            </summary>
        </member>
        <member name="F:ace.RenderSettings.VisualizedBuffer">
            <summary>
            画面に表示されるバッファ
            </summary>
        </member>
        <member name="T:ace.Deformer">
            <summary>
            メッシュを変形させるためのクラス
            </summary>
        </member>
        <member name="M:ace.Deformer.AddBone(System.String,System.Int32,ace.RotationOrder,ace.Matrix44)">
            <summary>
            ボーンを追加する。
            </summary>
            <param name="name">ボーンの名称</param>
            <param name="parentBoneIndex">親ボーンのインデックス(親がない場合は-1)</param>
            <param name="rotationOrder">ボーンの回転行列の計算方法</param>
            <param name="localMat">ボーンのローカル変形行列</param>
        </member>
        <member name="T:ace.Effect">
            <summary>
            エフェクトの情報が記録されているクラス
            </summary>
            <summary>
            エフェクトの情報が記録されているクラス 
            </summary>
        </member>
        <member name="T:ace.Font">
            <summary>
            フォントクラス
            </summary>
            <summary>
            フォントの情報が記録されているクラス 
            </summary>
        </member>
        <member name="M:ace.Font.CalcTextureSize(System.String,ace.WritingDirection)">
            <summary>
            描画テキストと描画方向を与えると、その文字の描画領域を返す。 
            </summary>
            <param name="text">描画テキスト </param>
            <param name="writingDirection">描画方向 </param>
            <returns>文字の描画領域 </returns>
        </member>
        <member name="M:ace.Graphics.CreateTexture2D(System.String)">
            <summary>
            テクスチャを生成する。
            </summary>
            <param name="path">パス</param>
            <returns>テクスチャ</returns>
        </member>
        <member name="M:ace.Graphics.CreateTexture2DAsRawData(System.String)">
            <summary>
            テクスチャを生成する。
            </summary>
            <param name="path">パス</param>
            <returns>テクスチャ</returns>
            <remarks>
            画素がRGB空間にマッピングされている時に使用する。(ノーマルマップ等)
            </remarks>
        </member>
        <member name="M:ace.Graphics.CreateEmptyTexture2D(System.Int32,System.Int32,ace.TextureFormat)">
            <summary>
            空のテクスチャを生成する。
            </summary>
            <param name="width">横幅</param>
            <param name="height">縦幅</param>
            <param name="format">フォーマット</param>
            <returns>テクスチャ</returns>
        </member>
        <member name="M:ace.Graphics.CreateRenderTexture2D(System.Int32,System.Int32,ace.TextureFormat)">
            <summary>
            描画先として指定可能なテクスチャを生成する。
            </summary>
            <param name="width">横幅</param>
            <param name="height">縦幅</param>
            <param name="format">フォーマット</param>
            <returns>テクスチャ</returns>
        </member>
        <member name="M:ace.Graphics.CreateCubemapTextureFrom6ImageFiles(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            6枚の画像ファイルからキューブマップテクスチャを生成する。
            </summary>
            <param name="front">前方向の画像ファイルへの相対パス</param>
            <param name="left">左方向の画像ファイルへの相対パス</param>
            <param name="back">後ろ方向の画像ファイルへの相対パス</param>
            <param name="right">右方向の画像ファイルへの相対パス</param>
            <param name="top">上方向の画像ファイルへの相対パス</param>
            <param name="bottom">下方向の画像ファイルへの相対パス</param>
            <returns>キューブマップ</returns>
        </member>
        <member name="M:ace.Graphics.CreateCubemapTextureFromMipmapImageFiles(System.String,System.Int32)">
            <summary>
            複数の画像ファイルからミップマップ付のキューブマップテクスチャを生成する。
            </summary>
            <param name="path">ファイルの名称の先頭</param>
            <param name="mipmapCount">ミップマップ数</param>
            <returns>キューブマップ</returns>
        </member>
        <member name="M:ace.Graphics.CreateCubemapTextureFromSingleImageFile(System.String)">
            <summary>
            1つのファイルからミップマップ付のキューブマップテクスチャを生成する。
            </summary>
            <param name="path">パス</param>
            <returns>キューブマップ</returns>
        </member>
        <member name="M:ace.Graphics.CreateShader2D(System.String)">
            <summary>
            シェーダー(2D)を生成する。
            </summary>
            <param name="shaderText">シェーダーのコード</param>
            <returns></returns>
        </member>
        <member name="M:ace.Graphics.CreateMaterial2D(ace.Shader2D)">
            <summary>
            マテリアル(2D)を生成する。
            </summary>
            <param name="shader">シェーダー</param>
            <returns>マテリアル(2D)</returns>
        </member>
        <member name="M:ace.Graphics.CreateShader3D(System.String)">
            <summary>
            シェーダー(3D)を生成する。
            </summary>
            <param name="shaderText">シェーダーのコード</param>
            <returns></returns>
        </member>
        <member name="M:ace.Graphics.CreateMaterial3D(ace.Shader3D)">
            <summary>
            マテリアル(3D)を生成する。
            </summary>
            <param name="shader">シェーダー</param>
            <returns>マテリアル(3D)</returns>
        </member>
        <member name="M:ace.Graphics.CreateMaterialPropertyBlock">
            <summary>
            マテリアルプロパティブロックを生成する。
            </summary>
            <returns>マテリアルプロパティブロック</returns>
        </member>
        <member name="M:ace.Graphics.CreateMesh">
            <summary>
            メッシュを生成する。
            </summary>
            <returns>メッシュ</returns>
        </member>
        <member name="M:ace.Graphics.CreateDeformer">
            <summary>
            デフォーマーを生成する。
            </summary>
            <returns>デフォーマー</returns>
        </member>
        <member name="M:ace.Graphics.CreateModel(System.String)">
            <summary>
            モデルを生成する。
            </summary>
            <param name="path">パス</param>
            <returns>モデル</returns>
        </member>
        <member name="M:ace.Graphics.CreateMassModelFromModelFile(System.String)">
            <summary>
            大量描画用モデルを生成する。
            </summary>
            <param name="path">パス</param>
            <returns>大量描画用モデル</returns>
        </member>
        <member name="M:ace.Graphics.CreateMassModel(System.String)">
            <summary>
            大量描画用モデルを生成する。
            </summary>
            <param name="path">パス</param>
            <returns>大量描画用モデル</returns>
        </member>
        <member name="M:ace.Graphics.CreateTerrain3D">
            <summary>
            地形を生成する。
            </summary>
            <returns>地形</returns>
        </member>
        <member name="M:ace.Graphics.CreateEffect(System.String)">
            <summary>
            エフェクトを生成する。
            </summary>
            <param name="path">パス</param>
            <returns>エフェクト</returns>
        </member>
        <member name="M:ace.Graphics.CreateFont(System.String)">
            <summary>
            フォントを生成する。
            </summary>
            <param name="path">パス</param>
            <returns>フォント</returns>
        </member>
        <member name="M:ace.Graphics.CreateImagePackage(System.String)">
            <summary>
            画像パッケージを生成する。
            </summary>
            <param name="path">パス</param>
            <returns>画像パッケージ</returns>
        </member>
        <member name="P:ace.Graphics.DrawCallCount">
            <summary>
            1フレーム間に実行された描画命令の回数を取得する。
            </summary>
            <remarks>
            現在、エフェクトの描画回数はカウントされない。
            </remarks>
        </member>
        <member name="P:ace.Graphics.UsedVRAMSize">
            <summary>
            現在使用済みのVRAM容量を取得する。
            </summary>
            <remarks>
            値は推測値である。
            </remarks>
        </member>
        <member name="P:ace.Graphics.GraphicsDeviceType">
            <summary>
            描画ランタイムの種類を取得する。
            </summary>
        </member>
        <member name="T:ace.ImagePackage">
            <summary>
            複数の画像が格納されているクラス
            </summary>
            <summary>
            複数の画像が格納されているクラス 
            </summary>
        </member>
        <member name="M:ace.ImagePackage.GetImage(System.Int32)">
            <summary>
            画像を取得する。
            </summary>
            <param name="index">インデックス</param>
            <returns>画像</returns>
        </member>
        <member name="M:ace.ImagePackage.GetImageName(System.Int32)">
            <summary>
            格納されている画像の名称を取得する。 
            </summary>
            <param name="index">インデックス </param>
            <returns>名称 </returns>
        </member>
        <member name="M:ace.ImagePackage.GetImageArea(System.Int32)">
            <summary>
            格納されている画像が配置される領域を取得する。 
            </summary>
            <param name="index">インデックス </param>
            <returns>領域 </returns>
        </member>
        <member name="P:ace.ImagePackage.ImageCount">
            <summary>
            格納されている画像の枚数を取得する。
            </summary>
        </member>
        <member name="T:ace.MassModel">
            <summary>
            大量描画が可能な3Dモデルクラス
            </summary>
            <summary>
            大量描画が可能な3Dモデルクラス 
            </summary>
        </member>
        <member name="M:ace.MassModel.SetMaterial(ace.Material3D)">
            <summary>
            材質を設定する。
            </summary>
            <param name="material">材質</param>
        </member>
        <member name="M:ace.MassModel.GetAnimationName(System.Int32)">
            <summary>
            モデルが持つアニメーションの名称を取得する。 
            </summary>
            <param name="index">アニメーションのインデックス </param>
            <returns>アニメーションの名称 </returns>
        </member>
        <member name="M:ace.MassModel.GetAnimationLength(System.String)">
            <summary>
            モデルが持つアニメーションの長さ(60フレーム単位)を取得する。 
            </summary>
            <param name="name">アニメーション名 </param>
            <returns>アニメーションの長さ </returns>
        </member>
        <member name="M:ace.MassModel.GetIsAnimationLoopingMode(System.String)">
            <summary>
            アニメーションがループするかを取得する。 
            </summary>
            <param name="name">アニメーション名 </param>
            <returns>ループするか? </returns>
        </member>
        <member name="M:ace.MassModel.SetIsAnimationLoopingMode(System.String,System.Boolean)">
            <summary>
            アニメーションがループするかを設定する。 
            </summary>
            <param name="name">アニメーション名 </param>
            <param name="isLoopingMode"></param>
        </member>
        <member name="P:ace.MassModel.AnimationCount">
            <summary>
            モデルが持つアニメーションの個数を取得する。
            </summary>
        </member>
        <member name="T:ace.Material2D">
            <summary>
            
            </summary>
        </member>
        <member name="M:ace.Material2D.GetFloat(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ace.Material2D.SetFloat(System.String,System.Single)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:ace.Material2D.GetVector2DF(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ace.Material2D.SetVector2DF(System.String,ace.Vector2DF)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:ace.Material2D.GetVector3DF(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ace.Material2D.SetVector3DF(System.String,ace.Vector3DF)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:ace.Material2D.GetVector4DF(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ace.Material2D.SetVector4DF(System.String,ace.Vector4DF)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:ace.Material2D.SetTexture2D(System.String,ace.Texture2D)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:ace.Material2D.GetTextureFilterType(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ace.Material2D.SetTextureFilterType(System.String,ace.TextureFilterType)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="filter"></param>
        </member>
        <member name="M:ace.Material2D.GetTextureWrapType(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ace.Material2D.SetTextureWrapType(System.String,ace.TextureWrapType)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="wrap"></param>
        </member>
        <member name="T:ace.Material3D">
            <summary>
            
            </summary>
        </member>
        <member name="M:ace.Material3D.GetFloat(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ace.Material3D.SetFloat(System.String,System.Single)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:ace.Material3D.GetVector2DF(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ace.Material3D.SetVector2DF(System.String,ace.Vector2DF)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:ace.Material3D.GetVector3DF(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ace.Material3D.SetVector3DF(System.String,ace.Vector3DF)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:ace.Material3D.GetVector4DF(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ace.Material3D.SetVector4DF(System.String,ace.Vector4DF)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:ace.Material3D.SetTexture2D(System.String,ace.Texture2D)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:ace.Material3D.GetTextureFilterType(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ace.Material3D.SetTextureFilterType(System.String,ace.TextureFilterType)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="filter"></param>
        </member>
        <member name="M:ace.Material3D.GetTextureWrapType(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ace.Material3D.SetTextureWrapType(System.String,ace.TextureWrapType)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="wrap"></param>
        </member>
        <member name="T:ace.MaterialPropertyBlock">
            <summary>
            マテリアルへのパラメーターの集合
            </summary>
        </member>
        <member name="T:ace.Mesh">
            <summary>
            3Dメッシュのクラス
            </summary>
            <summary>
            3Dメッシュのクラス 
            </summary>
        </member>
        <member name="M:ace.Mesh.SetMaterial(System.Int32,ace.Material3D)">
            <summary>
            材質を設定する。
            </summary>
            <param name="materialIndex">材質のインデックス</param>
            <param name="material">材質</param>
            <remarks>AddMaterialCountを実行した後でないと無効になる。</remarks>
        </member>
        <member name="M:ace.Mesh.AddVertex(ace.Vector3DF,ace.Vector3DF,ace.Vector3DF,ace.Vector2DF,ace.Vector2DF,ace.Color,System.Int32,System.Int32)">
            <summary>
            頂点を追加する。 
            </summary>
            <param name="position">座標 </param>
            <param name="normal">法線 </param>
            <param name="binormal">従法線 </param>
            <param name="uv1">UV1 </param>
            <param name="uv2">UV2 </param>
            <param name="color">頂点色 </param>
            <param name="boneWeights">ボーンのウエイト </param>
            <param name="boneIndexes">ボーンのインデックス </param>
        </member>
        <member name="M:ace.Mesh.AddFace(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            面を追加する。 
            </summary>
            <param name="index1">頂点インデックス1 </param>
            <param name="index2">頂点インデックス2 </param>
            <param name="index3">頂点インデックス3 </param>
            <param name="materialIndex">材質インデックス </param>
        </member>
        <member name="M:ace.Mesh.AddBoneConnector(System.Int32,ace.Matrix44)">
            <summary>
            ボーンとの接続設定を追加する。 
            </summary>
            <param name="targetIndex">対象ボーンインデックス </param>
            <param name="boneToMesh">ボーンの行列をメッシュの行列に変換する行列 </param>
        </member>
        <member name="M:ace.Mesh.AddMaterial">
            <summary>
            材質を追加する。 
            </summary>
            <returns>材質のインデックス </returns>
        </member>
        <member name="M:ace.Mesh.SendToGPUMemory">
            <summary>
            設定した値をGPUに送信する。 
            </summary>
        </member>
        <member name="M:ace.Mesh.SetColorTexture(System.Int32,ace.Texture2D)">
            <summary>
            内部シェーダーを使用する場合のカラーテクスチャを設定する。 
            </summary>
            <param name="materialIndex">材質のインデックス </param>
            <param name="texture"></param>
        </member>
        <member name="M:ace.Mesh.SetNormalTexture(System.Int32,ace.Texture2D)">
            <summary>
            内部シェーダーを使用する場合の法線テクスチャを設定する。 
            </summary>
            <param name="materialIndex">材質のインデックス </param>
            <param name="texture"></param>
        </member>
        <member name="M:ace.Mesh.SetMetalnessTexture(System.Int32,ace.Texture2D)">
            <summary>
            内部シェーダーを使用する場合の金属度テクスチャを設定する。 
            </summary>
            <param name="materialIndex">材質のインデックス </param>
            <param name="texture"></param>
        </member>
        <member name="M:ace.Mesh.SetSmoothnessTexture(System.Int32,ace.Texture2D)">
            <summary>
            内部シェーダーを使用する場合の面平滑度テクスチャを設定する。 
            </summary>
            <param name="materialIndex">材質のインデックス </param>
            <param name="texture"></param>
        </member>
        <member name="T:ace.Model">
            <summary>
            3Dモデルクラス
            </summary>
            <summary>
            3Dモデルクラス 
            </summary>
        </member>
        <member name="M:ace.Model.GetAnimationClip(System.Int32)">
            <summary>
            モデルが持つアニメーションクリップを取得する。
            </summary>
            <param name="index">アニメーションクリップのインデックス</param>
            <returns>アニメーションクリップ</returns>
        </member>
        <member name="M:ace.Model.GetMesh(System.Int32)">
            <summary>
            メッシュを取得する。
            </summary>
            <param name="index">メッシュのインデックス</param>
            <returns></returns>
        </member>
        <member name="M:ace.Model.GetAnimationClipName(System.Int32)">
            <summary>
            モデルが持つアニメーションクリップの名称を取得する。 
            </summary>
            <param name="index">アニメーションクリップのインデックス </param>
            <returns>アニメーションクリップの名称 </returns>
        </member>
        <member name="P:ace.Model.MeshCount">
            <summary>
            モデルが持つメッシュの個数を取得する。
            </summary>
        </member>
        <member name="P:ace.Model.AnimationClipCount">
            <summary>
            モデルが持つアニメーションクリップの個数を取得する。
            </summary>
        </member>
        <member name="T:ace.Texture2D">
            <summary>
            
            </summary>
        </member>
        <member name="M:ace.Texture2D.Lock(ace.TextureLockInfomation)">
            <summary>
            テクスチャをロックし編集可能にする。
            </summary>
            <param name="info">テクスチャ情報</param>
            <returns>成否</returns>
        </member>
        <member name="M:ace.Texture2D.Save(System.String)">
            <summary>
            テクスチャをファイルに保存する。 
            </summary>
            <param name="path">出力先 </param>
            <returns>成否 </returns>
        </member>
        <member name="M:ace.Texture2D.Unlock">
            <summary>
            テクスチャをアンロックする。 
            </summary>
        </member>
        <member name="P:ace.Texture2D.Size">
            <summary>
            テクスチャのサイズを取得する。
            </summary>
        </member>
        <member name="P:ace.Texture2D.Format">
            <summary>
            テクスチャのフォーマットを取得する。
            </summary>
        </member>
        <member name="P:ace.Texture2D.Type">
            <summary>
            テクスチャのクラスの種類を取得する。
            </summary>
        </member>
        <member name="T:ace.Shader2D">
            <summary>
            シェーダー(2D) 
            </summary>
        </member>
        <member name="T:ace.Shader3D">
            <summary>
            シェーダー(3D) 
            </summary>
        </member>
        <member name="T:ace.Terrain3D">
            <summary>
            地形のクラス
            </summary>
            <summary>
            地形のクラス 
            </summary>
        </member>
        <member name="M:ace.Terrain3D.SetMaterial(System.Int32,ace.Material3D)">
            <summary>
            材質を設定する。
            </summary>
            <param name="material">材質</param>
        </member>
        <member name="M:ace.Terrain3D.New(System.Single,System.Int32,System.Int32)">
            <summary>
            新規に地形を作成する。 
            </summary>
            <param name="gridSize">グリッド1つ当たりの大きさ </param>
            <param name="gridWidthCount">横方向のグリッド数 </param>
            <param name="gridHeightCount">縦方向のグリッド数 </param>
        </member>
        <member name="M:ace.Terrain3D.AddSurface(System.String,System.Single,System.String,System.String,System.String)">
            <summary>
            素材を追加する。 
            </summary>
            <param name="name">素材名 </param>
            <param name="size">素材のテクスチャ1枚あたりの大きさ </param>
            <param name="color">色テクスチャのパス </param>
            <param name="normal">法線テクスチャのパス </param>
            <param name="metalness">スペキュラテクスチャのパス </param>
        </member>
        <member name="M:ace.Terrain3D.GetSurfaceIndex(System.String)">
            <summary>
            素材インデックスを取得する。 
            </summary>
            <param name="name">素材名 </param>
            <returns>素材インデックス </returns>
        </member>
        <member name="M:ace.Terrain3D.AssignSurfaceWithCircle(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            素材を円形に割り当てる。 
            </summary>
            <param name="surfaceIndex">素材インデックス </param>
            <param name="x">円形の中心座標 </param>
            <param name="y">円形の中心座標 </param>
            <param name="radius">円形の半径 </param>
            <param name="value">割り当てる値(-255～255) </param>
            <param name="fallout">周囲のぼかし(0～1) </param>
        </member>
        <member name="M:ace.Terrain3D.RaiseWithCircle(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            円形に地形を上下させる。 
            </summary>
            <param name="x">円形の中心座標 </param>
            <param name="y">円形の中心座標 </param>
            <param name="radius">円形の半径 </param>
            <param name="value">値 </param>
            <param name="fallout">周囲のぼかし(0～1) </param>
        </member>
        <member name="M:ace.Terrain3D.ChangeCliffesWithCircle(System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            円形に崖の生成を伴う地形の上下をさせる。 
            </summary>
            <param name="x">円形の中心座標 </param>
            <param name="y">円形の中心座標 </param>
            <param name="radius">円形の半径 </param>
            <param name="value">値 </param>
        </member>
        <member name="M:ace.Terrain3D.CastRay(ace.Vector3DF,ace.Vector3DF)">
            <summary>
            光線を飛ばし、衝突した位置を取得する。 
            </summary>
            <param name="from">光線を飛ばす元の位置 </param>
            <param name="to">光線を飛ばす先の位置 </param>
            <returns>光線が地形に衝突した位置。衝突しない場合、NaNを返す。 </returns>
        </member>
        <member name="T:ace.Joystick">
            <summary>
            指定したコンポーネントをこのインスタンスに追加する。 
            </summary>
        </member>
        <member name="M:ace.Joystick.#ctor(ace.swig.Joystick)">
            <summary>
            コンストラクタ
            </summary>
            <param name="js">ネイティブインタフェース</param>
        </member>
        <member name="M:ace.Joystick.GetButtonState(System.Int32)">
            <summary>
            指定したボタンの押し状態を返す 
            </summary>
            <param name="at">何番目のボタンの押し状態を取得するか </param>
            <returns>押し状態 </returns>
        </member>
        <member name="M:ace.Joystick.GetAxisState(System.Int32)">
            <summary>
            指定した軸の倒し具合を返す 
            </summary>
            <param name="at">何番目の軸配列の倒し具合を取得するか </param>
            <returns>倒し具合 </returns>
        </member>
        <member name="P:ace.Joystick.JoystickName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ace.Joystick.ButtonsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:ace.Joystick.AxesCount">
            <summary>
            
            </summary>
        </member>
        <member name="T:ace.JoystickContainer">
            <summary>
            
            </summary>
        </member>
        <member name="M:ace.JoystickContainer.#ctor(ace.swig.JoystickContainer)">
            <summary>
            コンストラクタ
            </summary>
            <param name="jc">ネイティブインタフェース</param>
        </member>
        <member name="M:ace.JoystickContainer.GetJoystickAt(System.Int32)">
            <summary>
            引数に指定した番号のジョイスティッククラスを返す。
            </summary>
            <param name="at">何番目のジョイスティッククラスを取得するか</param>
            <returns>該当するジョイスティッククラス</returns>
        </member>
        <member name="M:ace.JoystickContainer.GetIsPresentAt(System.Int32)">
            <summary>
            引数に指定した番号のジョイスティックが接続されているかを取得する。 
            </summary>
            <param name="at">何番目のジョイスティックの接続を確認するか </param>
            <returns>接続されているか否か </returns>
        </member>
        <member name="M:ace.JoystickContainer.RefreshAllJoysticks">
            <summary>
            全てのジョイスティックの接続状態を更新する。 
            </summary>
        </member>
        <member name="T:ace.Keyboard">
            <summary>
            キーボードからの入力を取得するクラス
            </summary>
            <summary>
            キーボードからの入力を取得するクラス 
            </summary>
        </member>
        <member name="M:ace.Keyboard.#ctor(ace.swig.Keyboard)">
            <summary>
            コンストラクタ
            </summary>
            <param name="kb">C++へのインタフェースクラス</param>
        </member>
        <member name="M:ace.Keyboard.GetKeyState(ace.Keys)">
            <summary>
            特定のキーの押し状態をKeyState列挙型で返す 
            </summary>
            <param name="key"></param>
            <returns>押し状態 </returns>
        </member>
        <member name="T:ace.MiddleButton">
            <summary>
            マウスの中ボタンの状態を扱うクラス
            </summary>
        </member>
        <member name="F:ace.MiddleButton.rotation">
            <summary>
            回転度合いを保持する変数
            </summary>
        </member>
        <member name="F:ace.MiddleButton.mouseButtonState">
            <summary>
            押下状態を保持する変数
            </summary>
        </member>
        <member name="M:ace.MiddleButton.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:ace.MiddleButton.SetState(ace.MouseButtonState,System.Double)">
            <summary>
            押し状態とホイール回転状態をセットする関数
            </summary>
            <param name="mbuttonstate">押し状態</param>
            <param name="rot">回転度合い</param>
        </member>
        <member name="P:ace.MiddleButton.WheelRotation">
            <summary>
            ホイールの回転度合いを返すプロパティ
            </summary>
        </member>
        <member name="P:ace.MiddleButton.ButtonState">
            <summary>
            ボタンの押し状態を返すプロパティ
            </summary>
        </member>
        <member name="T:ace.Mouse">
            <summary>
            マウスからの入力を取得するクラス
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:ace.Mouse.#ctor(ace.swig.Mouse)">
            <summary>
            コンストラクタ
            </summary>
            <param name="m">ネイティブインタフェース</param>
        </member>
        <member name="P:ace.Mouse.LeftButton">
            <summary>
            左ボタンの状態を返すプロパティ
            </summary>
        </member>
        <member name="P:ace.Mouse.RightButton">
            <summary>
            右ボタンの状態を返すプロパティ
            </summary>
        </member>
        <member name="P:ace.Mouse.MiddleButton">
            <summary>
            中ボタンの状態を返すプロパティ
            </summary>
        </member>
        <member name="P:ace.Mouse.Position">
            <summary>
            
            </summary>
        </member>
        <member name="T:ace.SideButton">
            <summary>
            マウスの左右ボタンの状態を扱うクラス
            </summary>
        </member>
        <member name="F:ace.SideButton.mouseButtonState">
            <summary>
            押下状態を保持する変数
            </summary>
        </member>
        <member name="M:ace.SideButton.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:ace.SideButton.SetState(ace.MouseButtonState)">
            <summary>
            ボタンの押し状態をセットする関数
            </summary>
            <param name="mButtonState">押し状態</param>
        </member>
        <member name="P:ace.SideButton.ButtonState">
            <summary>
            ボタンの押し状態を返すプロパティ
            </summary>
        </member>
        <member name="T:ace.File">
            <summary>
            ファイルの操作に関する処理を提供するクラス 
            </summary>
        </member>
        <member name="M:ace.File.AddRootDirectory(System.String)">
            <summary>
            ファイル操作する時のルートのディレクトリを追加する。 
            </summary>
            <param name="path">ルートのディレクトリのパス </param>
        </member>
        <member name="M:ace.File.AddRootPackageWithPassword(System.String,System.String)">
            <summary>
            ファイル操作する時のルートのパスワード付パッケージを追加する。 
            </summary>
            <param name="path">パッケージのパス </param>
            <param name="password">パスワード </param>
        </member>
        <member name="M:ace.File.AddRootPackage(System.String)">
            <summary>
            ファイル操作する時のルートのパッケージを追加する。 
            </summary>
            <param name="path">パッケージのパス </param>
        </member>
        <member name="M:ace.File.ClearRootDirectories">
            <summary>
            追加されたパッケージを全て消去する。 
            </summary>
        </member>
        <member name="M:ace.File.Exists(System.String)">
            <summary>
            ファイルが存在するか取得する。 
            </summary>
            <param name="path">ファイルのパス </param>
            <returns>ファイルが存在するか? </returns>
        </member>
        <member name="T:ace.StaticFile">
            <summary>
            一括してファイルを読み込むクラス 
            </summary>
        </member>
        <member name="M:ace.StaticFile.Destroy">
            <summary>
            
            </summary>
        </member>
        <member name="P:ace.StaticFile.IsDestroyed">
            <summary>
            
            </summary>
        </member>
        <member name="P:ace.StaticFile.Buffer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:ace.StaticFile.FullPath">
            <summary>
            ファイルのパスを取得する。
            </summary>
        </member>
        <member name="P:ace.StaticFile.Data">
            <summary>
            読み込まれたバッファの先頭のポインタを取得する。
            </summary>
        </member>
        <member name="P:ace.StaticFile.Size">
            <summary>
            読み込まれたバッファのサイズを取得する。
            </summary>
        </member>
        <member name="T:ace.StreamFile">
            <summary>
            部分的にファイルを読み込むクラス 
            </summary>
        </member>
        <member name="M:ace.StreamFile.Destroy">
            <summary>
            
            </summary>
        </member>
        <member name="P:ace.StreamFile.IsDestroyed">
            <summary>
            
            </summary>
        </member>
        <member name="P:ace.StreamFile.Size">
            <summary>
            ファイルのサイズを取得する。
            </summary>
        </member>
        <member name="P:ace.StreamFile.CurrentPosition">
            <summary>
            ファイル内で現在読み込んでいる位置を取得する。
            </summary>
        </member>
        <member name="T:ace.Log">
            <summary>
            テキスト形式でログを記録し、HTMLファイルに保存する機能を提供するクラス。
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:ace.Log.#ctor(ace.swig.Log)">
            <summary>
            Logクラスをインスタンス化します。
            </summary>
            <param name="log">ネイティブのラッパー</param>
        </member>
        <member name="M:ace.Log.Write(System.String,ace.LogLevel)">
            <summary>
            ログ ファイルへ文字列を書き込む。 
            </summary>
            <param name="text">[in] 書き込む文字列 </param>
            <param name="level">[in] ログの出力レベル </param>
        </member>
        <member name="M:ace.Log.Write(System.String)">
            <summary>
            ログ ファイルへ文字列を書き込む。 
            </summary>
            <param name="text">[in] 書き込む文字列 </param>
        </member>
        <member name="M:ace.Log.WriteLine(System.String,ace.LogLevel)">
            <summary>
            ログ ファイルへ文字列を書き込み、改行する。 
            </summary>
            <param name="text">[in] 書き込む文字列 </param>
            <param name="level">[in] ログの出力レベル </param>
        </member>
        <member name="M:ace.Log.WriteLine(System.String)">
            <summary>
            ログ ファイルへ文字列を書き込み、改行する。 
            </summary>
            <param name="text">[in] 書き込む文字列 </param>
        </member>
        <member name="M:ace.Log.WriteStrongly(System.String,ace.LogLevel)">
            <summary>
            ログ ファイルへ強調された文字列を書き込む。 
            </summary>
            <param name="text">[in] 書き込む文字列 </param>
            <param name="level">[in] ログの出力レベル </param>
        </member>
        <member name="M:ace.Log.WriteStrongly(System.String)">
            <summary>
            ログ ファイルへ強調された文字列を書き込む。 
            </summary>
            <param name="text">[in] 書き込む文字列 </param>
        </member>
        <member name="M:ace.Log.WriteLineStrongly(System.String,ace.LogLevel)">
            <summary>
            ログ ファイルへ強調された文字列を書き込み、改行する。 
            </summary>
            <param name="text">[in] 書き込む文字列 </param>
            <param name="level">[in] ログの出力レベル </param>
        </member>
        <member name="M:ace.Log.WriteLineStrongly(System.String)">
            <summary>
            ログ ファイルへ強調された文字列を書き込み、改行する。 
            </summary>
            <param name="text">[in] 書き込む文字列 </param>
        </member>
        <member name="M:ace.Log.WriteHeading(System.String,ace.LogLevel)">
            <summary>
            ログ ファイルへ見出しとして文字列を書き込む。 
            </summary>
            <param name="text">[in] 書き込む文字列 </param>
            <param name="level">[in] ログの出力レベル </param>
        </member>
        <member name="M:ace.Log.WriteHeading(System.String)">
            <summary>
            ログ ファイルへ見出しとして文字列を書き込む。 
            </summary>
            <param name="text">[in] 書き込む文字列 </param>
        </member>
        <member name="M:ace.Log.WriteHorizontalRule(ace.LogLevel)">
            <summary>
            ログ ファイルへ水平線を書き込む。 
            </summary>
            <param name="level">[in] ログの出力レベル </param>
        </member>
        <member name="M:ace.Log.WriteHorizontalRule">
            <summary>
            ログ ファイルへ水平線を書き込む。 
            </summary>
        </member>
        <member name="M:ace.Log.BeginTable(ace.LogLevel)">
            <summary>
            ログ ファイルへ表形式( 
            </summary>
            <param name="level">[in] ログの出力レベル </param>
        </member>
        <member name="M:ace.Log.BeginTable">
            <summary>
            ログ ファイルへ表形式( 
            </summary>
        </member>
        <member name="M:ace.Log.EndTable(ace.LogLevel)">
            <summary>
            ログ ファイルへの表形式( 
            </summary>
            <param name="level">[in] ログの出力レベル </param>
        </member>
        <member name="M:ace.Log.EndTable">
            <summary>
            ログ ファイルへの表形式( 
            </summary>
        </member>
        <member name="M:ace.Log.ChangeRow(ace.LogLevel)">
            <summary>
            表形式での出力において、新しい行に移動する。 
            </summary>
            <param name="level">[in] ログの出力レベル </param>
        </member>
        <member name="M:ace.Log.ChangeRow">
            <summary>
            表形式での出力において、新しい行に移動する。 
            </summary>
        </member>
        <member name="M:ace.Log.ChangeColumn(ace.LogLevel)">
            <summary>
            表形式での出力において、新しい列に移動する。 
            </summary>
            <param name="level">[in] ログの出力レベル </param>
        </member>
        <member name="M:ace.Log.ChangeColumn">
            <summary>
            表形式での出力において、新しい列に移動する。 
            </summary>
        </member>
        <member name="P:ace.Log.IsValid">
            <summary>
            ログの出力が可能であるかどうかを表す真偽値を取得する。
            </summary>
        </member>
        <member name="P:ace.Log.OutputLevel">
            <summary>
            ログの出力レベルを設定する。
            </summary>
        </member>
        <member name="T:ace.Matrix33">
            <summary>
            3×3行列を表す構造体
            </summary>
        </member>
        <member name="M:ace.Matrix33.SetIdentity">
            <summary>
            単位行列を設定する。
            </summary>
        </member>
        <member name="M:ace.Matrix33.SetTransposed">
            <summary>
            転置行列を設定する。
            </summary>
        </member>
        <member name="M:ace.Matrix33.SetInverted">
            <summary>
            逆行列を設定する。
            </summary>
        </member>
        <member name="M:ace.Matrix33.GetInverted">
            <summary>
            逆行列を取得する。
            </summary>
            <returns></returns>
        </member>
        <member name="M:ace.Matrix33.SetTranslation(System.Single,System.Single)">
            <summary>
            平行移動の行列を設定する。
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:ace.Matrix33.SetRotation(System.Single)">
            <summary>
            回転行列を設定する。
            </summary>
            <param name="angle"></param>
        </member>
        <member name="M:ace.Matrix33.SetScale(System.Single,System.Single)">
            <summary>
            拡大・縮小行列を設定する。
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:ace.Matrix33.Transform2D(ace.Vector2DF)">
            <summary>
            行列でベクトルを変形させる。
            </summary>
            <param name="in_">変形前ベクトル</param>
            <returns>変形後ベクトル</returns>
        </member>
        <member name="M:ace.Matrix33.Transform3D(ace.Vector3DF)">
            <summary>
            行列でベクトルを変形させる。
            </summary>
            <param name="in_">変形前ベクトル</param>
            <returns>変形後ベクトル</returns>
        </member>
        <member name="T:ace.Matrix44">
            <summary>
            4×4行列を表す構造体
            </summary>
        </member>
        <member name="M:ace.Matrix44.SetIdentity">
            <summary>
            単位行列を設定する。
            </summary>
        </member>
        <member name="M:ace.Matrix44.SetTransposed">
            <summary>
            転置行列を設定する。
            </summary>
        </member>
        <member name="M:ace.Matrix44.SetInverted">
            <summary>
            逆行列を設定する。
            </summary>
        </member>
        <member name="M:ace.Matrix44.GetInverted">
            <summary>
            逆行列を取得する。
            </summary>
            <returns></returns>
        </member>
        <member name="M:ace.Matrix44.SetLookAtRH(ace.Vector3DF,ace.Vector3DF,ace.Vector3DF)">
            <summary>
            カメラ行列(右手系)を設定する。
            </summary>
            <param name="eye">カメラの位置</param>
            <param name="at">カメラの注視点</param>
            <param name="up">カメラの上方向</param>
        </member>
        <member name="M:ace.Matrix44.SetLookAtLH(ace.Vector3DF,ace.Vector3DF,ace.Vector3DF)">
            <summary>
            カメラ行列(左手系)を設定する。
            </summary>
            <param name="eye">カメラの位置</param>
            <param name="at">カメラの注視点</param>
            <param name="up">カメラの上方向</param>
        </member>
        <member name="M:ace.Matrix44.SetPerspectiveFovRH(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            射影行列(右手系)を設定する。
            </summary>
            <param name="ovY">Y方向への視野角(ラジアン)</param>
            <param name="aspect">画面のアスペクト比</param>
            <param name="zn">最近距離</param>
            <param name="zf">最遠距離</param>
        </member>
        <member name="M:ace.Matrix44.SetPerspectiveFovRH_OpenGL(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            OpenGL用射影行列(右手系)を設定する。
            </summary>
            <param name="ovY">Y方向への視野角(ラジアン)</param>
            <param name="aspect">画面のアスペクト比</param>
            <param name="zn">最近距離</param>
            <param name="zf">最遠距離</param>
        </member>
        <member name="M:ace.Matrix44.SetPerspectiveFovLH(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            射影行列(左手系)を設定する。
            </summary>
            <param name="ovY">Y方向への視野角(ラジアン)</param>
            <param name="aspect">画面のアスペクト比</param>
            <param name="zn">最近距離</param>
            <param name="zf">最遠距離</param>
        </member>
        <member name="M:ace.Matrix44.SetOrthographicRH(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            正射影行列(右手系)を設定する。
            </summary>
            <param name="width">横幅</param>
            <param name="height">縦幅</param>
            <param name="zn">最近距離</param>
            <param name="zf">最遠距離</param>
        </member>
        <member name="M:ace.Matrix44.SetOrthographicLH(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            正射影行列(左手系)を設定する。
            </summary>
            <param name="width">横幅</param>
            <param name="height">縦幅</param>
            <param name="zn">最近距離</param>
            <param name="zf">最遠距離</param>
        </member>
        <member name="M:ace.Matrix44.SetTranslation(System.Single,System.Single,System.Single)">
            <summary>
            並行移動行列を設定する。
            </summary>
            <param name="x">X方向移動量</param>
            <param name="y">Y方向移動量</param>
            <param name="z">Z方向移動量</param>
        </member>
        <member name="M:ace.Matrix44.SetRotationX(System.Single)">
            <summary>
            X軸回転行列(右手)を設定する。
            </summary>
            <param name="angle">X軸回転量(ラジアン)</param>
        </member>
        <member name="M:ace.Matrix44.SetRotationY(System.Single)">
            <summary>
            Y軸回転行列(右手)を設定する。
            </summary>
            <param name="angle">Y軸回転量(ラジアン)</param>
        </member>
        <member name="M:ace.Matrix44.SetRotationZ(System.Single)">
            <summary>
            Z軸回転行列(右手)を設定する。
            </summary>
            <param name="angle">Z軸回転量(ラジアン)</param>
        </member>
        <member name="M:ace.Matrix44.SetRotationAxis(ace.Vector3DF@,System.Single)">
            <summary>
            任意軸の反時計回転行列(右手)を設定する。
            </summary>
            <param name="axis">軸</param>
            <param name="angle">回転量(ラジアン)</param>
        </member>
        <member name="M:ace.Matrix44.SetQuaternion(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            クオータニオンを元に回転行列(右手)を設定する。
            </summary>
            <param name="x">クオータニオン</param>
            <param name="y">クオータニオン</param>
            <param name="z">クオータニオン</param>
            <param name="w">クオータニオン</param>
        </member>
        <member name="M:ace.Matrix44.SetScale(System.Single,System.Single,System.Single)">
            <summary>
            拡大行列を設定する。
            </summary>
            <param name="x">X方向拡大率</param>
            <param name="y">Y方向拡大率</param>
            <param name="z">Z方向拡大率</param>
        </member>
        <member name="M:ace.Matrix44.Transform3D(ace.Vector3DF)">
            <summary>
            行列でベクトルを変形させる。
            </summary>
            <param name="in_">変形前ベクトル</param>
            <returns>変形後ベクトル</returns>
        </member>
        <member name="M:ace.Matrix44.Transform4D(ace.Vector4DF)">
            <summary>
            行列でベクトルを変形させる。
            </summary>
            <param name="in_">変形前ベクトル</param>
            <returns>変形後ベクトル</returns>
        </member>
        <member name="M:ace.Matrix44.Mul(ace.Matrix44@,ace.Matrix44@,ace.Matrix44@)">
            <summary>
            乗算を行う。
            </summary>
            <param name="o">出力先</param>
            <param name="in1">行列1</param>
            <param name="in2">行列2</param>
        </member>
        <member name="T:ace.RectF">
            <summary>
            長方形(浮動小数点)の構造体
            </summary>
        </member>
        <member name="M:ace.RectF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            コンストラクタ
            </summary>
            <param name="x">左上X座標</param>
            <param name="y">左上Y座標</param>
            <param name="width">横幅</param>
            <param name="height">縦幅</param>
        </member>
        <member name="P:ace.RectF.X">
            <summary>
            左上X座標
            </summary>
        </member>
        <member name="P:ace.RectF.Y">
            <summary>
            左上Y座標
            </summary>
        </member>
        <member name="P:ace.RectF.Width">
            <summary>
            横幅
            </summary>
        </member>
        <member name="P:ace.RectF.Height">
            <summary>
            縦幅
            </summary>
        </member>
        <member name="P:ace.RectF.Position">
            <summary>
            左上座標を取得する。
            </summary>
        </member>
        <member name="P:ace.RectF.Size">
            <summary>
            大きさを取得する。
            </summary>
        </member>
        <member name="P:ace.RectF.Vertexes">
            <summary>
            四隅の座標を(X,Y)、(X+Width,Y)、(X+Width,Y+Height)、(X,Y+Height)の順に配列として取得する。
            </summary>
        </member>
        <member name="T:ace.RectI">
            <summary>
            長方形(整数)の構造体
            </summary>
        </member>
        <member name="M:ace.RectI.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="x">左上X座標</param>
            <param name="y">左上Y座標</param>
            <param name="width">横幅</param>
            <param name="height">縦幅</param>
        </member>
        <member name="P:ace.RectI.X">
            <summary>
            左上X座標
            </summary>
        </member>
        <member name="P:ace.RectI.Y">
            <summary>
            左上Y座標
            </summary>
        </member>
        <member name="P:ace.RectI.Width">
            <summary>
            横幅
            </summary>
        </member>
        <member name="P:ace.RectI.Height">
            <summary>
            縦幅
            </summary>
        </member>
        <member name="P:ace.RectI.Position">
            <summary>
            左上座標を取得する。
            </summary>
        </member>
        <member name="P:ace.RectI.Size">
            <summary>
            大きさを取得する。
            </summary>
        </member>
        <member name="P:ace.RectI.Vertexes">
            <summary>
            四隅の座標を(X,Y)、(X+Width,Y)、(X+Width,Y+Height)、(X,Y+Height)の順に配列として取得する。
            </summary>
        </member>
        <member name="T:ace.Vector2DF">
            <summary>
            2次元ベクトル
            </summary>
        </member>
        <member name="M:ace.Vector2DF.#ctor(System.Single,System.Single)">
            <summary>
            コンストラクタ
            </summary>
            <param name="x">X</param>
            <param name="y">Y</param>
        </member>
        <member name="F:ace.Vector2DF.X">
            <summary>
            X
            </summary>
        </member>
        <member name="F:ace.Vector2DF.Y">
            <summary>
            Y
            </summary>
        </member>
        <member name="M:ace.Vector2DF.Normalize">
            <summary>
            このベクトルを単位ベクトル化する。
            </summary>
        </member>
        <member name="M:ace.Vector2DF.Cross(ace.Vector2DF,ace.Vector2DF)">
            <summary>
            外積を取得する。
            </summary>
            <param name="v1">値1</param>
            <param name="v2">値2</param>
            <returns>外積</returns>
        </member>
        <member name="M:ace.Vector2DF.Dot(ace.Vector2DF,ace.Vector2DF)">
            <summary>
            内積を取得する。
            </summary>
            <param name="v1">値1</param>
            <param name="v2">値2</param>
            <returns>内積</returns>
        </member>
        <member name="M:ace.Vector2DF.Distance(ace.Vector2DF,ace.Vector2DF)">
            <summary>
            2点間の距離を取得する。
            </summary>
            <param name="v1">値1</param>
            <param name="v2">値2</param>
            <returns>距離</returns>
        </member>
        <member name="P:ace.Vector2DF.Length">
            <summary>
            ベクトルの長さを取得または設定する。
            </summary>
        </member>
        <member name="P:ace.Vector2DF.SquaredLength">
            <summary>
            ベクトルの長さの二乗を取得する。
            </summary>
        </member>
        <member name="P:ace.Vector2DF.Normal">
            <summary>
            このベクトルの単位ベクトルを取得する。
            </summary>
        </member>
        <member name="P:ace.Vector2DF.Radian">
            <summary>
            ベクトルの向きを弧度法で取得または設定する。
            </summary>
        </member>
        <member name="P:ace.Vector2DF.Degree">
            <summary>
            ベクトルの向きを度数法で取得または設定する。
            </summary>
        </member>
        <member name="T:ace.Vector2DI">
            <summary>
            2次元ベクトル(整数)
            </summary>
        </member>
        <member name="F:ace.Vector2DI.X">
            <summary>
            X
            </summary>
        </member>
        <member name="F:ace.Vector2DI.Y">
            <summary>
            Y
            </summary>
        </member>
        <member name="M:ace.Vector2DI.#ctor(System.Int32,System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="x">X</param>
            <param name="y">Y</param>
        </member>
        <member name="T:ace.Vector3DF">
            <summary>
            3次元ベクトル
            </summary>
        </member>
        <member name="F:ace.Vector3DF.X">
            <summary>
            X
            </summary>
        </member>
        <member name="F:ace.Vector3DF.Y">
            <summary>
            Y
            </summary>
        </member>
        <member name="F:ace.Vector3DF.Z">
            <summary>
            Z
            </summary>
        </member>
        <member name="M:ace.Vector3DF.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            コンストラクタ
            </summary>
            <param name="x">X</param>
            <param name="y">Y</param>
            <param name="z">Z</param>
        </member>
        <member name="M:ace.Vector3DF.Normalize">
            <summary>
            このベクトルを単位ベクトル化する。
            </summary>
        </member>
        <member name="M:ace.Vector3DF.Dot(ace.Vector3DF,ace.Vector3DF)">
            <summary>
            内積を取得する。
            </summary>
            <param name="v1">値1</param>
            <param name="v2">値2</param>
            <returns>内積</returns>
        </member>
        <member name="M:ace.Vector3DF.Cross(ace.Vector3DF,ace.Vector3DF)">
            <summary>
            外積を取得する。
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:ace.Vector3DF.Distance(ace.Vector3DF,ace.Vector3DF)">
            <summary>
            2点間の距離を取得する。
            </summary>
            <param name="v1">値1</param>
            <param name="v2">値2</param>
            <returns>距離</returns>
        </member>
        <member name="P:ace.Vector3DF.Length">
            <summary>
            ベクトルの長さを取得または設定する。
            </summary>
        </member>
        <member name="P:ace.Vector3DF.SquaredLength">
            <summary>
            ベクトルの長さの二乗を取得する。
            </summary>
        </member>
        <member name="P:ace.Vector3DF.Normal">
            <summary>
            このベクトルの単位ベクトルを取得する。
            </summary>
        </member>
        <member name="T:ace.Vector4DF">
            <summary>
            4次元ベクトル
            </summary>
        </member>
        <member name="F:ace.Vector4DF.X">
            <summary>
            X
            </summary>
        </member>
        <member name="F:ace.Vector4DF.Y">
            <summary>
            Y
            </summary>
        </member>
        <member name="F:ace.Vector4DF.Z">
            <summary>
            Z
            </summary>
        </member>
        <member name="F:ace.Vector4DF.W">
            <summary>
            W
            </summary>
        </member>
        <member name="M:ace.Vector4DF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            コンストラクタ
            </summary>
            <param name="x">X</param>
            <param name="y">Y</param>
            <param name="z">Z</param>
            <param name="w">W</param>
        </member>
        <member name="M:ace.Vector4DF.Normalize">
            <summary>
            このベクトルを単位ベクトル化する。
            </summary>
        </member>
        <member name="M:ace.Vector4DF.Dot(ace.Vector4DF,ace.Vector4DF)">
            <summary>
            内積を取得する。
            </summary>
            <param name="v1">値1</param>
            <param name="v2">値2</param>
            <returns>内積</returns>
        </member>
        <member name="M:ace.Vector4DF.Distance(ace.Vector4DF,ace.Vector4DF)">
            <summary>
            2点間の距離を取得する。
            </summary>
            <param name="v1">値1</param>
            <param name="v2">値2</param>
            <returns>距離</returns>
        </member>
        <member name="P:ace.Vector4DF.Length">
            <summary>
            ベクトルの長さを取得または設定する。
            </summary>
        </member>
        <member name="P:ace.Vector4DF.SquaredLength">
            <summary>
            ベクトルの長さの二乗を取得する。
            </summary>
        </member>
        <member name="P:ace.Vector4DF.Normal">
            <summary>
            このベクトルの単位ベクトルを取得する。
            </summary>
        </member>
        <member name="T:ace.CameraObject2D">
            <summary>
            2Dレイヤーの一部を描画するためのカメラ
            </summary>
        </member>
        <member name="T:ace.Object2D">
            <summary>
            更新・描画処理を行う単位となる2Dオブジェクトの機能を提供する抽象クラス。
            </summary>
        </member>
        <member name="M:ace.Object2D.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:ace.Object2D.GetGlobalPosition">
            <summary>
            この2Dオブジェクトを描画する際の実際の位置を取得または設定する。親子関係がある場合に、親の位置を考慮した位置を取得できる。
            </summary>
            <returns>この2Dオブジェクトの位置。</returns>
        </member>
        <member name="M:ace.Object2D.Vanish">
            <summary>
            この2Dオブジェクトを破棄します。
            </summary>
        </member>
        <member name="M:ace.Object2D.AddChild(ace.Object2D,ace.ChildMode)">
            <summary>
            指定した2Dオブジェクトを子オブジェクトとしてこのインスタンスに追加する。
            </summary>
            <param name="child">追加する子オブジェクト</param>
            <param name="mode">子オブジェクトの同期モード</param>
        </member>
        <member name="M:ace.Object2D.RemoveChild(ace.Object2D)">
            <summary>
            指定した子オブジェクトをこのインスタンスから削除する。
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:ace.Object2D.AddComponent(ace.Object2DComponent,System.String)">
            <summary>
            指定したコンポーネントをこの2Dオブジェクトに追加する。
            </summary>
            <param name="component">追加するコンポーネント</param>
            <param name="key">コンポーネントに関連付けるキー</param>
        </member>
        <member name="M:ace.Object2D.GetComponent(System.String)">
            <summary>
            指定したキーを持つコンポーネントを取得する。
            </summary>
            <param name="key">取得するコンポーネントのキー</param>
            <returns>コンポーネント</returns>
        </member>
        <member name="M:ace.Object2D.RemoveComponent(System.String)">
            <summary>
            指定したコンポーネントをこの2Dオブジェクトから削除する。
            </summary>
            <param name="key">削除するコンポーネントを示すキー</param>
            <returns>削除が成功したか否か。キーに対応するコンポーネントがなかった場合は false。</returns>
        </member>
        <member name="M:ace.Object2D.DrawSpriteAdditionally(ace.Vector2DF,ace.Vector2DF,ace.Vector2DF,ace.Vector2DF,ace.Color,ace.Color,ace.Color,ace.Color,ace.Vector2DF,ace.Vector2DF,ace.Vector2DF,ace.Vector2DF,ace.Texture2D,ace.AlphaBlendMode,System.Int32)">
            <summary>
            通常の描画に加えてテクスチャを描画する。
            </summary>
            <param name="upperLeftPos">テクスチャの左上の描画位置</param>
            <param name="upperRightPos">テクスチャの右上の描画位置</param>
            <param name="lowerRightPos">テクスチャの右下の描画位置</param>
            <param name="lowerLeftPos">テクスチャの左下の描画位置</param>
            <param name="upperLeftCol">テクスチャの左上の頂点色</param>
            <param name="upperRightCol">テクスチャの右上の頂点色</param>
            <param name="lowerRightCol">テクスチャの右下の頂点色</param>
            <param name="lowerLeftCol">テクスチャの左下の頂点色</param>
            <param name="upperLeftUV">テクスチャの左上のUV値</param>
            <param name="upperRightUV">テクスチャの右上のUV値</param>
            <param name="lowerRightUV">テクスチャの右下のUV値</param>
            <param name="lowerLeftUV">テクスチャの左下のUV値</param>
            <param name="texture">描画するテクスチャ</param>
            <param name="alphaBlend">アルファブレンドの種類</param>
            <param name="priority">描画の優先順位(大きいほど前面に描画される)</param>
            <remarks>OnDrawAdditionallyの中以外では実行してはいけない。</remarks>
        </member>
        <member name="M:ace.Object2D.DrawTextAdditionally(ace.Vector2DF,ace.Color,ace.Font,System.String,ace.WritingDirection,ace.AlphaBlendMode,System.Int32)">
            <summary>
            通常の描画に加えて文字列を描画する。
            </summary>
            <param name="pos">描画位置</param>
            <param name="color">頂点色</param>
            <param name="font">フォント</param>
            <param name="text">文字列</param>
            <param name="writingDirection">行方向</param>
            <param name="alphaBlend">アルファブレンドの種類</param>
            <param name="priority">描画の優先順位(大きいほど前面に描画される)</param>
            <remarks>
            OnDrawAdditionallyの中以外では実行してはいけない。
            </remarks>
        </member>
        <member name="M:ace.Object2D.OnStart">
            <summary>
            オーバーライドして、この2Dオブジェクトの初期化処理を記述できる。
            </summary>
        </member>
        <member name="M:ace.Object2D.OnUpdate">
            <summary>
            オーバーライドして、この2Dオブジェクトの更新処理を記述できる。
            </summary>
        </member>
        <member name="M:ace.Object2D.OnDrawAdditionally">
            <summary>
            オーバーライドして、この2Dオブジェクトに関する追加の描画処理を記述できる。
            </summary>
        </member>
        <member name="M:ace.Object2D.OnVanish">
            <summary>
            オーバーライドして、この2DオブジェクトがVanishメソッドによって破棄される際の処理を記述できる。
            </summary>
        </member>
        <member name="M:ace.Object2D.OnDispose">
            <summary>
            オーバーライドして、この2Dオブジェクトが破棄される際の処理を記述できる。
            </summary>
        </member>
        <member name="P:ace.Object2D.IsUpdated">
            <summary>
            このオブジェクトが更新されるかどうかを取得または設定する。
            </summary>
        </member>
        <member name="P:ace.Object2D.IsDrawn">
            <summary>
            このオブジェクトが描画されるかどうかを取得または設定する。
            </summary>
        </member>
        <member name="P:ace.Object2D.IsAlive">
            <summary>
            このオブジェクトが実行中かどうかを取得する。Vanishメソッドにより削除された時に false を返す。
            </summary>
        </member>
        <member name="P:ace.Object2D.Layer">
            <summary>
            このインスタンスを管理している ace.Layer2D クラスのインスタンスを取得する。
            </summary>
        </member>
        <member name="P:ace.Object2D.Children">
            <summary>
            このオブジェクトが持っている子オブジェクトのコレクションを取得する。
            </summary>
        </member>
        <member name="P:ace.Object2D.Position">
            <summary>
            この2Dオブジェクトを描画する位置を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.Object2D.Angle">
            <summary>
            この2Dオブジェクトを描画する際の回転角度を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.Object2D.Scale">
            <summary>
            この2Dオブジェクトを描画する際の拡大率を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.CameraObject2D.Src">
            <summary>
            描画元の領域を取得、または設定する。
            </summary>
        </member>
        <member name="P:ace.CameraObject2D.Dst">
            <summary>
            描画先の領域を取得、または設定する。
            </summary>
        </member>
        <member name="M:ace.EffectObject2D.Play">
            <summary>
            設定されている全てのエフェクトを再生する。
            </summary>
        </member>
        <member name="M:ace.EffectObject2D.Stop">
            <summary>
            このオブジェクトから再生されたエフェクトを全て停止する。
            </summary>
        </member>
        <member name="M:ace.EffectObject2D.StopRoot">
            <summary>
            このオブジェクトから再生されたエフェクトのルートを全て停止する。
            </summary>
        </member>
        <member name="P:ace.EffectObject2D.Effect">
            <summary>
            描画に使用するエフェクトを取得、または設定する。
            </summary>
        </member>
        <member name="P:ace.EffectObject2D.IsPlaying">
            <summary>
            このオブジェクトから再生されたエフェクトが再生中か取得する。
            </summary>
            <returns>再生中か?</returns>
        </member>
        <member name="P:ace.EffectObject2D.SyncEffects">
            <summary>
            このオブジェクトから再生されたエフェクトをオブジェクトに合わせて移動させるか取得、または設定する。
            </summary>
        </member>
        <member name="P:ace.EffectObject2D.EffectRotation">
            <summary>
            このオブジェクトから再生されるエフェクトの向き(度)を指定する。
            </summary>
            <remarks>
            2D表示だとエフェクトが画面に対して前後に表示されるように作成されていた場合、予期せぬ見た目で表示されてしまうことがある。
            そのため、Y軸を中心にエフェクトを回転させ2Dとして違和感のない表示ができるようにする。
            </remarks>
        </member>
        <member name="P:ace.EffectObject2D.DrawingPriority">
            <summary>
            この2Dオブジェクトを描画する際の描画優先度を取得または設定する。描画優先度が高いほど手前に描画される。
            </summary>
        </member>
        <member name="T:ace.GeometryObject2D">
            <summary>
            テクスチャと描画パラメータを用いて、更新・描画処理を行う単位となる2Dオブジェクトの機能を提供するクラス
            </summary>
        </member>
        <member name="M:ace.GeometryObject2D.#ctor">
            <summary>
            ace.GeometryObject2D の新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:ace.GeometryObject2D.Shape">
            <summary>
            この2Dオブジェクトの描画に使用する図形を取得または設定します。
            </summary>
        </member>
        <member name="P:ace.GeometryObject2D.Texture">
            <summary>
            この2Dオブジェクトの描画に使用するテクスチャを取得または設定します。
            </summary>
        </member>
        <member name="P:ace.GeometryObject2D.CenterPosition">
            <summary>
            この2Dオブジェクトを描画する際の描画原点を取得または設定します。描画原点は拡大・回転・描画の中心となる、画像データ内での座標です。
            </summary>
        </member>
        <member name="P:ace.GeometryObject2D.Color">
            <summary>
            この2Dオブジェクトを描画する際に合成する色を取得または設定します。
            </summary>
        </member>
        <member name="P:ace.GeometryObject2D.DrawingPriority">
            <summary>
            この2Dオブジェクトを描画する際の描画優先度を取得または設定します。描画優先度が高いほど手前に描画されます。
            </summary>
        </member>
        <member name="P:ace.GeometryObject2D.AlphaBlend">
            <summary>
            この2Dオブジェクトを描画する際のブレンドモードを取得または設定します。
            </summary>
        </member>
        <member name="P:ace.GeometryObject2D.TextureFilterType">
            <summary>
             この2Dオブジェクトを描画する際のテクスチャフィルタを取得または設定する。
             </summary>
        </member>
        <member name="M:ace.MapObject2D.AddChip(ace.Chip2D)">
            <summary>
            この2Dオブジェクトにチップを追加する。
            </summary>
        </member>
        <member name="M:ace.MapObject2D.RemoveChip(ace.Chip2D)">
            <summary>
            この2Dオブジェクトからチップを削除する。
            </summary>
        </member>
        <member name="M:ace.MapObject2D.Clear">
            <summary>
            この2Dオブジェクトに追加されている全てのチップを削除する。
            </summary>
        </member>
        <member name="P:ace.MapObject2D.CenterPosition">
            <summary>
            この2Dオブジェクトを描画する際の描画原点を取得または設定する。描画原点は拡大・回転・描画の中心となる、画像データ内での座標。
            </summary>
        </member>
        <member name="P:ace.MapObject2D.DrawingPriority">
            <summary>
            この2Dオブジェクトを描画する際の描画優先度を取得または設定する。描画優先度が高いほど手前に描画される。
            </summary>
        </member>
        <member name="P:ace.TextObject2D.Font">
            <summary>
            この2Dオブジェクトの描画に使用するフォントを取得または設定する。
            </summary>
        </member>
        <member name="P:ace.TextObject2D.Text">
            <summary>
            描画する文字列を取得または設定する。
            </summary>
            <returns></returns>
        </member>
        <member name="P:ace.TextObject2D.WritingDirection">
            <summary>
            文字列の描画方向を指定する。
            </summary>
            <returns></returns>
        </member>
        <member name="P:ace.TextObject2D.CenterPosition">
            <summary>
            この2Dオブジェクトを描画する際の描画原点を取得または設定する。描画原点は拡大・回転・描画の中心となる、画像データ内での座標。
            </summary>
        </member>
        <member name="P:ace.TextObject2D.Color">
            <summary>
            この2Dオブジェクトを描画する際に合成する色を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.TextObject2D.TurnLR">
            <summary>
            この2Dオブジェクトを描画する際に左右反転するかどうかの真偽値を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.TextObject2D.TurnUL">
            <summary>
            この2Dオブジェクトを描画する際に上下反転するかどうかの真偽値を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.TextObject2D.DrawingPriority">
            <summary>
            この2Dオブジェクトを描画する際の描画優先度を取得または設定する。描画優先度が高いほど手前に描画される。
            </summary>
        </member>
        <member name="P:ace.TextObject2D.AlphaBlend">
            <summary>
            この2Dオブジェクトを描画する際のブレンドモードを取得または設定する。
            </summary>
        </member>
        <member name="P:ace.TextObject2D.TextureFilterType">
            <summary>
             この2Dオブジェクトを描画する際のテクスチャフィルタを取得または設定する。
             </summary>
        </member>
        <member name="T:ace.CameraObject3D">
            <summary>
            カメラの機能を提供するクラス
            </summary>
        </member>
        <member name="T:ace.Object3D">
            <summary>
            更新・描画処理を行う単位となる3Dオブジェクトの機能を提供するクラス
            </summary>
        </member>
        <member name="M:ace.Object3D.Vanish">
            <summary>
            オブジェクトを破棄する。
            </summary>
        </member>
        <member name="M:ace.Object3D.OnUpdateInternal">
            <summary>
            ユーザーはオーバーライドしてはいけない。
            </summary>
        </member>
        <member name="M:ace.Object3D.OnStart">
            <summary>
            オーバーライドして、この3Dオブジェクトの初期化処理を記述することができる。
            </summary>
        </member>
        <member name="M:ace.Object3D.OnUpdate">
            <summary>
            オーバーライドして、この3Dオブジェクトの更新処理を記述することができる。
            </summary>
        </member>
        <member name="M:ace.Object3D.OnDrawAdditionally">
            <summary>
            オーバーライドして、この3Dオブジェクトに関する追加の描画処理を記述できる。
            </summary>
        </member>
        <member name="M:ace.Object3D.OnVanish">
            <summary>
            オーバーライドして、この3DオブジェクトがVanishメソッドによって破棄される時の処理を記述できる。
            </summary>
        </member>
        <member name="M:ace.Object3D.OnDispose">
            <summary>
            オーバーライドして、この3Dオブジェクトが破棄されるときの処理を記述できる。
            </summary>
        </member>
        <member name="M:ace.Object3D.DrawSpriteAdditionally(ace.Vector3DF,ace.Vector3DF,ace.Vector3DF,ace.Vector3DF,ace.Color,ace.Color,ace.Color,ace.Color,ace.Vector2DF,ace.Vector2DF,ace.Vector2DF,ace.Vector2DF,ace.Texture2D,ace.AlphaBlendMode,System.Boolean,System.Boolean)">
            <summary>
            通常の描画に加えてテクスチャを描画する。
            </summary>
            <param name="upperLeftPos">テクスチャの左上の描画位置</param>
            <param name="upperRightPos">テクスチャの右上の描画位置</param>
            <param name="lowerRightPos">テクスチャの右下の描画位置</param>
            <param name="lowerLeftPos">テクスチャの左下の描画位置</param>
            <param name="upperLeftCol">テクスチャの左上の頂点色</param>
            <param name="upperRightCol">テクスチャの右上の頂点色</param>
            <param name="lowerRightCol">テクスチャの右下の頂点色</param>
            <param name="lowerLeftCol">テクスチャの左下の頂点色</param>
            <param name="upperLeftUV">テクスチャの左上のUV値</param>
            <param name="upperRightUV">テクスチャの右上のUV値</param>
            <param name="lowerRightUV">テクスチャの右下のUV値</param>
            <param name="lowerLeftUV">テクスチャの左下のUV値</param>
            <param name="texture">描画するテクスチャ</param>
            <param name="alphaBlend">アルファブレンドの種類</param>
            <param name="depthTest">深度を書き込むか?</param>
            <param name="depthWrite">深度を比較するか?</param>
            <remarks>OnDrawAdditionallyの中以外では実行してはいけない。</remarks>
        </member>
        <member name="P:ace.Object3D.IsUpdated">
            <summary>
            オブジェクトの更新を実行するかどうか取得または設定する。
            </summary>
        </member>
        <member name="P:ace.Object3D.IsDrawn">
            <summary>
            オブジェクトを描画するかどうか取得または設定する。
            </summary>
        </member>
        <member name="P:ace.Object3D.IsAlive">
            <summary>
            オブジェクトが生存しているか取得する。
            </summary>
        </member>
        <member name="P:ace.Object3D.Layer">
            <summary>
            このインスタンスを管理している ace.Layer3D クラスのインスタンスを取得する。
            </summary>
        </member>
        <member name="P:ace.Object3D.Position">
            <summary>
            このインスタンスの親に対する現在の座標を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.Object3D.Rotation">
            <summary>
            このインスタンスの親に対する現在の角度を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.Object3D.Scale">
            <summary>
            このインスタンスの親に対する現在の拡大率を取得または設定する。
            </summary>
        </member>
        <member name="M:ace.CameraObject3D.AddPostEffect(ace.PostEffect)">
            <summary>
            ポストエフェクトを追加する。
            </summary>
            <param name="postEffect">ポストエフェクト</param>
        </member>
        <member name="M:ace.CameraObject3D.ClearPostEffects">
            <summary>
            ポストエフェクトを全て消去する。
            </summary>
        </member>
        <member name="P:ace.CameraObject3D.HDRMode">
            <summary>
            描画先がHDRかどうか、取得、または設定する。
            </summary>
        </member>
        <member name="P:ace.CameraObject3D.WindowSize">
            <summary>
            画面サイズを取得または設定する。
            </summary>
        </member>
        <member name="P:ace.CameraObject3D.Focus">
            <summary>
            カメラが見る座標を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.CameraObject3D.FieldOfView">
            <summary>
            画角を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.CameraObject3D.ZFar">
            <summary>
            描画する最遠距離を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.CameraObject3D.ZNear">
            <summary>
            描画する最近距離を取得または設定する。
            </summary>
        </member>
        <member name="T:ace.DirectionalLightObject3D">
            <summary>
            無限遠光源の機能を提供するクラス
            </summary>
        </member>
        <member name="P:ace.DirectionalLightObject3D.Color">
            <summary>
            光源の色を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.DirectionalLightObject3D.Intensity">
            <summary>
            光源の強さを取得または設定する。
            </summary>
            <remarks>
            デフォルトは1.0である。
            </remarks>
        </member>
        <member name="T:ace.EffectObject3D">
            <summary>
            エフェクトの機能を提供するクラス
            </summary>
        </member>
        <member name="M:ace.EffectObject3D.SetEffect(ace.Effect)">
            <summary>
            描画に使用するエフェクトを設定する。
            </summary>
            <param name="effect">エフェクト</param>
        </member>
        <member name="M:ace.EffectObject3D.Play">
            <summary>
            設定されている全てのエフェクトを再生する。
            </summary>
        </member>
        <member name="M:ace.EffectObject3D.Stop">
            <summary>
            このオブジェクトから再生されたエフェクトを全て停止する。
            </summary>
        </member>
        <member name="M:ace.EffectObject3D.StopRoot">
            <summary>
            このオブジェクトから再生されたエフェクトのルートを全て停止する。
            </summary>
        </member>
        <member name="P:ace.EffectObject3D.IsPlaying">
            <summary>
            このオブジェクトから再生されたエフェクトが再生中か取得する。
            </summary>
            <returns>再生中か?</returns>
        </member>
        <member name="P:ace.EffectObject3D.SyncEffects">
            <summary>
            このオブジェクトから再生されたエフェクトをオブジェクトに合わせて移動させるか取得、または設定する。
            </summary>
        </member>
        <member name="T:ace.Layer3D">
            <summary>
            3Dオブジェクトの更新と描画を管理するレイヤーの機能を提供するクラス
            </summary>
        </member>
        <member name="T:ace.Layer">
            <summary>
            オブジェクトの更新と描画を管理するレイヤーの機能を提供する抽象クラス
            </summary>
        </member>
        <member name="M:ace.Layer.OnUpdating">
            <summary>
            オーバーライドして、このレイヤーが更新される前の処理を記述できる。
            </summary>
        </member>
        <member name="M:ace.Layer.OnUpdated">
            <summary>
            オーバーライドして、このレイヤーが更新された後の処理を記述できる。
            </summary>
        </member>
        <member name="M:ace.Layer.OnDrawAdditionally">
            <summary>
            オーバーライドして、このレイヤーの追加の描画処理を記述できる。
            </summary>
        </member>
        <member name="M:ace.Layer.OnVanish">
            <summary>
            オーバーライドして、このレイヤーがVansihメソッドによって破棄されるときの処理を記述できる。
            </summary>
        </member>
        <member name="M:ace.Layer.OnDispose">
            <summary>
            オーバーライドして、このレイヤーが破棄されるときの処理を記述できる。
            </summary>
        </member>
        <member name="M:ace.Layer.AddPostEffect(ace.PostEffect)">
            <summary>
            ポストエフェクトを追加する。
            </summary>
            <param name="postEffect">ポストエフェクト</param>
        </member>
        <member name="M:ace.Layer.ClearPostEffects">
            <summary>
            ポストエフェクトを全て消去する。
            </summary>
        </member>
        <member name="M:ace.Layer.Vanish">
            <summary>
            このレイヤーを破棄する。
            </summary>
        </member>
        <member name="P:ace.Layer.IsAlive">
            <summary>
            このレイヤーが有効化どうかを取得する。Vanishメソッドを呼び出した後なら false。
            </summary>
        </member>
        <member name="P:ace.Layer.IsUpdated">
            <summary>
            レイヤーの更新を実行するかどうか取得または設定する。
            </summary>
        </member>
        <member name="P:ace.Layer.IsDrawn">
            <summary>
            レイヤーを描画するかどうか取得または設定する。
            </summary>
        </member>
        <member name="P:ace.Layer.Scene">
            <summary>
            このインスタンスを管理している ace.Scene クラスのインスタンスを取得する。
            </summary>
        </member>
        <member name="P:ace.Layer.TimeForUpdate">
            <summary>
            このレイヤーの前回の更新時間を取得する。
            </summary>
        </member>
        <member name="P:ace.Layer.ObjectCount">
            <summary>
            このレイヤーに登録されているオブジェクトの数を取得する。
            </summary>
        </member>
        <member name="P:ace.Layer.Name">
            <summary>
            このレイヤーの名前を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.Layer.DrawingPriority">
            <summary>
            このレイヤーの描画優先度を取得または設定する。この値が大きいほど手前に描画される。
            </summary>
        </member>
        <member name="P:ace.Layer.LayerType">
            <summary>
            レイヤーの種類を取得する。
            </summary>
        </member>
        <member name="M:ace.Layer3D.#ctor(ace.RenderSettings)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:ace.Layer3D.AddObject(ace.Object3D)">
            <summary>
            このレイヤーに指定した3Dオブジェクトを追加する。
            </summary>
            <param name="object3D">追加する3Dオブジェクト</param>
        </member>
        <member name="M:ace.Layer3D.RemoveObject(ace.Object3D)">
            <summary>
            このレイヤーから指定した3Dオブジェクトを削除する。
            </summary>
            <param name="object3D">削除される3Dオブジェクト</param>
        </member>
        <member name="M:ace.Layer3D.DrawSpriteAdditionally(ace.Vector3DF,ace.Vector3DF,ace.Vector3DF,ace.Vector3DF,ace.Color,ace.Color,ace.Color,ace.Color,ace.Vector2DF,ace.Vector2DF,ace.Vector2DF,ace.Vector2DF,ace.Texture2D,ace.AlphaBlendMode,System.Boolean,System.Boolean)">
            <summary>
            通常の描画に加えてテクスチャを描画する。
            </summary>
            <param name="upperLeftPos">テクスチャの左上の描画位置</param>
            <param name="upperRightPos">テクスチャの右上の描画位置</param>
            <param name="lowerRightPos">テクスチャの右下の描画位置</param>
            <param name="lowerLeftPos">テクスチャの左下の描画位置</param>
            <param name="upperLeftCol">テクスチャの左上の頂点色</param>
            <param name="upperRightCol">テクスチャの右上の頂点色</param>
            <param name="lowerRightCol">テクスチャの右下の頂点色</param>
            <param name="lowerLeftCol">テクスチャの左下の頂点色</param>
            <param name="upperLeftUV">テクスチャの左上のUV値</param>
            <param name="upperRightUV">テクスチャの右上のUV値</param>
            <param name="lowerRightUV">テクスチャの右下のUV値</param>
            <param name="lowerLeftUV">テクスチャの左下のUV値</param>
            <param name="texture">描画するテクスチャ</param>
            <param name="alphaBlend">アルファブレンドの種類</param>
            <param name="depthWrite">深度を比較するか?</param>
            <param name="depthTest">深度を書き込むか?</param>
            <remarks>OnDrawAdditionallyの中以外では実行してはいけない。</remarks>
        </member>
        <member name="M:ace.Layer3D.SetAmbientColorIntensity(System.Single)">
            <summary>
            環境光の強さを設定する。
            </summary>
            <param name="ambientColorIntensity">環境光の強さ</param>
            <remarks>
            デフォルトは1.0である。
            </remarks>
        </member>
        <member name="M:ace.Layer3D.SetSkyAmbientColor(ace.Color)">
            <summary>
            空方向の環境光の色を設定する。
            </summary>
            <param name="color">色</param>
        </member>
        <member name="M:ace.Layer3D.SetGroundAmbientColor(ace.Color)">
            <summary>
            地面方向の環境光の色を設定する。
            </summary>
            <param name="color">色</param>
        </member>
        <member name="M:ace.Layer3D.SetEnvironmentColorIntensity(System.Single,System.Single)">
            <summary>
            テクスチャによる環境の色の強さを設定する。
            </summary>
            <param name="environmentDiffuseColorIntensity">拡散色の強さ</param>
            <param name="environmentSpecularColorIntensity">スペキュラ色の強さ</param>
            <remarks>
            デフォルトは1.0である。
            </remarks>
        </member>
        <member name="M:ace.Layer3D.SetEnvironmentColor(ace.CubemapTexture,ace.CubemapTexture)">
            <summary>
            テクスチャによる環境の色を設定する。
            </summary>
            <param name="diffuseColor">拡散色</param>
            <param name="specularColor">スペキュラ色</param>
        </member>
        <member name="P:ace.Layer3D.Objects">
            <summary>
            このレイヤーが管理している3Dオブジェクトのコレクションを取得する。
            </summary>
        </member>
        <member name="P:ace.Layer3D.Settings">
            <summary>
            描画設定を取得、設定する。
            </summary>
        </member>
        <member name="P:ace.Layer3D.SSAO_Radius">
            <summary>
            SSAOのサンプリングする半径
            </summary>
        </member>
        <member name="P:ace.Layer3D.SSAO_Bias">
            <summary>
            SSAOのバイアス
            </summary>
        </member>
        <member name="P:ace.Layer3D.SSAO_Intensity">
            <summary>
            SSAOの強さ
            </summary>
        </member>
        <member name="P:ace.Layer3D.SSAO_FarPlain">
            <summary>
            SSAOの最大距離
            </summary>
        </member>
        <member name="T:ace.MassModelObject3D">
            <summary>
            大量にメッシュを表示する3Dオブジェクトの機能を提供するクラス
            </summary>
        </member>
        <member name="M:ace.MassModelObject3D.SetModel(ace.MassModel)">
            <summary>
            描画に使用するモデルを設定する。
            </summary>
            <param name="model">モデル</param>
        </member>
        <member name="M:ace.MassModelObject3D.PlayAnimation(System.String)">
            <summary>
            アニメーションを再生する。
            </summary>
            <param name="name">アニメーションの名称</param>
        </member>
        <member name="M:ace.MassModelObject3D.StopAnimation">
            <summary>
            アニメーションを停止する。
            </summary>
        </member>
        <member name="M:ace.MassModelObject3D.CrossFadeAnimation(System.String,System.Single)">
            <summary>
            アニメーションをクロスフェードで再生する。
            </summary>
            <param name="name">アニメーションの名称</param>
            <param name="time">クロスフェードにかかる時間(秒)</param>
        </member>
        <member name="M:ace.MassModelObject3D.SetMaterialPropertyBlock(ace.MaterialPropertyBlock)">
            <summary>
            材質個別に描画時のパラメーターを設定する。
            </summary>
            <param name="block">プロパティ</param>
            <remarks>
            通常描画する場合、材質に設定されたパラメーターを元に描画するがモデルごとに個別のパラメーターを使用する場合、この関数を使用する。
            </remarks>
        </member>
        <member name="P:ace.MassModelObject3D.IsAnimationPlaying">
            <summary>
            アニメーションが再生中か取得する。
            </summary>
            <returns>再生中か?</returns>
        </member>
        <member name="T:ace.ModelObject3D">
            <summary>
            メッシュを表示する3Dオブジェクトの機能を提供するクラス
            </summary>
        </member>
        <member name="M:ace.ModelObject3D.SetModel(ace.Model)">
            <summary>
            描画に使用するモデルを設定する。
            </summary>
            <param name="model">モデル</param>
        </member>
        <member name="M:ace.ModelObject3D.AddMesh(ace.Mesh)">
            <summary>
            描画に使用するメッシュを追加する。
            </summary>
            <param name="mesh">メッシュ</param>
        </member>
        <member name="M:ace.ModelObject3D.SetDeformer(ace.Deformer)">
            <summary>
            描画に使用するデフォーマーを設定する。
            </summary>
            <param name="deformer">デフォーマー</param>
        </member>
        <member name="M:ace.ModelObject3D.GetAnimationClip(System.String)">
            <summary>
            アニメーションクリップを取得する。
            </summary>
            <param name="name">アニメーションクリップの名称</param>
            <returns>アニメーションクリップ</returns>
        </member>
        <member name="M:ace.ModelObject3D.PlayAnimation(System.Int32,System.String)">
            <summary>
            アニメーションを再生する。
            </summary>
            <param name="index">対象のインデックス</param>
            <param name="name">アニメーションの名称</param>
        </member>
        <member name="M:ace.ModelObject3D.StopAnimation(System.Int32)">
            <summary>
            アニメーションを停止する。
            </summary>
            <param name="index">対象のインデックス</param>
        </member>
        <member name="M:ace.ModelObject3D.SetAnimationWeight(System.Int32,System.Single)">
            <summary>
            アニメーションの合成比率を設定する。
            </summary>
            <param name="index">対象のインデックス</param>
            <param name="weight">合成比率</param>
        </member>
        <member name="M:ace.ModelObject3D.CrossFadeAnimation(System.Int32,System.String,System.Single)">
            <summary>
            アニメーションをクロスフェードで再生する。
            </summary>
            <param name="index">対象のインデックス</param>
            <param name="name">アニメーションの名称</param>
            <param name="time">クロスフェードにかかる時間(秒)</param>
        </member>
        <member name="M:ace.ModelObject3D.IsAnimationPlaying(System.Int32)">
            		@brief	アニメーションが再生中か取得する。
            		@param	index	対象のインデックス
            		@return	再生中か?
        </member>
        <member name="M:ace.ModelObject3D.SetMaterialPropertyBlock(System.Int32,System.Int32,ace.MaterialPropertyBlock)">
            <summary>
            材質個別に描画時のパラメーターを設定する。
            </summary>
            <param name="meshIndex">メッシュのインデックス</param>
            <param name="materialIndex">材質のインデックス</param>
            <param name="block">プロパティ</param>
            <remarks>
            通常描画する場合、材質に設定されたパラメーターを元に描画するがモデルごとに個別のパラメーターを使用する場合、この関数を使用する。
            </remarks>
        </member>
        <member name="T:ace.TerrainObject3D">
            <summary>
            地形を描画するクラス
            </summary>
        </member>
        <member name="M:ace.TerrainObject3D.SetTerrain(ace.Terrain3D)">
            <summary>
            地形を設定する。
            </summary>
            <param name="terrain">地形</param>
        </member>
        <member name="M:ace.TerrainObject3D.SetMaterialPropertyBlock(ace.MaterialPropertyBlock)">
            <summary>
            材質個別に描画時のパラメーターを設定する。
            </summary>
            <param name="block">プロパティ</param>
            <remarks>
            通常描画する場合、材質に設定されたパラメーターを元に描画するがモデルごとに個別のパラメーターを使用する場合、この関数を使用する。
            </remarks>
        </member>
        <member name="T:ace.Layer2DComponent">
            <summary>
            ace.Layer2D クラスに登録することができるコンポーネント クラス。
            </summary>
        </member>
        <member name="T:ace.Component`1">
            <summary>
            コンポーネント クラスの基底クラス。
            </summary>
            <typeparam name="TOwner">コンポーネントの追加先とできる型。</typeparam>
        </member>
        <member name="M:ace.Component`1.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:ace.Component`1.Vanish">
            <summary>
            このコンポーネントを破棄する。
            </summary>
        </member>
        <member name="P:ace.Component`1.Owner">
            <summary>
            このコンポーネントを保持しているインスタンスを取得する。
            </summary>
        </member>
        <member name="P:ace.Component`1.IsAlive">
            <summary>
            このコンポーネントが実行中かどうかを取得する。Vanishメソッドによって破棄された時に false を返す。
            </summary>
        </member>
        <member name="M:ace.Layer2DComponent.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:ace.Layer2DComponent.OnUpdated">
            <summary>
            オーバーライドして、このコンポーネントの Update時の処理を記述できる。
            </summary>
        </member>
        <member name="P:ace.Layer2DComponent.Owner">
            <summary>
            このコンポーネントを保持しているレイヤー クラスのインスタンスを取得する。
            </summary>
        </member>
        <member name="P:ace.Layer2DComponent.IsUpdated">
            <summary>
            このコンポーネントが更新されるかどうかを取得する。
            </summary>
        </member>
        <member name="T:ace.Object2DComponent">
            <summary>
            ace.Object2D クラスに登録できるコンポーネント クラス。
            </summary>
        </member>
        <member name="M:ace.Object2DComponent.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:ace.Object2DComponent.OnUpdate">
            <summary>
            オーバーライドして、このコンポーネントの Update時の処理を記述できる。
            </summary>
        </member>
        <member name="P:ace.Object2DComponent.Owner">
            <summary>
            このコンポーネントを保持している2Dオブジェクトのインスタンスを取得する。
            </summary>
        </member>
        <member name="P:ace.Object2DComponent.IsUpdated">
            <summary>
            このコンポーネントが更新されるかどうかを取得または設定する。
            </summary>
        </member>
        <member name="T:ace.Layer2D">
            <summary>
            2Dオブジェクトの更新と描画を管理するレイヤーの機能を提供するクラス
            </summary>
        </member>
        <member name="M:ace.Layer2D.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:ace.Layer2D.AddObject(ace.Object2D)">
            <summary>
            指定した2Dオブジェクトをこのレイヤーに追加する。
            </summary>
            <param name="object2D">追加する2Dオブジェクト</param>
        </member>
        <member name="M:ace.Layer2D.RemoveObject(ace.Object2D)">
            <summary>
            指定した2Dオブジェクトをこのレイヤーから削除する。
            </summary>
            <param name="object2D">削除される2Dオブジェクト</param>
        </member>
        <member name="M:ace.Layer2D.AddComponent(ace.Layer2DComponent,System.String)">
            <summary>
            指定したコンポーネントをこのレイヤーに追加する。
            </summary>
            <param name="component">追加するコンポーネント</param>
            <param name="key">コンポーネントに関連付けるキー</param>
        </member>
        <member name="M:ace.Layer2D.GetComponent(System.String)">
            <summary>
            指定したキーを持つコンポーネントを取得する。
            </summary>
            <param name="key">取得するコンポーネントのキー</param>
            <returns>コンポーネント</returns>
        </member>
        <member name="M:ace.Layer2D.RemoveComponent(System.String)">
            <summary>
            指定したコンポーネントをこのレイヤーから削除する。
            </summary>
            <param name="key">削除するコンポーネントを示すキー</param>
            <returns>削除が成功したか否か。キーに対応するコンポーネントがなかった場合は false。</returns>
        </member>
        <member name="M:ace.Layer2D.Clear">
            <summary>
            保持している全ての2Dオブジェクトをこのレイヤーから削除する。
            </summary>
        </member>
        <member name="M:ace.Layer2D.DrawSpriteAdditionally(ace.Vector2DF,ace.Vector2DF,ace.Vector2DF,ace.Vector2DF,ace.Color,ace.Color,ace.Color,ace.Color,ace.Vector2DF,ace.Vector2DF,ace.Vector2DF,ace.Vector2DF,ace.Texture2D,ace.AlphaBlendMode,System.Int32)">
            <summary>
            通常の描画に加えてテクスチャを描画する。
            </summary>
            <param name="upperLeftPos">テクスチャの左上の描画位置</param>
            <param name="upperRightPos">テクスチャの右上の描画位置</param>
            <param name="lowerRightPos">テクスチャの右下の描画位置</param>
            <param name="lowerLeftPos">テクスチャの左下の描画位置</param>
            <param name="upperLeftCol">テクスチャの左上の頂点色</param>
            <param name="upperRightCol">テクスチャの右上の頂点色</param>
            <param name="lowerRightCol">テクスチャの右下の頂点色</param>
            <param name="lowerLeftCol">テクスチャの左下の頂点色</param>
            <param name="upperLeftUV">テクスチャの左上のUV値</param>
            <param name="upperRightUV">テクスチャの右上のUV値</param>
            <param name="lowerRightUV">テクスチャの右下のUV値</param>
            <param name="lowerLeftUV">テクスチャの左下のUV値</param>
            <param name="texture">描画するテクスチャ</param>
            <param name="alphaBlend">アルファブレンドの種類</param>
            <param name="priority">描画の優先順位(大きいほど前面に描画される)</param>
            <remarks>OnDrawAdditionallyの中以外では実行してはいけない。</remarks>
        </member>
        <member name="M:ace.Layer2D.DrawTextAdditionally(ace.Vector2DF,ace.Color,ace.Font,System.String,ace.WritingDirection,ace.AlphaBlendMode,System.Int32)">
            <summary>
            通常の描画に加えて文字列を描画する。
            </summary>
            <param name="pos">描画位置</param>
            <param name="color">頂点色</param>
            <param name="font">フォント</param>
            <param name="text">文字列</param>
            <param name="writingDirection">行方向</param>
            <param name="alphaBlend">アルファブレンドの種類</param>
            <param name="priority">描画の優先順位(大きいほど前面に描画される)</param>
            <remarks>
            OnDrawAdditionallyの中以外では実行してはいけない。
            </remarks>
        </member>
        <member name="P:ace.Layer2D.Objects">
            <summary>
            このレイヤーが管理している2Dオブジェクトのコレクションを取得する。
            </summary>
        </member>
        <member name="M:ace.ObjectSystemFactory.#ctor(ace.swig.ObjectSystemFactory)">
            <summary>
            ObjectSystemFactory クラスをインスタンス化する。
            </summary>
            <param name="factory">ネイティブのインスタンス</param>
        </member>
        <member name="M:ace.ObjectSystemFactory.CreateCameraObject2D">
            <summary>
            ネイティブのクラスをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:ace.ObjectSystemFactory.CreateTextureObject2D">
            <summary>
            ネイティブのクラスをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:ace.ObjectSystemFactory.CreateMapObject2D">
            <summary>
            ネイティブのMapObject2Dをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:ace.ObjectSystemFactory.CreateChip2D">
            <summary>
            ネイティブのChip2Dをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:ace.ObjectSystemFactory.CreateTextObject2D">
            <summary>
            ネイティブのTextObject2Dをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:ace.ObjectSystemFactory.CreateEffectObject2D">
            <summary>
            ネイティブのクラスをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:ace.ObjectSystemFactory.CreateGeometryObject2D">
            <summary>
            ネイティブのクラスをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:ace.ObjectSystemFactory.CreateLayer2D">
            <summary>
            ネイティブの CoreLayer2D クラスをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス。</returns>
        </member>
        <member name="M:ace.ObjectSystemFactory.CreateModelObject3D">
            <summary>
            ネイティブの MeshObject3D クラスをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:ace.ObjectSystemFactory.CreateCameraObject3D">
            <summary>
            ネイティブの CameraObject3D クラスをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:ace.ObjectSystemFactory.CreateEffectObject3D">
            <summary>
            ネイティブの EffectObject3D クラスをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:ace.ObjectSystemFactory.CreateDirectionalLightObject3D">
            <summary>
            ネイティブの DirectionalLightObject3D クラスをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:ace.ObjectSystemFactory.CreateLayer3D(ace.swig.RenderSettings)">
            <summary>
            ネイティブの CoreLayer2D クラスをインスタンス化する。
            </summary>
            <param name="settings">設定</param>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:ace.ObjectSystemFactory.CreateScene">
            <summary>
            ネイティブの CoreScene クラスをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス。</returns>
        </member>
        <member name="M:ace.ObjectSystemFactory.CreatePostEffect">
            <summary>
            ネイティブの PostEffect クラスをインスタンス化する。
            </summary>
            <returns></returns>
        </member>
        <member name="M:ace.ObjectSystemFactory.CreateTransition">
            <summary>
            ネイティブの PostEffect クラスをインスタンス化する。
            </summary>
            <returns></returns>
        </member>
        <member name="T:ace.PostEffectGrayScale">
            <summary>
            グレースケール化するポストエフェクトクラス
            </summary>
        </member>
        <member name="T:ace.PostEffect">
            <summary>
            ポストエフェクトを適用するクラス
            </summary>
        </member>
        <member name="M:ace.PostEffect.OnDraw(ace.RenderTexture2D,ace.RenderTexture2D)">
            		@brief	
            <summary>
            オーバーライドして、毎フレーム描画される処理を記述できる。
            </summary>
        </member>
        <member name="M:ace.PostEffect.DrawOnTexture2DWithMaterial(ace.RenderTexture2D,ace.Material2D)">
            <summary>
            マテリアルを用いてテクスチャに画像を描画する。
            </summary>
            <param name="target">描画先</param>
            <param name="material">マテリアル</param>
        </member>
        <member name="T:ace.PostEffectGaussianBlur">
            <summary>
            ガウスぼかしをかけるポストエフェクトクラス
            </summary>
        </member>
        <member name="P:ace.PostEffectGaussianBlur.Intensity">
            <summary>
            ぼかしの強さを設定する。
            </summary>
            <remarks>
            実質的にはガウス関数の分散にあたる値の平方根
            </remarks>
        </member>
        <member name="T:ace.PostEffectLightBloom">
            <summary>
            輝度の高い画素のみをぼかして加算するポストエフェクト
            </summary>
        </member>
        <member name="P:ace.PostEffectLightBloom.Intensity">
            <summary>
            ぼかしの強さを設定する。
            </summary>
            <remarks>
            実質的にはガウス関数の分散にあたる値の平方根
            </remarks>
        </member>
        <member name="P:ace.PostEffectLightBloom.Threshold">
            <summary>
            ぼかすピクセルの閾値を設定する。
            </summary>
            <remarks>
            この閾値を超えた値がぼかされ加算される。
            </remarks>
        </member>
        <member name="P:ace.PostEffectLightBloom.Exposure">
            <summary>
            露光の強さを指定する。
            </summary>
            <remarks>
            この値が高いほどぼかされる値の輝度が高くなる。
            </remarks>
        </member>
        <member name="P:ace.PostEffectLightBloom.IsLuminanceMode">
            <summary>
            輝度を参照するか指定する。
            </summary>
            <param name="value"></param>
            <remarks>
            この値がtrueだと、RGBではなく輝度からぼかされる色を決定する。
            </remarks>
        </member>
        <member name="T:ace.PostEffectSepia">
            <summary>
            セピア調化するポストエフェクトクラス
            </summary>
        </member>
        <member name="T:ace.Scene">
            <summary>
            レイヤーの更新と描画を管理するシーン機能を提供するクラス。
            </summary>
        </member>
        <member name="M:ace.Scene.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:ace.Scene.AddLayer(ace.Layer)">
            <summary>
            指定したレイヤーをこのシーンに追加する。
            </summary>
            <param name="layer">追加されるレイヤー</param>
        </member>
        <member name="M:ace.Scene.RemoveLayer(ace.Layer)">
            <summary>
            指定したレイヤーをこのシーンから削除する。
            </summary>
            <param name="layer">削除されるレイヤー</param>
        </member>
        <member name="M:ace.Scene.AddComponent(ace.SceneComponent,System.String)">
            <summary>
            指定したコンポーネントをこのシーンに追加する。
            </summary>
            <param name="component">追加するコンポーネント</param>
            <param name="key">コンポーネントに関連付けるキー</param>
        </member>
        <member name="M:ace.Scene.GetComponent(System.String)">
            <summary>
            指定したキーを持つコンポーネントを取得する。
            </summary>
            <param name="key">取得するコンポーネントのキー</param>
            <returns>コンポーネント</returns>
        </member>
        <member name="M:ace.Scene.RemoveComponent(System.String)">
            <summary>
            指定したコンポーネントをこのシーンから削除する。
            </summary>
            <param name="key">削除するコンポーネントを示すキー</param>
        </member>
        <member name="M:ace.Scene.OnUpdating">
            <summary>
            オーバーライドして、Updateの直前に実行する処理を記述する。
            </summary>
        </member>
        <member name="M:ace.Scene.OnUpdated">
            <summary>
            オーバーライドして、Updateの直後に実行する処理を記述する。
            </summary>
        </member>
        <member name="M:ace.Scene.OnUpdateForTheFirstTime">
            <summary>
            オーバーライドして、最初のシーン更新時に実行する処理を記述する。
            </summary>
        </member>
        <member name="M:ace.Scene.OnTransitionFinished">
            <summary>
            オーバーライドして、トランジション終了時に実行する処理を記述する。(※DoEvents関数内で実行される。)
            </summary>
        </member>
        <member name="M:ace.Scene.OnChanging">
            <summary>
            オーバーライドして、このシーンから別のシーンに切り替わる際に実行される処理を記述する。
            </summary>
        </member>
        <member name="M:ace.Scene.OnDestroy">
            <summary>
            オーバーライドして、このシーンが無条件に破棄される際に実行される処理を記述する。
            </summary>
        </member>
        <member name="P:ace.Scene.HDRMode">
            <summary>
            描画先がHDRかどうか、取得、または設定する。
            </summary>
        </member>
        <member name="P:ace.Scene.EffectedScreen">
            <summary>
            全てのレイヤーとポストエフェクトが描画され終わった画面をテクスチャとして取得する。
            </summary>
            <returns>画面</returns>
            <remarks>テクスチャの内容はシーンが描画されるたびに変わる。主にシーン遷移の際に使用する。</remarks>
        </member>
        <member name="P:ace.Scene.Layers">
            <summary>
            所属しているレイヤーを取得する。
            </summary>
        </member>
        <member name="T:ace.SceneComponent">
            <summary>
            ace.Scene クラスに登録することができるコンポーネント。
            </summary>
        </member>
        <member name="M:ace.SceneComponent.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:ace.SceneComponent.OnUpdated">
            <summary>
            オーバーライドして、このコンポーネントの Update時の処理を記述できる。
            </summary>
        </member>
        <member name="P:ace.SceneComponent.Owner">
            <summary>
            このインスタンスを保持しているシーン クラスを取得する。
            </summary>
        </member>
        <member name="P:ace.SceneComponent.IsUpdated">
            <summary>
            このコンポーネントが更新されるかどうかを取得または設定する。
            </summary>
        </member>
        <member name="T:ace.TextureObject2D">
            <summary>
            テクスチャと描画パラメータを用いて、更新・描画処理を行う単位となる2Dオブジェクトの機能を提供するクラス
            </summary>
        </member>
        <member name="M:ace.TextureObject2D.#ctor">
            <summary>
            ace.TextureObject2D の新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:ace.TextureObject2D.Texture">
            <summary>
            この2Dオブジェクトの描画に使用するテクスチャを取得または設定します。
            </summary>
        </member>
        <member name="P:ace.TextureObject2D.CenterPosition">
            <summary>
            この2Dオブジェクトを描画する際の描画原点を取得または設定します。描画原点は拡大・回転・描画の中心となる、画像データ内での座標です。
            </summary>
        </member>
        <member name="P:ace.TextureObject2D.Color">
            <summary>
            この2Dオブジェクトを描画する際に合成する色を取得または設定します。
            </summary>
        </member>
        <member name="P:ace.TextureObject2D.TurnLR">
            <summary>
            この2Dオブジェクトを描画する際に左右反転するかどうかの真偽値を取得または設定します。
            </summary>
        </member>
        <member name="P:ace.TextureObject2D.TurnUL">
            <summary>
            この2Dオブジェクトを描画する際に上下反転するかどうかの真偽値を取得または設定します。
            </summary>
        </member>
        <member name="P:ace.TextureObject2D.DrawingPriority">
            <summary>
            この2Dオブジェクトを描画する際の描画優先度を取得または設定します。描画優先度が高いほど手前に描画されます。
            </summary>
        </member>
        <member name="P:ace.TextureObject2D.AlphaBlend">
            <summary>
            この2Dオブジェクトを描画する際のブレンドモードを取得または設定します。
            </summary>
        </member>
        <member name="P:ace.TextureObject2D.Src">
            <summary>
             テクスチャ上の描画範囲を設定する。(フィールドのいずれかが0より小さかったらテクスチャ全体を描画する。)
             </summary>
        </member>
        <member name="P:ace.TextureObject2D.TextureFilterType">
            <summary>
             この2Dオブジェクトを描画する際のテクスチャフィルタを取得または設定する。
             </summary>
        </member>
        <member name="T:ace.Transition">
            <summary>
            シーン遷移時の効果を適用するクラス
            </summary>
        </member>
        <member name="M:ace.Transition.OnUpdate">
            <summary>
            オーバーライドして、このオブジェクトの更新処理を記述できる。
            </summary>
        </member>
        <member name="M:ace.Transition.ChangeScene">
            <summary>
            実際にシーンを次のシーンに切り替える。
            </summary>
        </member>
        <member name="M:ace.Transition.Finish">
            <summary>
            シーン遷移処理を終了する。
            </summary>
        </member>
        <member name="M:ace.Transition.DrawTriangleWithNextScene(ace.Vector2DF,ace.Vector2DF,ace.Vector2DF,ace.Color,ace.Color,ace.Color,ace.Vector2DF,ace.Vector2DF,ace.Vector2DF)">
            <summary>
            次のシーンを3角形に貼り付けて描画する。
            </summary>
            <param name="pos1">座標1(0～1)</param>
            <param name="pos2">座標2(0～1)</param>
            <param name="pos3">座標3(0～1)</param>
            <param name="col1">頂点カラー1</param>
            <param name="col2">頂点カラー2</param>
            <param name="col3">頂点カラー3</param>
            <param name="uv1">UV1(0～1)</param>
            <param name="uv2">UV2(0～1)</param>
            <param name="uv3">UV3(0～1)</param>
            <remarks>ChangeSceneを実行するまでは無効である。</remarks>
        </member>
        <member name="M:ace.Transition.DrawRectangleWithNextScene(ace.Vector2DF,ace.Vector2DF,ace.Vector2DF,ace.Vector2DF,ace.Color,ace.Color,ace.Color,ace.Color,ace.Vector2DF,ace.Vector2DF,ace.Vector2DF,ace.Vector2DF)">
            <summary>
            次のシーンを4角形に貼り付けて描画する。
            </summary>
            <param name="upperLeftPos">左上の描画位置(0～1)</param>
            <param name="upperRightPos">右上の描画位置(0～1)</param>
            <param name="lowerRightPos">右下の描画位置(0～1)</param>
            <param name="lowerLeftPos">左下の描画位置(0～1)</param>
            <param name="upperLeftCol">左上の頂点色</param>
            <param name="upperRightCol">右上の頂点色</param>
            <param name="lowerRightCol">右下の頂点色</param>
            <param name="lowerLeftCol">左下の頂点色</param>
            <param name="upperLeftUV">左上のUV値(0～1)</param>
            <param name="upperRightUV">右上のUV値(0～1)</param>
            <param name="lowerRightUV">右下のUV値(0～1)</param>
            <param name="lowerLeftUV">左下のUV値(0～1)</param>
            <remarks>ChangeSceneを実行するまでは無効である。</remarks>
        </member>
        <member name="M:ace.Transition.DrawTriangleWithPreviousScene(ace.Vector2DF,ace.Vector2DF,ace.Vector2DF,ace.Color,ace.Color,ace.Color,ace.Vector2DF,ace.Vector2DF,ace.Vector2DF)">
            <summary>
            前のシーンを3角形に貼り付けて描画する。
            </summary>
            <param name="pos1">座標1(0～1)</param>
            <param name="pos2">座標2(0～1)</param>
            <param name="pos3">座標3(0～1)</param>
            <param name="col1">頂点カラー1</param>
            <param name="col2">頂点カラー2</param>
            <param name="col3">頂点カラー3</param>
            <param name="uv1">UV1(0～1)</param>
            <param name="uv2">UV2(0～1)</param>
            <param name="uv3">UV3(0～1)</param>
            <remarks>ChangeSceneを実行すると前のシーンの描画は停止し、静止画として扱われる。</remarks>
        </member>
        <member name="M:ace.Transition.DrawRectangleWithPreviousScene(ace.Vector2DF,ace.Vector2DF,ace.Vector2DF,ace.Vector2DF,ace.Color,ace.Color,ace.Color,ace.Color,ace.Vector2DF,ace.Vector2DF,ace.Vector2DF,ace.Vector2DF)">
            <summary>
            前のシーンを4角形に貼り付けて描画する。
            </summary>
            <param name="upperLeftPos">左上の描画位置(0～1)</param>
            <param name="upperRightPos">右上の描画位置(0～1)</param>
            <param name="lowerRightPos">右下の描画位置(0～1)</param>
            <param name="lowerLeftPos">左下の描画位置(0～1)</param>
            <param name="upperLeftCol">左上の頂点色</param>
            <param name="upperRightCol">右上の頂点色</param>
            <param name="lowerRightCol">右下の頂点色</param>
            <param name="lowerLeftCol">左下の頂点色</param>
            <param name="upperLeftUV">左上のUV値(0～1)</param>
            <param name="upperRightUV">右上のUV値(0～1)</param>
            <param name="lowerRightUV">右下のUV値(0～1)</param>
            <param name="lowerLeftUV">左下のUV値(0～1)</param>
            <remarks>ChangeSceneを実行すると前のシーンの描画は停止し、静止画として扱われる。</remarks>
        </member>
        <member name="P:ace.Transition.IsSceneChanged">
            <summary>
            シーンが切り替わっているか取得する。
            </summary>
        </member>
        <member name="P:ace.Transition.IsFinished">
            <summary>
            シーン遷移処理が終了したか取得する。
            </summary>
        </member>
        <member name="T:ace.TransitionFade">
            <summary>
            フェードしながらシーン遷移する効果を適用するクラス
            </summary>
        </member>
        <member name="M:ace.TransitionFade.#ctor(System.Single,System.Single)">
            <summary>
            コンストラクタ
            </summary>
            <param name="fadeoutDuration">フェードアウトにかかる実時間(秒)</param>
            <param name="fadeinDuration">フェードインにかかる実時間(秒)</param>
        </member>
        <member name="T:ace.Profiler">
            <summary>
            プログラムの実行状況(計算時間や、使っているプロセッサ)を記録するクラス。 
            </summary>
        </member>
        <member name="M:ace.Profiler.Start(System.Int32)">
            <summary>
            計算の開始時間と、使用するプロセッサ番号を記録する。 
            </summary>
            <param name="id">プロファイリングを識別するID。Start関数は、IDの一致するEnd関数と対応する。 </param>
        </member>
        <member name="M:ace.Profiler.End(System.Int32)">
            <summary>
            計算の終了時間を記録し、プロファイリング結果を蓄積する。 
            </summary>
            <param name="id">プロファイリングを識別するID。End関数は、IDの一致するStart関数と対応する。 </param>
        </member>
        <member name="P:ace.Shape.ShapeType">
            <summary>
            図形のタイプを取得する。
            </summary>
        </member>
        <member name="P:ace.ArcShape.Position">
            <summary>
            弧の中心座標を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.ArcShape.OuterDiameter">
            <summary>
            弧の外径を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.ArcShape.InnerDiameter">
            <summary>
            弧の内径を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.ArcShape.Angle">
            <summary>
            弧の中心を軸とした回転角度を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.ArcShape.NumberOfCorners">
            <summary>
            弧の外周、内周上の曲がり角（滑らかさ）の数を取得または設定する。
            </summary>
        </member>
        <!-- 正しくない形式の XML コメントがメンバー "P:ace.ArcShape.StartingCorner" で無視されました -->
        <!-- 正しくない形式の XML コメントがメンバー "P:ace.ArcShape.EndingCorner" で無視されました -->
        <member name="P:ace.CircleShape.Position">
            <summary>
            弧の中心座標を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.CircleShape.OuterDiameter">
            <summary>
            弧の外径を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.CircleShape.InnerDiameter">
            <summary>
            弧の内径を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.CircleShape.Angle">
            <summary>
            弧の中心を軸とした回転角度を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.CircleShape.NumberOfCorners">
            <summary>
            弧の外周、内周上の曲がり角（滑らかさ）の数を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.LineShape.StartingPosition">
            <summary>
            線分の始点座標を取得もしくは設定する。
            </summary>
        </member>
        <member name="P:ace.LineShape.EndingPosition">
            <summary>
            線分の終点座標を取得もしくは設定する。
            </summary>
        </member>
        <member name="P:ace.LineShape.Thickness">
            <summary>
            線分の太さを取得もしくは設定する。
            </summary>
        </member>
        <member name="M:ace.PolygonShape.AddVertex(ace.Vector2DF)">
            <summary>
            ポリゴンを構成する頂点を追加する。
            </summary>
            <param name="vertex">新規に追加する頂点の座標</param>
        </member>
        <member name="M:ace.PolygonShape.ClearVertexes">
            <summary>
            ポリゴンを構成する頂点を全て削除する。
            </summary>
        </member>
        <member name="M:ace.PolygonShape.GetVertexesNum">
            <summary>
            ポリゴンを構成する頂点の数量を取得する。
            </summary>
            <returns>ポリゴンを構成する頂点の数量</returns>
        </member>
        <member name="P:ace.RectangleShape.DrawingArea">
            <summary>
            矩形の描画範囲を取得もしくは設定する。
            </summary>
        </member>
        <member name="P:ace.RectangleShape.UV">
            <summary>
            矩形の頂点別UVを取得もしくは設定する。
            </summary>
        </member>
        <member name="P:ace.RectangleShape.Angle">
            <summary>
            矩形の回転角度を取得もしくは設定する。
            </summary>
        </member>
        <member name="P:ace.RectangleShape.CenterPosition">
            <summary>
            矩形の回転の際の中心座標を取得もしくは設定する。
            </summary>
        </member>
        <member name="M:ace.TriangleShape.GetPointByIndex(System.Int32)">
            <summary>
            指定したインデックスの頂点の座標を取得する。
            </summary>
            <param name="index">座標を取得する頂点のインデックス（0 &lt;= index &lt; 3）</param>
            <returns>頂点の座標</returns>
        </member>
        <member name="M:ace.TriangleShape.SetPointByIndex(ace.Vector2DF,System.Int32)">
            <summary>
            指定したインデックスの頂点の座標を設定する。
            </summary>
            <param name="point">インデックスで指定した頂点に設定する座標</param>
            <param name="index">座標を設定する頂点のインデックス（0 &lt;= index &lt; 3）</param>
        </member>
        <member name="M:ace.TriangleShape.GetUVByIndex(System.Int32)">
            <summary>
            指定したインデックスの頂点のUVを取得する。
            </summary>
            <param name="index">UVを取得する頂点のインデックス（0 &lt;= index &lt; 3）</param>
            <returns>頂点のUV</returns>
        </member>
        <member name="M:ace.TriangleShape.SetUVByIndex(ace.Vector2DF,System.Int32)">
            <summary>
            指定したインデックスの頂点のUVを設定する。
            </summary>
            <param name="uv">インデックスで指定した頂点に設定するUV</param>
            <param name="index">UVを設定する頂点のインデックス（0 &lt;= index &lt; 3）</param>
        </member>
        <member name="T:ace.Sound">
            <summary>
            音を管理するクラス
            </summary>
            <summary>
            音を管理するクラス 
            </summary>
        </member>
        <member name="M:ace.Sound.CreateSoundSource(System.String,System.Boolean)">
            <summary>
            音を読み込む。
            </summary>
            <param name="path">パス</param>
            <param name="isDecompressed">解凍するか?</param>
            <returns>音源</returns>
        </member>
        <member name="M:ace.Sound.IsPlaying(System.Int32)">
            <summary>
            音が再生中か、取得する。
            </summary>
            <param name="id">ID</param>
            <returns>再生中か?</returns>
        </member>
        <member name="M:ace.Sound.Play(ace.SoundSource)">
            <summary>
            音を再生する。 
            </summary>
            <param name="soundSource">音源 </param>
            <returns>ID </returns>
        </member>
        <member name="M:ace.Sound.GetIsPlaying(System.Int32)">
            <summary>
            音が再生中か、取得する。 
            </summary>
            <param name="id">ID </param>
            <returns>再生中か? </returns>
        </member>
        <member name="M:ace.Sound.StopAll">
            <summary>
            全ての再生中の音を停止する。 
            </summary>
        </member>
        <member name="M:ace.Sound.Stop(System.Int32)">
            <summary>
            指定した音を停止する。 
            </summary>
            <param name="id">ID </param>
        </member>
        <member name="M:ace.Sound.Pause(System.Int32)">
            <summary>
            指定した音を一時停止する。 
            </summary>
            <param name="id">ID </param>
        </member>
        <member name="M:ace.Sound.Resume(System.Int32)">
            <summary>
            指定した一時停止中の音の一時停止を解除する。 
            </summary>
            <param name="id">ID </param>
        </member>
        <member name="M:ace.Sound.SetVolume(System.Int32,System.Single)">
            <summary>
            指定した音の音量を設定する。 
            </summary>
            <param name="id">ID </param>
            <param name="volume">音量(0.0～1.0) </param>
        </member>
        <member name="M:ace.Sound.FadeIn(System.Int32,System.Single)">
            <summary>
            指定した音をフェードインさせる。 
            </summary>
            <param name="id">ID </param>
            <param name="second">フェードインに使用する時間(秒) </param>
        </member>
        <member name="M:ace.Sound.FadeOut(System.Int32,System.Single)">
            <summary>
            指定した音をフェードアウトさせる。 
            </summary>
            <param name="id">ID </param>
            <param name="second">フェードアウトに使用する時間(秒) </param>
        </member>
        <member name="T:ace.SoundSource">
            <summary>
            音源のクラス
            </summary>
            <summary>
            音源のクラス 
            </summary>
        </member>
        <member name="P:ace.SoundSource.LoopStartingPoint">
            <summary>
            ループポイントの開始地点(秒)を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.SoundSource.LoopEndPoint">
            <summary>
            ループポイントの終了地点(秒)を取得または設定する。
            </summary>
        </member>
        <member name="P:ace.SoundSource.IsLoopingMode">
            <summary>
            ループするかを取得または設定する。
            </summary>
        </member>
        <member name="P:ace.SoundSource.Length">
            <summary>
            音の長さを取得する。
            </summary>
        </member>
        <member name="T:ace.IG">
            <summary>
            インスタンスのネイティブの直接のラッパーを取得するためのメソッド集
            </summary>
        </member>
        <member name="T:ace.RotationOrder">
            <summary>
            回転行列の計算順序 
            </summary>
        </member>
        <member name="F:ace.RotationOrder.QUATERNION">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.RotationOrder.XZY">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.RotationOrder.XYZ">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.RotationOrder.ZXY">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.RotationOrder.ZYX">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.RotationOrder.YXZ">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.RotationOrder.YZX">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.RotationOrder.AXIS">
            <summary>
            
            </summary>
        </member>
        <member name="T:ace.InterpolationType">
            <summary>
            キー間の補間方法 
            </summary>
        </member>
        <member name="F:ace.InterpolationType.Constant">
            <summary>
            次のキーまで定数で補間 
            </summary>
        </member>
        <member name="F:ace.InterpolationType.Linear">
            <summary>
            次のキーまで線形で補間 
            </summary>
        </member>
        <member name="F:ace.InterpolationType.Cubic">
            <summary>
            次のキーまで三次方程式で補間 
            </summary>
        </member>
        <member name="T:ace.AutoGeneratedLayerType">
            <summary>
            起動時に自動的に生成されるレイヤーの種類 
            </summary>
        </member>
        <member name="F:ace.AutoGeneratedLayerType.Layer2D">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.AutoGeneratedLayerType.Layer3D">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.AutoGeneratedLayerType.Nothing">
            <summary>
            
            </summary>
        </member>
        <member name="T:ace.LayerType">
            <summary>
            レイヤーの種類 
            </summary>
        </member>
        <member name="F:ace.LayerType.Layer2D">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.LayerType.Layer3D">
            <summary>
            
            </summary>
        </member>
        <member name="T:ace.WritingDirection">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.WritingDirection.Vertical">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.WritingDirection.Horizontal">
            <summary>
            
            </summary>
        </member>
        <member name="T:ace.FramerateMode">
            <summary>
            フレームレートの制御方法 
            </summary>
        </member>
        <member name="F:ace.FramerateMode.Constant">
            <summary>
            固定フレームレート 
            </summary>
        </member>
        <member name="F:ace.FramerateMode.Variable">
            <summary>
            可変フレームレート 
            </summary>
        </member>
        <member name="T:ace.TextureFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.TextureFormat.R8G8B8A8_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.TextureFormat.R32G32B32A32_FLOAT">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.TextureFormat.R8G8B8A8_UNORM_SRGB">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.TextureFormat.R16G16_FLOAT">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.TextureFormat.R8_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.TextureFormat.BC1">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.TextureFormat.BC2">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.TextureFormat.BC3">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.TextureFormat.BC1_SRGB">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.TextureFormat.BC2_SRGB">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.TextureFormat.BC3_SRGB">
            <summary>
            
            </summary>
        </member>
        <member name="T:ace.TextureClassType">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.TextureClassType.Texture2D">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.TextureClassType.RenderTexture2D">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.TextureClassType.CubemapTexture">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.TextureClassType.DepthBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="T:ace.AlphaBlendMode">
            <summary>
            描画時のブレンドモードを表す列挙体 
            </summary>
        </member>
        <member name="F:ace.AlphaBlendMode.Opacity">
            <summary>
            不透明 
            </summary>
        </member>
        <member name="F:ace.AlphaBlendMode.Blend">
            <summary>
            透明 
            </summary>
        </member>
        <member name="F:ace.AlphaBlendMode.Add">
            <summary>
            加算 
            </summary>
        </member>
        <member name="F:ace.AlphaBlendMode.Sub">
            <summary>
            減算 
            </summary>
        </member>
        <member name="F:ace.AlphaBlendMode.Mul">
            <summary>
            乗算 
            </summary>
        </member>
        <member name="F:ace.AlphaBlendMode.AddAll">
            <summary>
            全加算(内部処理用) 
            </summary>
        </member>
        <member name="T:ace.TextureFilterType">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.TextureFilterType.Nearest">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.TextureFilterType.Linear">
            <summary>
            
            </summary>
        </member>
        <member name="T:ace.TextureWrapType">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.TextureWrapType.Repeat">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.TextureWrapType.Clamp">
            <summary>
            
            </summary>
        </member>
        <member name="T:ace.CullingType">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.CullingType.Front">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.CullingType.Back">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.CullingType.Double">
            <summary>
            
            </summary>
        </member>
        <member name="T:ace.GraphicsDeviceType">
            <summary>
            描画方法 
            </summary>
        </member>
        <member name="F:ace.GraphicsDeviceType.Default">
            <summary>
            実行環境で最も安定している描画方法(初期化時に使用) 
            </summary>
        </member>
        <member name="F:ace.GraphicsDeviceType.DirectX11">
            <summary>
            DirectX11. 
            </summary>
        </member>
        <member name="F:ace.GraphicsDeviceType.OpenGL">
            <summary>
            OpenGL. 
            </summary>
        </member>
        <member name="T:ace.Object2DType">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Object2DType.Unknown">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Object2DType.Texture">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Object2DType.Camera">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Object2DType.Effect">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Object2DType.Text">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Object2DType.Map">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Object2DType.Geometry">
            <summary>
            
            </summary>
        </member>
        <member name="T:ace.RenderedObject3DType">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.RenderedObject3DType.Unknown">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.RenderedObject3DType.Mesh">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.RenderedObject3DType.Camera">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.RenderedObject3DType.Effect">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.RenderedObject3DType.DirectionalLight">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.RenderedObject3DType.MassObject">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.RenderedObject3DType.Terrain">
            <summary>
            
            </summary>
        </member>
        <member name="T:ace.ShaderVariableType">
            <summary>
            シェーダーに対して外部から設定可能なプロパティの変数の種類 
            </summary>
        </member>
        <member name="F:ace.ShaderVariableType.Unknown">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.ShaderVariableType.Float">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.ShaderVariableType.Vector2DF">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.ShaderVariableType.Vector3DF">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.ShaderVariableType.Vector4DF">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.ShaderVariableType.Vector4DF_Array">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.ShaderVariableType.Matrix44">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.ShaderVariableType.Matrix44_Array">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.ShaderVariableType.Texture2D">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.ShaderVariableType.CubemapTexture">
            <summary>
            
            </summary>
        </member>
        <member name="T:ace.VisualizedBufferType">
            <summary>
            3D描画時に表示されるバッファ 
            </summary>
        </member>
        <member name="F:ace.VisualizedBufferType.FinalImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.VisualizedBufferType.DiffuseColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.VisualizedBufferType.SpecularColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.VisualizedBufferType.Normal">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.VisualizedBufferType.Smoothness">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.VisualizedBufferType.Environment">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.VisualizedBufferType.Occlusion">
            <summary>
            
            </summary>
        </member>
        <member name="T:ace.MouseButtonState">
            <summary>
            マウスボタンの押し状態を示す列挙型 
            </summary>
        </member>
        <member name="F:ace.MouseButtonState.Push">
            <summary>
            ボタンをこのフレームで押した状態 
            </summary>
        </member>
        <member name="F:ace.MouseButtonState.Release">
            <summary>
            ボタンをこのフレームで離した状態 
            </summary>
        </member>
        <member name="F:ace.MouseButtonState.Free">
            <summary>
            ボタンを離し続けている状態 
            </summary>
        </member>
        <member name="F:ace.MouseButtonState.Hold">
            <summary>
            ボタンを押し続けている状態 
            </summary>
        </member>
        <member name="T:ace.Keys">
            <summary>
            ACEで扱うキーボードのキー一覧 
            </summary>
        </member>
        <member name="F:ace.Keys.Unknown">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Space">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Apostrophe">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Comma">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Minus">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Period">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Slash">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Num0">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Num1">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Num2">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Num3">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Num4">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Num5">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Num6">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Num7">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Num8">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Num9">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Semicolon">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Equal">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.A">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.B">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.C">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.D">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.E">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.G">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.H">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.I">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.J">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.K">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.L">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.M">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.N">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.O">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.P">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Q">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.R">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.S">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.T">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.U">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.V">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.W">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.X">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Y">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Z">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.LeftBracket">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Backslash">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.RightBracket">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.GraveAccent">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.World1">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.World2">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Escape">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Enter">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Tab">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Backspace">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Insert">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Delete">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Right">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Left">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Down">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Up">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.PageUp">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.PageDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Home">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.End">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.CapsLock">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.ScrollLock">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.NumLock">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.PrintScreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Pause">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F1">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F2">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F3">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F4">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F5">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F6">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F7">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F8">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F9">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F10">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F11">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F12">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F13">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F14">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F15">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F16">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F17">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F18">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F19">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F20">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F21">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F22">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F23">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F24">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.F25">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Keypad0">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Keypad1">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Keypad2">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Keypad3">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Keypad4">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Keypad5">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Keypad6">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Keypad7">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Keypad8">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Keypad9">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.KeypadDecimal">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.KeypadDivide">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.KeypadMultiply">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.KeypadSubstract">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.KeypadAdd">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.KeypadEnter">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.KeypadEqual">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.LeftShift">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.LeftControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.LeftAlt">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.LeftWin">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.RightShift">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.RightControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.RightAlt">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.RightWin">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Menu">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.Last">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.Keys.MAX">
            <summary>
            
            </summary>
        </member>
        <member name="T:ace.KeyState">
            <summary>
            キーボードの押下状態を示す列挙型 
            </summary>
        </member>
        <member name="F:ace.KeyState.Push">
            <summary>
            キーをこのフレームで押した状態 
            </summary>
        </member>
        <member name="F:ace.KeyState.Release">
            <summary>
            キーをこのフレームで離した状態 
            </summary>
        </member>
        <member name="F:ace.KeyState.Hold">
            <summary>
            キーを押し続けている状態 
            </summary>
        </member>
        <member name="F:ace.KeyState.Free">
            <summary>
            キーを離し続けている状態 
            </summary>
        </member>
        <member name="T:ace.JoystickButtonState">
            <summary>
            ジョイスティックのボタンの押し状態を示す列挙型 
            </summary>
        </member>
        <member name="F:ace.JoystickButtonState.Push">
            <summary>
            ボタンをこのフレームで押した状態 
            </summary>
        </member>
        <member name="F:ace.JoystickButtonState.Release">
            <summary>
            ボタンをこのフレームで離した状態 
            </summary>
        </member>
        <member name="F:ace.JoystickButtonState.Free">
            <summary>
            ボタンを離し続けている状態 
            </summary>
        </member>
        <member name="F:ace.JoystickButtonState.Hold">
            <summary>
            ボタンを押し続けている状態 
            </summary>
        </member>
        <member name="T:ace.LogLevel">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.LogLevel.Error">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.LogLevel.Critical">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.LogLevel.Warning">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.LogLevel.Information">
            <summary>
            
            </summary>
        </member>
        <member name="F:ace.LogLevel.All">
            <summary>
            
            </summary>
        </member>
        <member name="T:ace.ShapeType">
            <summary>
            図形の種類 
            </summary>
        </member>
        <member name="F:ace.ShapeType.CircleShape">
            <summary>
            円 
            </summary>
        </member>
        <member name="F:ace.ShapeType.ArcShape">
            <summary>
            弧 
            </summary>
        </member>
        <member name="F:ace.ShapeType.LineShape">
            <summary>
            線分 
            </summary>
        </member>
        <member name="F:ace.ShapeType.RectangleShape">
            <summary>
            矩形 
            </summary>
        </member>
        <member name="F:ace.ShapeType.TriangleShape">
            <summary>
            三角形 
            </summary>
        </member>
        <member name="F:ace.ShapeType.PolygonShape">
            <summary>
            多角形 
            </summary>
        </member>
        <member name="T:ace.ChildMode">
            <summary>
            オブジェクトの親子関係の同期方法を表す列挙体 
            </summary>
        </member>
        <member name="F:ace.ChildMode.Position">
            <summary>
            位置のみを同期する。 
            </summary>
        </member>
        <member name="F:ace.ChildMode.All">
            <summary>
            位置・角度・拡大率を同期する。 
            </summary>
        </member>
        <member name="F:ace.ChildMode.Nothing">
            <summary>
            同期を行わない。 
            </summary>
        </member>
    </members>
</doc>
