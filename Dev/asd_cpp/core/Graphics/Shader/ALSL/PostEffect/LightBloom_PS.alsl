
/*
float4 g_weight;
float g_threshold;
float g_exposure;

#if BLUR_X
Texture2D g_blurredTexture				: register( t0 );
SamplerState g_blurredSampler			: register( s0 );
#endif

#if BLUR_Y
Texture2D g_blurredTexture				: register( t0 );
SamplerState g_blurredSampler			: register( s0 );
#endif

#if SUM
Texture2D g_originalTexture				: register( t0 );
SamplerState g_originalSampler			: register( s0 );

Texture2D g_blurred0Texture				: register( t1 );
SamplerState g_blurred0Sampler			: register( s1 );

Texture2D g_blurred1Texture				: register( t2 );
SamplerState g_blurred1Sampler			: register( s2 );

Texture2D g_blurred2Texture				: register( t3 );
SamplerState g_blurred2Sampler			: register( s3 );

#endif
*/


float GetLuminance(float3 color)
{
	return color.x * 0.3 + color.y * 0.59 + color.z * 0.11;
}

float4 GetColor(float2 uv)
{
#if BLUR_X
	float4  color = SampleTexture(g_blurredTexture, g_blurredSampler, uv) * g_exposure;
	color.xyz = min(color.xyz, float3(255.000, 255.000, 255.000));

#if LUM
	// UnrealEngine4éQçl
	float lum = GetLuminance(color.xyz);
	float bloomedLum = lum - g_threshold;
	float bloomedPower = min(max(bloomedLum / 2.0, 0.0),1.0);
	return color * bloomedPower;
#else
	float3 bloomedLum = color.xyz - float3(g_threshold, g_threshold, g_threshold);
	bloomedLum.xyz = max(bloomedLum.xyz, float3(0.0, 0.0, 0.0) ); 
	color.xyz = bloomedLum;
	return color;
#endif

#endif

#if BLUR_Y
	return SampleTexture(g_blurredTexture, g_blurredSampler, uv);
#endif

#if SUM
	return float4(0.0,0.0,0.0,0.0);
#endif
}

float4 CalcBlurredColor(float2 uv)
{
#if SUM
	return float4(0.0,0.0,0.0,0.0);
#endif

#if BLUR_X
	float2 size = GetTextureSize(g_blurredTexture, g_blurredSampler);
#endif

#if BLUR_Y
	float2 size = GetTextureSize(g_blurredTexture, g_blurredSampler);
#endif

#if SUM
	float2 size = float2(0.0,0.0);
	float2 shift_p = float2(0.5/size.x, -0.5/size.y);
	float2 shift_m = float2(-0.5/size.x, -0.5/size.y);
	float2 adder = float2(2.0f/size.x,0.0);
#endif

#if BLUR_X
	float2 shift_p = float2(0.5/size.x, -0.5/size.y);
	float2 shift_m = float2(-0.5/size.x, -0.5/size.y);
	float2 adder = float2(2.0f/size.x,0.0);
#endif

#if BLUR_Y
	float2 shift_p = float2(-0.5/size.x, 0.5/size.y);
	float2 shift_m = float2(-0.5/size.x, -0.5/size.y);
	float2 adder = float2(0.0,2.0/size.y);
#endif

	float4 sum = float4(0.0,0.0,0.0,0.0);

	sum += g_weight1.x * GetColor( uv + shift_p + adder * 0.0 );
	sum += g_weight1.x * GetColor( uv + shift_m - adder * 0.0 );
	sum += g_weight1.y * GetColor( uv + shift_p + adder * 1.0 );
	sum += g_weight1.y * GetColor( uv + shift_m - adder * 1.0 );
	sum += g_weight1.z * GetColor( uv + shift_p + adder * 2.0 );
	sum += g_weight1.z * GetColor( uv + shift_m - adder * 2.0 );
	sum += g_weight1.w * GetColor( uv + shift_p + adder * 3.0 );
	sum += g_weight1.w * GetColor( uv + shift_m - adder * 3.0 );
	sum += g_weight2.x * GetColor( uv + shift_p + adder * 4.0 );
	sum += g_weight2.x * GetColor( uv + shift_m - adder * 4.0 );
	sum += g_weight2.y * GetColor( uv + shift_p + adder * 5.0 );
	sum += g_weight2.y * GetColor( uv + shift_m - adder * 5.0 );
	sum += g_weight2.z * GetColor( uv + shift_p + adder * 6.0 );
	sum += g_weight2.z * GetColor( uv + shift_m - adder * 6.0 );
	sum += g_weight2.w * GetColor( uv + shift_p + adder * 7.0 );
	sum += g_weight2.w * GetColor( uv + shift_m - adder * 7.0 );

	sum.a = 1.0;

	return sum;
}

float4 Main_(float2 uv)
{
#if BLUR_X
	return CalcBlurredColor(uv);
#endif
#if BLUR_Y
	return CalcBlurredColor(uv);
#endif
#if SUM
	return SampleTexture(g_originalTexture, g_originalSampler, uv) +
	SampleTexture(g_blurred0Texture, g_blurred0Sampler, uv) * 0.5 +
	SampleTexture(g_blurred1Texture, g_blurred1Sampler, uv) * 0.3 +
	SampleTexture(g_blurred2Texture, g_blurred2Sampler, uv) * 0.2;
#endif
}
