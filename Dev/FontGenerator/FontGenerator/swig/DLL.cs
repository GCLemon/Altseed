/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace FontGenerator.swig {

using System;
using System.Runtime.InteropServices;

unsafe partial class DLL : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal DLL(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(DLL obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~DLL() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          FontGeneratorPINVOKE.delete_DLL(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public DLL() : this(FontGeneratorPINVOKE.new_DLL(), true) {
  }

  public bool Run() {
    bool ret = FontGeneratorPINVOKE.DLL_Run(swigCPtr);
    return ret;
  }

  public void SetFontSize(int fontSize) {
    FontGeneratorPINVOKE.DLL_SetFontSize(swigCPtr, fontSize);
  }

  public void SetFontColor(byte r, byte g, byte b, byte a) {
    FontGeneratorPINVOKE.DLL_SetFontColor(swigCPtr, r, g, b, a);
  }

  public void SetFontName(string name) {
    FontGeneratorPINVOKE.DLL_SetFontName(swigCPtr, name);
  }

  public void SetTextFilePath(string path) {
    FontGeneratorPINVOKE.DLL_SetTextFilePath(swigCPtr, path);
  }

  public void SetExportPath(string path) {
    FontGeneratorPINVOKE.DLL_SetExportPath(swigCPtr, path);
  }

}

}
