using System;
namespace ace {
	/// <summary>
	/// 回転行列の計算順序 
	///	</summary>
	public enum RotationOrder : int
	{
		/// <summary>
		/// 
		/// </summary>
		QUATERNION = ace.swig.RotationOrder.QUATERNION,
		/// <summary>
		/// 
		/// </summary>
		XZY = ace.swig.RotationOrder.XZY,
		/// <summary>
		/// 
		/// </summary>
		XYZ = ace.swig.RotationOrder.XYZ,
		/// <summary>
		/// 
		/// </summary>
		ZXY = ace.swig.RotationOrder.ZXY,
		/// <summary>
		/// 
		/// </summary>
		ZYX = ace.swig.RotationOrder.ZYX,
		/// <summary>
		/// 
		/// </summary>
		YXZ = ace.swig.RotationOrder.YXZ,
		/// <summary>
		/// 
		/// </summary>
		YZX = ace.swig.RotationOrder.YZX,
		/// <summary>
		/// 
		/// </summary>
		AXIS = ace.swig.RotationOrder.AXIS,
	}

	/// <summary>
	/// キー間の補間方法 
	///	</summary>
	public enum InterpolationType : int
	{
		/// <summary>
		/// 次のキーまで定数で補間 
		/// </summary>
		Constant = ace.swig.InterpolationType.Constant,
		/// <summary>
		/// 次のキーまで線形で補間 
		/// </summary>
		Linear = ace.swig.InterpolationType.Linear,
		/// <summary>
		/// 次のキーまで三次方程式で補間 
		/// </summary>
		Cubic = ace.swig.InterpolationType.Cubic,
	}

	/// <summary>
	/// 起動時に自動的に生成されるレイヤーの種類 
	///	</summary>
	public enum AutoGeneratedLayerType : int
	{
		/// <summary>
		/// 
		/// </summary>
		Layer2D = ace.swig.AutoGeneratedLayerType.Layer2D,
		/// <summary>
		/// 
		/// </summary>
		Layer3D = ace.swig.AutoGeneratedLayerType.Layer3D,
		/// <summary>
		/// 
		/// </summary>
		Nothing = ace.swig.AutoGeneratedLayerType.Nothing,
	}

	/// <summary>
	/// レイヤーの種類 
	///	</summary>
	public enum LayerType : int
	{
		/// <summary>
		/// 
		/// </summary>
		Layer2D = ace.swig.LayerType.Layer2D,
		/// <summary>
		/// 
		/// </summary>
		Layer3D = ace.swig.LayerType.Layer3D,
	}

	/// <summary>
	/// 
	///	</summary>
	public enum WritingDirection : int
	{
		/// <summary>
		/// 
		/// </summary>
		Vertical = ace.swig.WritingDirection.Vertical,
		/// <summary>
		/// 
		/// </summary>
		Horizontal = ace.swig.WritingDirection.Horizontal,
	}

	/// <summary>
	/// フレームレートの制御方法 
	///	</summary>
	public enum FramerateMode : int
	{
		/// <summary>
		/// 固定フレームレート 
		/// </summary>
		Constant = ace.swig.FramerateMode.Constant,
		/// <summary>
		/// 可変フレームレート 
		/// </summary>
		Variable = ace.swig.FramerateMode.Variable,
	}

	/// <summary>
	/// 
	///	</summary>
	public enum TextureFormat : int
	{
		/// <summary>
		/// 
		/// </summary>
		R8G8B8A8_UNORM = ace.swig.TextureFormat.R8G8B8A8_UNORM,
		/// <summary>
		/// 
		/// </summary>
		R32G32B32A32_FLOAT = ace.swig.TextureFormat.R32G32B32A32_FLOAT,
		/// <summary>
		/// 
		/// </summary>
		R8G8B8A8_UNORM_SRGB = ace.swig.TextureFormat.R8G8B8A8_UNORM_SRGB,
		/// <summary>
		/// 
		/// </summary>
		R16G16_FLOAT = ace.swig.TextureFormat.R16G16_FLOAT,
		/// <summary>
		/// 
		/// </summary>
		R8_UNORM = ace.swig.TextureFormat.R8_UNORM,
		/// <summary>
		/// 
		/// </summary>
		BC1 = ace.swig.TextureFormat.BC1,
		/// <summary>
		/// 
		/// </summary>
		BC2 = ace.swig.TextureFormat.BC2,
		/// <summary>
		/// 
		/// </summary>
		BC3 = ace.swig.TextureFormat.BC3,
		/// <summary>
		/// 
		/// </summary>
		BC1_SRGB = ace.swig.TextureFormat.BC1_SRGB,
		/// <summary>
		/// 
		/// </summary>
		BC2_SRGB = ace.swig.TextureFormat.BC2_SRGB,
		/// <summary>
		/// 
		/// </summary>
		BC3_SRGB = ace.swig.TextureFormat.BC3_SRGB,
	}

	/// <summary>
	/// 
	///	</summary>
	public enum TextureClassType : int
	{
		/// <summary>
		/// 
		/// </summary>
		Texture2D = ace.swig.TextureClassType.Texture2D,
		/// <summary>
		/// 
		/// </summary>
		RenderTexture2D = ace.swig.TextureClassType.RenderTexture2D,
		/// <summary>
		/// 
		/// </summary>
		CubemapTexture = ace.swig.TextureClassType.CubemapTexture,
		/// <summary>
		/// 
		/// </summary>
		DepthBuffer = ace.swig.TextureClassType.DepthBuffer,
	}

	/// <summary>
	/// 描画時のブレンドモードを表す列挙体 
	///	</summary>
	public enum AlphaBlendMode : int
	{
		/// <summary>
		/// 不透明 
		/// </summary>
		Opacity = ace.swig.AlphaBlendMode.Opacity,
		/// <summary>
		/// 透明 
		/// </summary>
		Blend = ace.swig.AlphaBlendMode.Blend,
		/// <summary>
		/// 加算 
		/// </summary>
		Add = ace.swig.AlphaBlendMode.Add,
		/// <summary>
		/// 減算 
		/// </summary>
		Sub = ace.swig.AlphaBlendMode.Sub,
		/// <summary>
		/// 乗算 
		/// </summary>
		Mul = ace.swig.AlphaBlendMode.Mul,
		/// <summary>
		/// 全加算(内部処理用) 
		/// </summary>
		AddAll = ace.swig.AlphaBlendMode.AddAll,
	}

	/// <summary>
	/// 
	///	</summary>
	public enum TextureFilterType : int
	{
		/// <summary>
		/// 
		/// </summary>
		Nearest = ace.swig.TextureFilterType.Nearest,
		/// <summary>
		/// 
		/// </summary>
		Linear = ace.swig.TextureFilterType.Linear,
	}

	/// <summary>
	/// 
	///	</summary>
	public enum TextureWrapType : int
	{
		/// <summary>
		/// 
		/// </summary>
		Repeat = ace.swig.TextureWrapType.Repeat,
		/// <summary>
		/// 
		/// </summary>
		Clamp = ace.swig.TextureWrapType.Clamp,
	}

	/// <summary>
	/// 
	///	</summary>
	public enum CullingType : int
	{
		/// <summary>
		/// 
		/// </summary>
		Front = ace.swig.CullingType.Front,
		/// <summary>
		/// 
		/// </summary>
		Back = ace.swig.CullingType.Back,
		/// <summary>
		/// 
		/// </summary>
		Double = ace.swig.CullingType.Double,
	}

	/// <summary>
	/// 描画方法 
	///	</summary>
	public enum GraphicsDeviceType : int
	{
		/// <summary>
		/// 実行環境で最も安定している描画方法(初期化時に使用) 
		/// </summary>
		Default = ace.swig.GraphicsDeviceType.Default,
		/// <summary>
		/// DirectX11. 
		/// </summary>
		DirectX11 = ace.swig.GraphicsDeviceType.DirectX11,
		/// <summary>
		/// OpenGL. 
		/// </summary>
		OpenGL = ace.swig.GraphicsDeviceType.OpenGL,
	}

	/// <summary>
	/// 
	///	</summary>
	public enum Object2DType : int
	{
		/// <summary>
		/// 
		/// </summary>
		Unknown = ace.swig.Object2DType.Unknown,
		/// <summary>
		/// 
		/// </summary>
		Texture = ace.swig.Object2DType.Texture,
		/// <summary>
		/// 
		/// </summary>
		Camera = ace.swig.Object2DType.Camera,
		/// <summary>
		/// 
		/// </summary>
		Effect = ace.swig.Object2DType.Effect,
		/// <summary>
		/// 
		/// </summary>
		Text = ace.swig.Object2DType.Text,
		/// <summary>
		/// 
		/// </summary>
		Map = ace.swig.Object2DType.Map,
		/// <summary>
		/// 
		/// </summary>
		Geometry = ace.swig.Object2DType.Geometry,
	}

	/// <summary>
	/// 
	///	</summary>
	public enum RenderedObject3DType : int
	{
		/// <summary>
		/// 
		/// </summary>
		Unknown = ace.swig.RenderedObject3DType.Unknown,
		/// <summary>
		/// 
		/// </summary>
		Mesh = ace.swig.RenderedObject3DType.Mesh,
		/// <summary>
		/// 
		/// </summary>
		Camera = ace.swig.RenderedObject3DType.Camera,
		/// <summary>
		/// 
		/// </summary>
		Effect = ace.swig.RenderedObject3DType.Effect,
		/// <summary>
		/// 
		/// </summary>
		DirectionalLight = ace.swig.RenderedObject3DType.DirectionalLight,
		/// <summary>
		/// 
		/// </summary>
		MassObject = ace.swig.RenderedObject3DType.MassObject,
		/// <summary>
		/// 
		/// </summary>
		Terrain = ace.swig.RenderedObject3DType.Terrain,
	}

	/// <summary>
	/// シェーダーに対して外部から設定可能なプロパティの変数の種類 
	///	</summary>
	public enum ShaderVariableType : int
	{
		/// <summary>
		/// 
		/// </summary>
		Unknown = ace.swig.ShaderVariableType.Unknown,
		/// <summary>
		/// 
		/// </summary>
		Float = ace.swig.ShaderVariableType.Float,
		/// <summary>
		/// 
		/// </summary>
		Vector2DF = ace.swig.ShaderVariableType.Vector2DF,
		/// <summary>
		/// 
		/// </summary>
		Vector3DF = ace.swig.ShaderVariableType.Vector3DF,
		/// <summary>
		/// 
		/// </summary>
		Vector4DF = ace.swig.ShaderVariableType.Vector4DF,
		/// <summary>
		/// 
		/// </summary>
		Vector4DF_Array = ace.swig.ShaderVariableType.Vector4DF_Array,
		/// <summary>
		/// 
		/// </summary>
		Matrix44 = ace.swig.ShaderVariableType.Matrix44,
		/// <summary>
		/// 
		/// </summary>
		Matrix44_Array = ace.swig.ShaderVariableType.Matrix44_Array,
		/// <summary>
		/// 
		/// </summary>
		Texture2D = ace.swig.ShaderVariableType.Texture2D,
		/// <summary>
		/// 
		/// </summary>
		CubemapTexture = ace.swig.ShaderVariableType.CubemapTexture,
	}

	/// <summary>
	/// 3D描画時に表示されるバッファ 
	///	</summary>
	public enum VisualizedBufferType : int
	{
		/// <summary>
		/// 
		/// </summary>
		FinalImage = ace.swig.VisualizedBufferType.FinalImage,
		/// <summary>
		/// 
		/// </summary>
		DiffuseColor = ace.swig.VisualizedBufferType.DiffuseColor,
		/// <summary>
		/// 
		/// </summary>
		SpecularColor = ace.swig.VisualizedBufferType.SpecularColor,
		/// <summary>
		/// 
		/// </summary>
		Normal = ace.swig.VisualizedBufferType.Normal,
		/// <summary>
		/// 
		/// </summary>
		Smoothness = ace.swig.VisualizedBufferType.Smoothness,
		/// <summary>
		/// 
		/// </summary>
		Environment = ace.swig.VisualizedBufferType.Environment,
		/// <summary>
		/// 
		/// </summary>
		Occlusion = ace.swig.VisualizedBufferType.Occlusion,
	}

	/// <summary>
	/// マウスボタンの押し状態を示す列挙型 
	///	</summary>
	public enum MouseButtonState : int
	{
		/// <summary>
		/// ボタンをこのフレームで押した状態 
		/// </summary>
		Push = ace.swig.MouseButtonState.Push,
		/// <summary>
		/// ボタンをこのフレームで離した状態 
		/// </summary>
		Release = ace.swig.MouseButtonState.Release,
		/// <summary>
		/// ボタンを離し続けている状態 
		/// </summary>
		Free = ace.swig.MouseButtonState.Free,
		/// <summary>
		/// ボタンを押し続けている状態 
		/// </summary>
		Hold = ace.swig.MouseButtonState.Hold,
	}

	/// <summary>
	/// ACEで扱うキーボードのキー一覧 
	///	</summary>
	public enum Keys : int
	{
		/// <summary>
		/// 
		/// </summary>
		Unknown = ace.swig.Keys.Unknown,
		/// <summary>
		/// 
		/// </summary>
		Space = ace.swig.Keys.Space,
		/// <summary>
		/// 
		/// </summary>
		Apostrophe = ace.swig.Keys.Apostrophe,
		/// <summary>
		/// 
		/// </summary>
		Comma = ace.swig.Keys.Comma,
		/// <summary>
		/// 
		/// </summary>
		Minus = ace.swig.Keys.Minus,
		/// <summary>
		/// 
		/// </summary>
		Period = ace.swig.Keys.Period,
		/// <summary>
		/// 
		/// </summary>
		Slash = ace.swig.Keys.Slash,
		/// <summary>
		/// 
		/// </summary>
		Num0 = ace.swig.Keys.Num0,
		/// <summary>
		/// 
		/// </summary>
		Num1 = ace.swig.Keys.Num1,
		/// <summary>
		/// 
		/// </summary>
		Num2 = ace.swig.Keys.Num2,
		/// <summary>
		/// 
		/// </summary>
		Num3 = ace.swig.Keys.Num3,
		/// <summary>
		/// 
		/// </summary>
		Num4 = ace.swig.Keys.Num4,
		/// <summary>
		/// 
		/// </summary>
		Num5 = ace.swig.Keys.Num5,
		/// <summary>
		/// 
		/// </summary>
		Num6 = ace.swig.Keys.Num6,
		/// <summary>
		/// 
		/// </summary>
		Num7 = ace.swig.Keys.Num7,
		/// <summary>
		/// 
		/// </summary>
		Num8 = ace.swig.Keys.Num8,
		/// <summary>
		/// 
		/// </summary>
		Num9 = ace.swig.Keys.Num9,
		/// <summary>
		/// 
		/// </summary>
		Semicolon = ace.swig.Keys.Semicolon,
		/// <summary>
		/// 
		/// </summary>
		Equal = ace.swig.Keys.Equal,
		/// <summary>
		/// 
		/// </summary>
		A = ace.swig.Keys.A,
		/// <summary>
		/// 
		/// </summary>
		B = ace.swig.Keys.B,
		/// <summary>
		/// 
		/// </summary>
		C = ace.swig.Keys.C,
		/// <summary>
		/// 
		/// </summary>
		D = ace.swig.Keys.D,
		/// <summary>
		/// 
		/// </summary>
		E = ace.swig.Keys.E,
		/// <summary>
		/// 
		/// </summary>
		F = ace.swig.Keys.F,
		/// <summary>
		/// 
		/// </summary>
		G = ace.swig.Keys.G,
		/// <summary>
		/// 
		/// </summary>
		H = ace.swig.Keys.H,
		/// <summary>
		/// 
		/// </summary>
		I = ace.swig.Keys.I,
		/// <summary>
		/// 
		/// </summary>
		J = ace.swig.Keys.J,
		/// <summary>
		/// 
		/// </summary>
		K = ace.swig.Keys.K,
		/// <summary>
		/// 
		/// </summary>
		L = ace.swig.Keys.L,
		/// <summary>
		/// 
		/// </summary>
		M = ace.swig.Keys.M,
		/// <summary>
		/// 
		/// </summary>
		N = ace.swig.Keys.N,
		/// <summary>
		/// 
		/// </summary>
		O = ace.swig.Keys.O,
		/// <summary>
		/// 
		/// </summary>
		P = ace.swig.Keys.P,
		/// <summary>
		/// 
		/// </summary>
		Q = ace.swig.Keys.Q,
		/// <summary>
		/// 
		/// </summary>
		R = ace.swig.Keys.R,
		/// <summary>
		/// 
		/// </summary>
		S = ace.swig.Keys.S,
		/// <summary>
		/// 
		/// </summary>
		T = ace.swig.Keys.T,
		/// <summary>
		/// 
		/// </summary>
		U = ace.swig.Keys.U,
		/// <summary>
		/// 
		/// </summary>
		V = ace.swig.Keys.V,
		/// <summary>
		/// 
		/// </summary>
		W = ace.swig.Keys.W,
		/// <summary>
		/// 
		/// </summary>
		X = ace.swig.Keys.X,
		/// <summary>
		/// 
		/// </summary>
		Y = ace.swig.Keys.Y,
		/// <summary>
		/// 
		/// </summary>
		Z = ace.swig.Keys.Z,
		/// <summary>
		/// 
		/// </summary>
		LeftBracket = ace.swig.Keys.LeftBracket,
		/// <summary>
		/// 
		/// </summary>
		Backslash = ace.swig.Keys.Backslash,
		/// <summary>
		/// 
		/// </summary>
		RightBracket = ace.swig.Keys.RightBracket,
		/// <summary>
		/// 
		/// </summary>
		GraveAccent = ace.swig.Keys.GraveAccent,
		/// <summary>
		/// 
		/// </summary>
		World1 = ace.swig.Keys.World1,
		/// <summary>
		/// 
		/// </summary>
		World2 = ace.swig.Keys.World2,
		/// <summary>
		/// 
		/// </summary>
		Escape = ace.swig.Keys.Escape,
		/// <summary>
		/// 
		/// </summary>
		Enter = ace.swig.Keys.Enter,
		/// <summary>
		/// 
		/// </summary>
		Tab = ace.swig.Keys.Tab,
		/// <summary>
		/// 
		/// </summary>
		Backspace = ace.swig.Keys.Backspace,
		/// <summary>
		/// 
		/// </summary>
		Insert = ace.swig.Keys.Insert,
		/// <summary>
		/// 
		/// </summary>
		Delete = ace.swig.Keys.Delete,
		/// <summary>
		/// 
		/// </summary>
		Right = ace.swig.Keys.Right,
		/// <summary>
		/// 
		/// </summary>
		Left = ace.swig.Keys.Left,
		/// <summary>
		/// 
		/// </summary>
		Down = ace.swig.Keys.Down,
		/// <summary>
		/// 
		/// </summary>
		Up = ace.swig.Keys.Up,
		/// <summary>
		/// 
		/// </summary>
		PageUp = ace.swig.Keys.PageUp,
		/// <summary>
		/// 
		/// </summary>
		PageDown = ace.swig.Keys.PageDown,
		/// <summary>
		/// 
		/// </summary>
		Home = ace.swig.Keys.Home,
		/// <summary>
		/// 
		/// </summary>
		End = ace.swig.Keys.End,
		/// <summary>
		/// 
		/// </summary>
		CapsLock = ace.swig.Keys.CapsLock,
		/// <summary>
		/// 
		/// </summary>
		ScrollLock = ace.swig.Keys.ScrollLock,
		/// <summary>
		/// 
		/// </summary>
		NumLock = ace.swig.Keys.NumLock,
		/// <summary>
		/// 
		/// </summary>
		PrintScreen = ace.swig.Keys.PrintScreen,
		/// <summary>
		/// 
		/// </summary>
		Pause = ace.swig.Keys.Pause,
		/// <summary>
		/// 
		/// </summary>
		F1 = ace.swig.Keys.F1,
		/// <summary>
		/// 
		/// </summary>
		F2 = ace.swig.Keys.F2,
		/// <summary>
		/// 
		/// </summary>
		F3 = ace.swig.Keys.F3,
		/// <summary>
		/// 
		/// </summary>
		F4 = ace.swig.Keys.F4,
		/// <summary>
		/// 
		/// </summary>
		F5 = ace.swig.Keys.F5,
		/// <summary>
		/// 
		/// </summary>
		F6 = ace.swig.Keys.F6,
		/// <summary>
		/// 
		/// </summary>
		F7 = ace.swig.Keys.F7,
		/// <summary>
		/// 
		/// </summary>
		F8 = ace.swig.Keys.F8,
		/// <summary>
		/// 
		/// </summary>
		F9 = ace.swig.Keys.F9,
		/// <summary>
		/// 
		/// </summary>
		F10 = ace.swig.Keys.F10,
		/// <summary>
		/// 
		/// </summary>
		F11 = ace.swig.Keys.F11,
		/// <summary>
		/// 
		/// </summary>
		F12 = ace.swig.Keys.F12,
		/// <summary>
		/// 
		/// </summary>
		F13 = ace.swig.Keys.F13,
		/// <summary>
		/// 
		/// </summary>
		F14 = ace.swig.Keys.F14,
		/// <summary>
		/// 
		/// </summary>
		F15 = ace.swig.Keys.F15,
		/// <summary>
		/// 
		/// </summary>
		F16 = ace.swig.Keys.F16,
		/// <summary>
		/// 
		/// </summary>
		F17 = ace.swig.Keys.F17,
		/// <summary>
		/// 
		/// </summary>
		F18 = ace.swig.Keys.F18,
		/// <summary>
		/// 
		/// </summary>
		F19 = ace.swig.Keys.F19,
		/// <summary>
		/// 
		/// </summary>
		F20 = ace.swig.Keys.F20,
		/// <summary>
		/// 
		/// </summary>
		F21 = ace.swig.Keys.F21,
		/// <summary>
		/// 
		/// </summary>
		F22 = ace.swig.Keys.F22,
		/// <summary>
		/// 
		/// </summary>
		F23 = ace.swig.Keys.F23,
		/// <summary>
		/// 
		/// </summary>
		F24 = ace.swig.Keys.F24,
		/// <summary>
		/// 
		/// </summary>
		F25 = ace.swig.Keys.F25,
		/// <summary>
		/// 
		/// </summary>
		Keypad0 = ace.swig.Keys.Keypad0,
		/// <summary>
		/// 
		/// </summary>
		Keypad1 = ace.swig.Keys.Keypad1,
		/// <summary>
		/// 
		/// </summary>
		Keypad2 = ace.swig.Keys.Keypad2,
		/// <summary>
		/// 
		/// </summary>
		Keypad3 = ace.swig.Keys.Keypad3,
		/// <summary>
		/// 
		/// </summary>
		Keypad4 = ace.swig.Keys.Keypad4,
		/// <summary>
		/// 
		/// </summary>
		Keypad5 = ace.swig.Keys.Keypad5,
		/// <summary>
		/// 
		/// </summary>
		Keypad6 = ace.swig.Keys.Keypad6,
		/// <summary>
		/// 
		/// </summary>
		Keypad7 = ace.swig.Keys.Keypad7,
		/// <summary>
		/// 
		/// </summary>
		Keypad8 = ace.swig.Keys.Keypad8,
		/// <summary>
		/// 
		/// </summary>
		Keypad9 = ace.swig.Keys.Keypad9,
		/// <summary>
		/// 
		/// </summary>
		KeypadDecimal = ace.swig.Keys.KeypadDecimal,
		/// <summary>
		/// 
		/// </summary>
		KeypadDivide = ace.swig.Keys.KeypadDivide,
		/// <summary>
		/// 
		/// </summary>
		KeypadMultiply = ace.swig.Keys.KeypadMultiply,
		/// <summary>
		/// 
		/// </summary>
		KeypadSubstract = ace.swig.Keys.KeypadSubstract,
		/// <summary>
		/// 
		/// </summary>
		KeypadAdd = ace.swig.Keys.KeypadAdd,
		/// <summary>
		/// 
		/// </summary>
		KeypadEnter = ace.swig.Keys.KeypadEnter,
		/// <summary>
		/// 
		/// </summary>
		KeypadEqual = ace.swig.Keys.KeypadEqual,
		/// <summary>
		/// 
		/// </summary>
		LeftShift = ace.swig.Keys.LeftShift,
		/// <summary>
		/// 
		/// </summary>
		LeftControl = ace.swig.Keys.LeftControl,
		/// <summary>
		/// 
		/// </summary>
		LeftAlt = ace.swig.Keys.LeftAlt,
		/// <summary>
		/// 
		/// </summary>
		LeftWin = ace.swig.Keys.LeftWin,
		/// <summary>
		/// 
		/// </summary>
		RightShift = ace.swig.Keys.RightShift,
		/// <summary>
		/// 
		/// </summary>
		RightControl = ace.swig.Keys.RightControl,
		/// <summary>
		/// 
		/// </summary>
		RightAlt = ace.swig.Keys.RightAlt,
		/// <summary>
		/// 
		/// </summary>
		RightWin = ace.swig.Keys.RightWin,
		/// <summary>
		/// 
		/// </summary>
		Menu = ace.swig.Keys.Menu,
		/// <summary>
		/// 
		/// </summary>
		Last = ace.swig.Keys.Last,
		/// <summary>
		/// 
		/// </summary>
		MAX = ace.swig.Keys.MAX,
	}

	/// <summary>
	/// キーボードの押下状態を示す列挙型 
	///	</summary>
	public enum KeyState : int
	{
		/// <summary>
		/// キーをこのフレームで押した状態 
		/// </summary>
		Push = ace.swig.KeyState.Push,
		/// <summary>
		/// キーをこのフレームで離した状態 
		/// </summary>
		Release = ace.swig.KeyState.Release,
		/// <summary>
		/// キーを押し続けている状態 
		/// </summary>
		Hold = ace.swig.KeyState.Hold,
		/// <summary>
		/// キーを離し続けている状態 
		/// </summary>
		Free = ace.swig.KeyState.Free,
	}

	/// <summary>
	/// ジョイスティックのボタンの押し状態を示す列挙型 
	///	</summary>
	public enum JoystickButtonState : int
	{
		/// <summary>
		/// ボタンをこのフレームで押した状態 
		/// </summary>
		Push = ace.swig.JoystickButtonState.Push,
		/// <summary>
		/// ボタンをこのフレームで離した状態 
		/// </summary>
		Release = ace.swig.JoystickButtonState.Release,
		/// <summary>
		/// ボタンを離し続けている状態 
		/// </summary>
		Free = ace.swig.JoystickButtonState.Free,
		/// <summary>
		/// ボタンを押し続けている状態 
		/// </summary>
		Hold = ace.swig.JoystickButtonState.Hold,
	}

	/// <summary>
	/// 
	///	</summary>
	public enum LogLevel : int
	{
		/// <summary>
		/// 
		/// </summary>
		Error = ace.swig.LogLevel.Error,
		/// <summary>
		/// 
		/// </summary>
		Critical = ace.swig.LogLevel.Critical,
		/// <summary>
		/// 
		/// </summary>
		Warning = ace.swig.LogLevel.Warning,
		/// <summary>
		/// 
		/// </summary>
		Information = ace.swig.LogLevel.Information,
		/// <summary>
		/// 
		/// </summary>
		All = ace.swig.LogLevel.All,
	}

	/// <summary>
	/// 図形の種類 
	///	</summary>
	public enum ShapeType : int
	{
		/// <summary>
		/// 円 
		/// </summary>
		CircleShape = ace.swig.ShapeType.CircleShape,
		/// <summary>
		/// 弧 
		/// </summary>
		ArcShape = ace.swig.ShapeType.ArcShape,
		/// <summary>
		/// 線分 
		/// </summary>
		LineShape = ace.swig.ShapeType.LineShape,
		/// <summary>
		/// 矩形 
		/// </summary>
		RectangleShape = ace.swig.ShapeType.RectangleShape,
		/// <summary>
		/// 三角形 
		/// </summary>
		TriangleShape = ace.swig.ShapeType.TriangleShape,
		/// <summary>
		/// 多角形 
		/// </summary>
		PolygonShape = ace.swig.ShapeType.PolygonShape,
	}

	/// <summary>
	/// オブジェクトの親子関係の同期方法を表す列挙体 
	///	</summary>
	public enum ChildMode : int
	{
		/// <summary>
		/// 位置のみを同期する。 
		/// </summary>
		Position = ace.swig.ChildMode.Position,
		/// <summary>
		/// 位置・角度・拡大率を同期する。 
		/// </summary>
		All = ace.swig.ChildMode.All,
		/// <summary>
		/// 同期を行わない。 
		/// </summary>
		Nothing = ace.swig.ChildMode.Nothing,
	}

	/// <summary>
	/// 
	/// </summary>
	public partial class ace_core_cs
	{
		internal ace.swig.ace_core_cs CoreInstance { get; set; }

		/// <summary>
		/// 
		/// </summary>
		public int GlobalReferenceCount__
		{
			get { return CoreInstance.GetGlobalReferenceCount__(); }
		}


	}


	/// <summary>
	/// 
	/// </summary>
	public partial class ace_core_csPINVOKE
	{
		internal ace.swig.ace_core_csPINVOKE CoreInstance { get; set; }

		/// <summary>
		/// 
		/// </summary>
		public int GlobalReferenceCount__
		{
			get { return CoreInstance.GetGlobalReferenceCount__(); }
		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void RenderSettings_IsLightweightMode_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2)
		{
			ace_core_csPINVOKE.RenderSettings_IsLightweightMode_set(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool RenderSettings_IsLightweightMode_get(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.RenderSettings_IsLightweightMode_get(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void RenderSettings_VisualizedBuffer_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.RenderSettings_VisualizedBuffer_set(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int RenderSettings_VisualizedBuffer_get(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.RenderSettings_VisualizedBuffer_get(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <returns></returns>
		public static global::System.IntPtr new_RenderSettings()
		{
			return ace_core_csPINVOKE.new_RenderSettings();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_RenderSettings(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_RenderSettings(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int IReference_AddRef(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.IReference_AddRef(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int IReference_GetRef(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.IReference_GetRef(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int IReference_Release(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.IReference_Release(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_IReference(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_IReference(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <returns></returns>
		public static global::System.IntPtr new_ReferenceObject()
		{
			return ace_core_csPINVOKE.new_ReferenceObject();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_ReferenceObject(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_ReferenceObject(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int ReferenceObject_AddRef(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.ReferenceObject_AddRef(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int ReferenceObject_GetRef(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.ReferenceObject_GetRef(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int ReferenceObject_Release(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.ReferenceObject_Release(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool Window_DoEvent(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Window_DoEvent(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Window_SetTitle(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			ace_core_csPINVOKE.Window_SetTitle(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Window_Close(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Window_Close(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector2DI Window_GetSize(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Window_GetSize(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static System.IntPtr Window_GetWindowHandle(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Window_GetWindowHandle(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <param name="jarg5"></param>
		/// <returns></returns>
		public static global::System.IntPtr Window_Imp_Create__SWIG_0(int jarg1, int jarg2, string jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, bool jarg5)
		{
			return ace_core_csPINVOKE.Window_Imp_Create__SWIG_0(jarg1, jarg2, jarg3, jarg4, jarg5);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <returns></returns>
		public static global::System.IntPtr Window_Imp_Create__SWIG_1(int jarg1, int jarg2, string jarg3, global::System.Runtime.InteropServices.HandleRef jarg4)
		{
			return ace_core_csPINVOKE.Window_Imp_Create__SWIG_1(jarg1, jarg2, jarg3, jarg4);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <returns></returns>
		public static global::System.IntPtr Window_Imp_Create__SWIG_2(int jarg1, int jarg2, string jarg3)
		{
			return ace_core_csPINVOKE.Window_Imp_Create__SWIG_2(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector2DI Window_Imp_GetSize(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Window_Imp_GetSize(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_Log(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_Log(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Log_Write__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3)
		{
			ace_core_csPINVOKE.Log_Write__SWIG_0(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_Write__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			ace_core_csPINVOKE.Log_Write__SWIG_1(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Log_WriteLine__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3)
		{
			ace_core_csPINVOKE.Log_WriteLine__SWIG_0(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_WriteLine__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			ace_core_csPINVOKE.Log_WriteLine__SWIG_1(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Log_WriteStrongly__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3)
		{
			ace_core_csPINVOKE.Log_WriteStrongly__SWIG_0(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_WriteStrongly__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			ace_core_csPINVOKE.Log_WriteStrongly__SWIG_1(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Log_WriteLineStrongly__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3)
		{
			ace_core_csPINVOKE.Log_WriteLineStrongly__SWIG_0(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_WriteLineStrongly__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			ace_core_csPINVOKE.Log_WriteLineStrongly__SWIG_1(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Log_WriteHeading__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3)
		{
			ace_core_csPINVOKE.Log_WriteHeading__SWIG_0(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_WriteHeading__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			ace_core_csPINVOKE.Log_WriteHeading__SWIG_1(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_WriteHorizontalRule__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Log_WriteHorizontalRule__SWIG_0(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Log_WriteHorizontalRule__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Log_WriteHorizontalRule__SWIG_1(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_BeginTable__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Log_BeginTable__SWIG_0(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Log_BeginTable__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Log_BeginTable__SWIG_1(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_EndTable__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Log_EndTable__SWIG_0(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Log_EndTable__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Log_EndTable__SWIG_1(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_ChangeRow__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Log_ChangeRow__SWIG_0(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Log_ChangeRow__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Log_ChangeRow__SWIG_1(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_ChangeColumn__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Log_ChangeColumn__SWIG_0(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Log_ChangeColumn__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Log_ChangeColumn__SWIG_1(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool Log_IsValid(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Log_IsValid(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_SetOutputLevel(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Log_SetOutputLevel(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr new_Log_Imp(string jarg1)
		{
			return ace_core_csPINVOKE.new_Log_Imp(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_Log_Imp(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_Log_Imp(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr Log_Imp_Create(string jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Log_Imp_Create(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Log_Imp_Write__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3)
		{
			ace_core_csPINVOKE.Log_Imp_Write__SWIG_0(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_Imp_Write__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			ace_core_csPINVOKE.Log_Imp_Write__SWIG_1(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Log_Imp_WriteLine__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3)
		{
			ace_core_csPINVOKE.Log_Imp_WriteLine__SWIG_0(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_Imp_WriteLine__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			ace_core_csPINVOKE.Log_Imp_WriteLine__SWIG_1(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Log_Imp_WriteStrongly__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3)
		{
			ace_core_csPINVOKE.Log_Imp_WriteStrongly__SWIG_0(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_Imp_WriteStrongly__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			ace_core_csPINVOKE.Log_Imp_WriteStrongly__SWIG_1(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Log_Imp_WriteLineStrongly__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3)
		{
			ace_core_csPINVOKE.Log_Imp_WriteLineStrongly__SWIG_0(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_Imp_WriteLineStrongly__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			ace_core_csPINVOKE.Log_Imp_WriteLineStrongly__SWIG_1(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Log_Imp_WriteHeading__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3)
		{
			ace_core_csPINVOKE.Log_Imp_WriteHeading__SWIG_0(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_Imp_WriteHeading__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			ace_core_csPINVOKE.Log_Imp_WriteHeading__SWIG_1(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_Imp_WriteHorizontalRule__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Log_Imp_WriteHorizontalRule__SWIG_0(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Log_Imp_WriteHorizontalRule__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Log_Imp_WriteHorizontalRule__SWIG_1(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_Imp_BeginTable__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Log_Imp_BeginTable__SWIG_0(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Log_Imp_BeginTable__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Log_Imp_BeginTable__SWIG_1(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_Imp_EndTable__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Log_Imp_EndTable__SWIG_0(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Log_Imp_EndTable__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Log_Imp_EndTable__SWIG_1(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_Imp_ChangeRow__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Log_Imp_ChangeRow__SWIG_0(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Log_Imp_ChangeRow__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Log_Imp_ChangeRow__SWIG_1(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_Imp_ChangeColumn__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Log_Imp_ChangeColumn__SWIG_0(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Log_Imp_ChangeColumn__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Log_Imp_ChangeColumn__SWIG_1(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool Log_Imp_IsValid(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Log_Imp_IsValid(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Log_Imp_SetOutputLevel(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Log_Imp_SetOutputLevel(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Profiler_Start(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Profiler_Start(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Profiler_End(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Profiler_End(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <returns></returns>
		public static global::System.IntPtr Profiler_Imp_Create()
		{
			return ace_core_csPINVOKE.Profiler_Imp_Create();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Profiler_Imp_Start(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Profiler_Imp_Start(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Profiler_Imp_End(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Profiler_Imp_End(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int IMouseButtonState_GetButtonState(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.IMouseButtonState_GetButtonState(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_IMouseButtonState(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_IMouseButtonState(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int IMouseWheelableButtonState_GetButtonState(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.IMouseWheelableButtonState_GetButtonState(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static double IMouseWheelableButtonState_GetRotation(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.IMouseWheelableButtonState_GetRotation(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_IMouseWheelableButtonState(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_IMouseWheelableButtonState(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int MiddleButton_GetButtonState(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.MiddleButton_GetButtonState(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static double MiddleButton_GetRotation(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.MiddleButton_GetRotation(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr new_MiddleButton__SWIG_0(int jarg1, double jarg2)
		{
			return ace_core_csPINVOKE.new_MiddleButton__SWIG_0(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <returns></returns>
		public static global::System.IntPtr new_MiddleButton__SWIG_1()
		{
			return ace_core_csPINVOKE.new_MiddleButton__SWIG_1();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_MiddleButton(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_MiddleButton(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int SideButton_GetButtonState(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.SideButton_GetButtonState(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <returns></returns>
		public static global::System.IntPtr new_SideButton__SWIG_0()
		{
			return ace_core_csPINVOKE.new_SideButton__SWIG_0();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr new_SideButton__SWIG_1(int jarg1, bool jarg2)
		{
			return ace_core_csPINVOKE.new_SideButton__SWIG_1(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_SideButton(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_SideButton(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Mouse_GetLeftButton(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Mouse_GetLeftButton(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Mouse_GetRightButton(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Mouse_GetRightButton(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Mouse_GetMiddleButton(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Mouse_GetMiddleButton(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector2DF Mouse_GetPosition(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Mouse_GetPosition(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_Mouse(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_Mouse(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Mouse_Imp_Create(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Mouse_Imp_Create(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Mouse_Imp_GetLeftButton(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Mouse_Imp_GetLeftButton(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Mouse_Imp_GetRightButton(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Mouse_Imp_GetRightButton(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Mouse_Imp_GetMiddleButton(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Mouse_Imp_GetMiddleButton(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector2DF Mouse_Imp_GetPosition(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Mouse_Imp_GetPosition(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Mouse_Imp_RefreshInputState(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Mouse_Imp_RefreshInputState(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_Mouse_Imp(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_Mouse_Imp(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static int Keyboard_GetKeyState(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.Keyboard_GetKeyState(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_Keyboard(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_Keyboard(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Keyboard_Imp_Create(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Keyboard_Imp_Create(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Keyboard_Imp_RefreshInputState(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Keyboard_Imp_RefreshInputState(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static int Keyboard_Imp_GetKeyState(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.Keyboard_Imp_GetKeyState(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr new_Keyboard_Imp(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.new_Keyboard_Imp(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_Keyboard_Imp(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_Keyboard_Imp(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_Joystick(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_Joystick(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static System.IntPtr Joystick_GetJoystickName(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Joystick_GetJoystickName(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Joystick_GetButtonsCount(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Joystick_GetButtonsCount(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Joystick_GetAxesCount(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Joystick_GetAxesCount(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static int Joystick_GetButtonState(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.Joystick_GetButtonState(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static float Joystick_GetAxisState(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.Joystick_GetAxisState(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_Joystick_Imp(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_Joystick_Imp(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Joystick_Imp_Create(int jarg1)
		{
			return ace_core_csPINVOKE.Joystick_Imp_Create(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Joystick_Imp_RefreshInputState(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Joystick_Imp_RefreshInputState(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static System.IntPtr Joystick_Imp_GetJoystickName(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Joystick_Imp_GetJoystickName(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Joystick_Imp_GetButtonsCount(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Joystick_Imp_GetButtonsCount(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Joystick_Imp_GetAxesCount(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Joystick_Imp_GetAxesCount(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static int Joystick_Imp_GetButtonState(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.Joystick_Imp_GetButtonState(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static float Joystick_Imp_GetAxisState(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.Joystick_Imp_GetAxisState(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_JoystickContainer(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_JoystickContainer(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static bool JoystickContainer_IsPresentAt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.JoystickContainer_IsPresentAt(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr JoystickContainer_GetJoystickAt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.JoystickContainer_GetJoystickAt(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_JoystickContainer_Imp(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_JoystickContainer_Imp(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void JoystickContainer_Imp_RefreshJoysticks(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.JoystickContainer_Imp_RefreshJoysticks(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <returns></returns>
		public static global::System.IntPtr JoystickContainer_Imp_Create()
		{
			return ace_core_csPINVOKE.JoystickContainer_Imp_Create();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static bool JoystickContainer_Imp_IsPresentAt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.JoystickContainer_Imp_IsPresentAt(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr JoystickContainer_Imp_GetJoystickAt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.JoystickContainer_Imp_GetJoystickAt(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_File(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_File(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void File_AddRootDirectories(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			ace_core_csPINVOKE.File_AddRootDirectories(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void File_AddRootPackage(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3)
		{
			ace_core_csPINVOKE.File_AddRootPackage(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void File_ClearRootDirectories(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.File_ClearRootDirectories(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static bool File_Exists(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.File_Exists(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <returns></returns>
		public static global::System.IntPtr File_Imp_Create()
		{
			return ace_core_csPINVOKE.File_Imp_Create();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_File_Imp(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_File_Imp(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void File_Imp_AddRootDirectories(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			ace_core_csPINVOKE.File_Imp_AddRootDirectories(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void File_Imp_AddRootPackage(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3)
		{
			ace_core_csPINVOKE.File_Imp_AddRootPackage(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void File_Imp_ClearRootDirectories(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.File_Imp_ClearRootDirectories(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static bool File_Imp_Exists(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.File_Imp_Exists(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr File_Imp_CreateStaticFile_(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.File_Imp_CreateStaticFile_(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int File_Imp_GetRef(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.File_Imp_GetRef(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int File_Imp_AddRef(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.File_Imp_AddRef(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int File_Imp_Release(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.File_Imp_Release(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_StaticFile(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_StaticFile(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static System.IntPtr StaticFile_FullPath(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.StaticFile_FullPath(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static System.IntPtr StaticFile_GetData(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.StaticFile_GetData(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int StaticFile_GetSize(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.StaticFile_GetSize(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float SoundSource_GetLoopStartingPoint(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.SoundSource_GetLoopStartingPoint(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void SoundSource_SetLoopStartingPoint(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2)
		{
			ace_core_csPINVOKE.SoundSource_SetLoopStartingPoint(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float SoundSource_GetLoopEndPoint(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.SoundSource_GetLoopEndPoint(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void SoundSource_SetLoopEndPoint(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2)
		{
			ace_core_csPINVOKE.SoundSource_SetLoopEndPoint(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool SoundSource_GetIsLoopingMode(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.SoundSource_GetIsLoopingMode(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void SoundSource_SetIsLoopingMode(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2)
		{
			ace_core_csPINVOKE.SoundSource_SetIsLoopingMode(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float SoundSource_GetLength(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.SoundSource_GetLength(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static int Sound_Play(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			return ace_core_csPINVOKE.Sound_Play(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static bool Sound_IsPlaying(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.Sound_IsPlaying(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Sound_StopAll(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Sound_StopAll(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Sound_Stop(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Sound_Stop(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Sound_Pause(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Sound_Pause(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Sound_Resume(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Sound_Resume(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Sound_SetVolume(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, float jarg3)
		{
			ace_core_csPINVOKE.Sound_SetVolume(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Sound_FadeIn(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, float jarg3)
		{
			ace_core_csPINVOKE.Sound_FadeIn(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Sound_FadeOut(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, float jarg3)
		{
			ace_core_csPINVOKE.Sound_FadeOut(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <returns></returns>
		public static global::System.IntPtr Shader2D_Imp_Create(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, global::System.Runtime.InteropServices.HandleRef jarg4)
		{
			return ace_core_csPINVOKE.Shader2D_Imp_Create(jarg1, jarg2, jarg3, jarg4);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static float Material2D_GetFloat(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Material2D_GetFloat(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Material2D_SetFloat(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, float jarg3)
		{
			ace_core_csPINVOKE.Material2D_SetFloat(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static ace.Vector2DF Material2D_GetVector2DF(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Material2D_GetVector2DF(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Material2D_SetVector2DF(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ace.Vector2DF jarg3)
		{
			ace_core_csPINVOKE.Material2D_SetVector2DF(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static ace.Vector3DF Material2D_GetVector3DF(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Material2D_GetVector3DF(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Material2D_SetVector3DF(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ace.Vector3DF jarg3)
		{
			ace_core_csPINVOKE.Material2D_SetVector3DF(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static ace.Vector4DF Material2D_GetVector4DF(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Material2D_GetVector4DF(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Material2D_SetVector4DF(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ace.Vector4DF jarg3)
		{
			ace_core_csPINVOKE.Material2D_SetVector4DF(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Material2D_SetTexture2D(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3)
		{
			ace_core_csPINVOKE.Material2D_SetTexture2D(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Material2D_SetShader2D(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.Material2D_SetShader2D(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static int Material2D_GetTextureFilterType(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Material2D_GetTextureFilterType(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Material2D_SetTextureFilterType(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3)
		{
			ace_core_csPINVOKE.Material2D_SetTextureFilterType(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static int Material2D_GetTextureWrapType(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Material2D_GetTextureWrapType(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Material2D_SetTextureWrapType(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3)
		{
			ace_core_csPINVOKE.Material2D_SetTextureWrapType(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static float Material3D_GetFloat(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Material3D_GetFloat(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Material3D_SetFloat(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, float jarg3)
		{
			ace_core_csPINVOKE.Material3D_SetFloat(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static ace.Vector2DF Material3D_GetVector2DF(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Material3D_GetVector2DF(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Material3D_SetVector2DF(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ace.Vector2DF jarg3)
		{
			ace_core_csPINVOKE.Material3D_SetVector2DF(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static ace.Vector3DF Material3D_GetVector3DF(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Material3D_GetVector3DF(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Material3D_SetVector3DF(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ace.Vector3DF jarg3)
		{
			ace_core_csPINVOKE.Material3D_SetVector3DF(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static ace.Vector4DF Material3D_GetVector4DF(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Material3D_GetVector4DF(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Material3D_SetVector4DF(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ace.Vector4DF jarg3)
		{
			ace_core_csPINVOKE.Material3D_SetVector4DF(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Material3D_SetTexture2D(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3)
		{
			ace_core_csPINVOKE.Material3D_SetTexture2D(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Material3D_SetShader3D(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.Material3D_SetShader3D(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static int Material3D_GetTextureFilterType(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Material3D_GetTextureFilterType(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Material3D_SetTextureFilterType(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3)
		{
			ace_core_csPINVOKE.Material3D_SetTextureFilterType(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static int Material3D_GetTextureWrapType(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Material3D_GetTextureWrapType(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Material3D_SetTextureWrapType(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3)
		{
			ace_core_csPINVOKE.Material3D_SetTextureWrapType(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static float MaterialPropertyBlock_GetFloat(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.MaterialPropertyBlock_GetFloat(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void MaterialPropertyBlock_SetFloat(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, float jarg3)
		{
			ace_core_csPINVOKE.MaterialPropertyBlock_SetFloat(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static ace.Vector2DF MaterialPropertyBlock_GetVector2DF(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.MaterialPropertyBlock_GetVector2DF(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void MaterialPropertyBlock_SetVector2DF(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ace.Vector2DF jarg3)
		{
			ace_core_csPINVOKE.MaterialPropertyBlock_SetVector2DF(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static ace.Vector3DF MaterialPropertyBlock_GetVector3DF(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.MaterialPropertyBlock_GetVector3DF(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void MaterialPropertyBlock_SetVector3DF(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ace.Vector3DF jarg3)
		{
			ace_core_csPINVOKE.MaterialPropertyBlock_SetVector3DF(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static ace.Vector4DF MaterialPropertyBlock_GetVector4DF(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.MaterialPropertyBlock_GetVector4DF(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void MaterialPropertyBlock_SetVector4DF(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ace.Vector4DF jarg3)
		{
			ace_core_csPINVOKE.MaterialPropertyBlock_SetVector4DF(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static int MaterialPropertyBlock_GetTextureFilterType(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.MaterialPropertyBlock_GetTextureFilterType(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void MaterialPropertyBlock_SetTextureFilterType(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3)
		{
			ace_core_csPINVOKE.MaterialPropertyBlock_SetTextureFilterType(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static int MaterialPropertyBlock_GetTextureWrapType(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.MaterialPropertyBlock_GetTextureWrapType(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void MaterialPropertyBlock_SetTextureWrapType(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3)
		{
			ace_core_csPINVOKE.MaterialPropertyBlock_SetTextureWrapType(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void MaterialPropertyBlock_SetTexture2D(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3)
		{
			ace_core_csPINVOKE.MaterialPropertyBlock_SetTexture2D(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Texture_GetType(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Texture_GetType(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_Texture2D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_Texture2D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector2DI Texture2D_GetSize(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Texture2D_GetSize(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Texture2D_GetFormat(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Texture2D_GetFormat(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static bool Texture2D_Save(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Texture2D_Save(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static bool Texture2D_Lock(global::System.Runtime.InteropServices.HandleRef jarg1, ace.TextureLockInfomation jarg2)
		{
			return ace_core_csPINVOKE.Texture2D_Lock(jarg1, ref jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Texture2D_Unlock(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Texture2D_Unlock(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Texture2D_GetType(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Texture2D_GetType(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector2DI Texture2D_Imp_GetSize(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Texture2D_Imp_GetSize(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Texture2D_Imp_GetFormat(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Texture2D_Imp_GetFormat(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_RenderTexture2D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_RenderTexture2D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector2DI RenderTexture2D_GetSize(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.RenderTexture2D_GetSize(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int RenderTexture2D_GetType(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.RenderTexture2D_GetType(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector2DI RenderTexture2D_Imp_GetSize(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.RenderTexture2D_Imp_GetSize(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int RenderTexture2D_Imp_GetFormat(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.RenderTexture2D_Imp_GetFormat(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int RenderTexture2D_Imp_GetRef(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.RenderTexture2D_Imp_GetRef(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int RenderTexture2D_Imp_AddRef(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.RenderTexture2D_Imp_AddRef(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int RenderTexture2D_Imp_Release(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.RenderTexture2D_Imp_Release(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int CubemapTexture_GetMipmapCount(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CubemapTexture_GetMipmapCount(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int CubemapTexture_GetType(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CubemapTexture_GetType(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <returns></returns>
		public static ace.Vector2DI Font_CalcTextureSize(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3)
		{
			return ace_core_csPINVOKE.Font_CalcTextureSize(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Chip2D_SetTexture(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.Chip2D_SetTexture(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.RectF Chip2D_GetSrc(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Chip2D_GetSrc(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Chip2D_SetSrc(global::System.Runtime.InteropServices.HandleRef jarg1, ace.RectF jarg2)
		{
			ace_core_csPINVOKE.Chip2D_SetSrc(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Color Chip2D_GetColor(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Chip2D_GetColor(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Chip2D_SetColor(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Color jarg2)
		{
			ace_core_csPINVOKE.Chip2D_SetColor(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool Chip2D_GetTurnLR(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Chip2D_GetTurnLR(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Chip2D_SetTurnLR(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2)
		{
			ace_core_csPINVOKE.Chip2D_SetTurnLR(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool Chip2D_GetTurnUL(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Chip2D_GetTurnUL(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Chip2D_SetTurnUL(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2)
		{
			ace_core_csPINVOKE.Chip2D_SetTurnUL(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Chip2D_GetAlphaBlendMode(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Chip2D_GetAlphaBlendMode(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Chip2D_SetAlphaBlendMode(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Chip2D_SetAlphaBlendMode(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <param name="jarg5"></param>
		public static void Deformer_AddBone(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, int jarg4, ace.Matrix44 jarg5)
		{
			ace_core_csPINVOKE.Deformer_AddBone(jarg1, jarg2, jarg3, jarg4, ref jarg5);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <param name="jarg5"></param>
		/// <param name="jarg6"></param>
		/// <param name="jarg7"></param>
		/// <param name="jarg8"></param>
		/// <param name="jarg9"></param>
		public static void Mesh_AddVertex(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Vector3DF jarg2, ace.Vector3DF jarg3, ace.Vector3DF jarg4, ace.Vector2DF jarg5, ace.Vector2DF jarg6, ace.Color jarg7, int jarg8, int jarg9)
		{
			ace_core_csPINVOKE.Mesh_AddVertex(jarg1, ref jarg2, ref jarg3, ref jarg4, ref jarg5, ref jarg6, ref jarg7, jarg8, jarg9);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <param name="jarg5"></param>
		public static void Mesh_AddFace(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5)
		{
			ace_core_csPINVOKE.Mesh_AddFace(jarg1, jarg2, jarg3, jarg4, jarg5);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Mesh_AddBoneConnector(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, ace.Matrix44 jarg3)
		{
			ace_core_csPINVOKE.Mesh_AddBoneConnector(jarg1, jarg2, ref jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Mesh_AddMaterial(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Mesh_AddMaterial(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Mesh_SendToGPUMemory(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Mesh_SendToGPUMemory(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Mesh_SetColorTexture(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3)
		{
			ace_core_csPINVOKE.Mesh_SetColorTexture(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Mesh_SetNormalTexture(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3)
		{
			ace_core_csPINVOKE.Mesh_SetNormalTexture(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Mesh_SetMetalnessTexture(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3)
		{
			ace_core_csPINVOKE.Mesh_SetMetalnessTexture(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Mesh_SetSmoothnessTexture(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3)
		{
			ace_core_csPINVOKE.Mesh_SetSmoothnessTexture(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void Mesh_SetMaterial(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3)
		{
			ace_core_csPINVOKE.Mesh_SetMaterial(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static System.IntPtr Model_GetAnimationClipName(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.Model_GetAnimationClipName(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Model_GetMeshCount(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Model_GetMeshCount(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Model_GetAnimationClipCount(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Model_GetAnimationClipCount(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int MassModel_GetAnimationCount(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.MassModel_GetAnimationCount(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static System.IntPtr MassModel_GetAnimationName(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.MassModel_GetAnimationName(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static float MassModel_GetAnimationLength(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.MassModel_GetAnimationLength(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static bool MassModel_GetIsAnimationLoopingMode(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.MassModel_GetIsAnimationLoopingMode(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void MassModel_SetIsAnimationLoopingMode(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, bool jarg3)
		{
			ace_core_csPINVOKE.MassModel_SetIsAnimationLoopingMode(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void MassModel_SetMaterial(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.MassModel_SetMaterial(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		public static void Terrain3D_New(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, int jarg3, int jarg4)
		{
			ace_core_csPINVOKE.Terrain3D_New(jarg1, jarg2, jarg3, jarg4);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <param name="jarg5"></param>
		/// <param name="jarg6"></param>
		public static void Terrain3D_AddSurface(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, float jarg3, string jarg4, string jarg5, string jarg6)
		{
			ace_core_csPINVOKE.Terrain3D_AddSurface(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static int Terrain3D_GetSurfaceIndex(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Terrain3D_GetSurfaceIndex(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <param name="jarg5"></param>
		/// <param name="jarg6"></param>
		/// <param name="jarg7"></param>
		public static void Terrain3D_AssignSurfaceWithCircle(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7)
		{
			ace_core_csPINVOKE.Terrain3D_AssignSurfaceWithCircle(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6, jarg7);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Terrain3D_SetMaterial(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.Terrain3D_SetMaterial(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static System.IntPtr KeyframeAnimation_GetName(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.KeyframeAnimation_GetName(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void KeyframeAnimation_SetName(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			ace_core_csPINVOKE.KeyframeAnimation_SetName(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void KeyframeAnimation_AddKeyframe(global::System.Runtime.InteropServices.HandleRef jarg1, ace.FCurveKeyframe jarg2)
		{
			ace_core_csPINVOKE.KeyframeAnimation_AddKeyframe(jarg1, ref jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static float KeyframeAnimation_GetValue(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2)
		{
			return ace_core_csPINVOKE.KeyframeAnimation_GetValue(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_AnimationSource(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_AnimationSource(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void AnimationSource_AddAnimation(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.AnimationSource_AddAnimation(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void AnimationSource_RemoveAnimation(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.AnimationSource_RemoveAnimation(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float AnimationSource_GetLength(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.AnimationSource_GetLength(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_AnimationClip(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_AnimationClip(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void AnimationClip_SetSource(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.AnimationClip_SetSource(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool AnimationClip_GetIsLoopingMode(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.AnimationClip_GetIsLoopingMode(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void AnimationClip_SetIsLoopingMode(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2)
		{
			ace_core_csPINVOKE.AnimationClip_SetIsLoopingMode(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_Graphics(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_Graphics(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Graphics_GetDrawCallCount(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Graphics_GetDrawCallCount(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Graphics_GetUsedVRAMSize(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Graphics_GetUsedVRAMSize(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Graphics_GetGraphicsDeviceType(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Graphics_GetGraphicsDeviceType(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <returns></returns>
		public static int Graphics_Imp_MaxRenderTarget_get()
		{
			return ace_core_csPINVOKE.Graphics_Imp_MaxRenderTarget_get();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <returns></returns>
		public static int Graphics_Imp_MaxTextureCount_get()
		{
			return ace_core_csPINVOKE.Graphics_Imp_MaxTextureCount_get();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_Graphics_Imp(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_Graphics_Imp(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <param name="jarg5"></param>
		/// <param name="jarg6"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_Create__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, bool jarg5, bool jarg6)
		{
			return ace_core_csPINVOKE.Graphics_Imp_Create__SWIG_0(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <param name="jarg5"></param>
		/// <param name="jarg6"></param>
		/// <param name="jarg7"></param>
		/// <param name="jarg8"></param>
		/// <param name="jarg9"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_Create__SWIG_1(System.IntPtr jarg1, System.IntPtr jarg2, int jarg3, int jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, bool jarg8, bool jarg9)
		{
			return ace_core_csPINVOKE.Graphics_Imp_Create__SWIG_1(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6, jarg7, jarg8, jarg9);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		public static void Graphics_Imp_Clear(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, bool jarg3, ace.Color jarg4)
		{
			ace_core_csPINVOKE.Graphics_Imp_Clear(jarg1, jarg2, jarg3, ref jarg4);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Graphics_Imp_Present(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Graphics_Imp_Present(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Graphics_Imp_SaveScreenshot(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			ace_core_csPINVOKE.Graphics_Imp_SaveScreenshot(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Graphics_Imp_GetDrawCallCount(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Graphics_Imp_GetDrawCallCount(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Graphics_Imp_GetUsedVRAMSize(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Graphics_Imp_GetUsedVRAMSize(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateTexture2D_Imp(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateTexture2D_Imp(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateTexture2DAsRawData_Imp(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateTexture2DAsRawData_Imp(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateEmptyTexture2D_Imp(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3, int jarg4)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateEmptyTexture2D_Imp(jarg1, jarg2, jarg3, jarg4);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateRenderTexture2D_Imp(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3, int jarg4)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateRenderTexture2D_Imp(jarg1, jarg2, jarg3, jarg4);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <param name="jarg5"></param>
		/// <param name="jarg6"></param>
		/// <param name="jarg7"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateCubemapTextureFrom6ImageFiles_(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, string jarg4, string jarg5, string jarg6, string jarg7)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateCubemapTextureFrom6ImageFiles_(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6, jarg7);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateCubemapTextureFromMipmapImageFiles_(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateCubemapTextureFromMipmapImageFiles_(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateCubemapTextureFromSingleImageFile_(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateCubemapTextureFromSingleImageFile_(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateShader2D_Imp(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateShader2D_Imp(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateMaterial2D_(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateMaterial2D_(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateShader3D_(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateShader3D_(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateMaterial3D_(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateMaterial3D_(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateMaterialPropertyBlock_(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateMaterialPropertyBlock_(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateMesh_(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateMesh_(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateDeformer_(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateDeformer_(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateModel_(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateModel_(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateMassModelFromModelFile_(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateMassModelFromModelFile_(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateMassModel_(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateMassModel_(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateTerrain3D_(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateTerrain3D_(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateEffect_(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateEffect_(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateFont_(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateFont_(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_CreateChip2D_(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Graphics_Imp_CreateChip2D_(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_CoreObject2D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_CoreObject2D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int CoreObject2D_GetObjectType(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreObject2D_GetObjectType(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool CoreObject2D_GetIsDrawn(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreObject2D_GetIsDrawn(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreObject2D_SetIsDrawn(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2)
		{
			ace_core_csPINVOKE.CoreObject2D_SetIsDrawn(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool CoreObject2D_GetIsAlive(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreObject2D_GetIsAlive(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreObject2D_SetIsAlive(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2)
		{
			ace_core_csPINVOKE.CoreObject2D_SetIsAlive(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector2DF CoreObject2D_GetPosition(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreObject2D_GetPosition(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreObject2D_SetPosition(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Vector2DF jarg2)
		{
			ace_core_csPINVOKE.CoreObject2D_SetPosition(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector2DF CoreObject2D_GetGlobalPosition(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreObject2D_GetGlobalPosition(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float CoreObject2D_GetAngle(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreObject2D_GetAngle(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreObject2D_SetAngle(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2)
		{
			ace_core_csPINVOKE.CoreObject2D_SetAngle(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector2DF CoreObject2D_GetScale(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreObject2D_GetScale(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreObject2D_SetScale(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Vector2DF jarg2)
		{
			ace_core_csPINVOKE.CoreObject2D_SetScale(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void CoreObject2D_AddChild(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3)
		{
			ace_core_csPINVOKE.CoreObject2D_AddChild(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreObject2D_RemoveChild(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreObject2D_RemoveChild(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_CoreTextureObject2D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_CoreTextureObject2D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreTextureObject2D_GetTexture(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextureObject2D_GetTexture(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.RectF CoreTextureObject2D_GetSrc(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextureObject2D_GetSrc(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float CoreTextureObject2D_GetAngle(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextureObject2D_GetAngle(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector2DF CoreTextureObject2D_GetScale(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextureObject2D_GetScale(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector2DF CoreTextureObject2D_GetCenterPosition(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextureObject2D_GetCenterPosition(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Color CoreTextureObject2D_GetColor(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextureObject2D_GetColor(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool CoreTextureObject2D_GetTurnLR(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextureObject2D_GetTurnLR(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool CoreTextureObject2D_GetTurnUL(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextureObject2D_GetTurnUL(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int CoreTextureObject2D_GetDrawingPriority(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextureObject2D_GetDrawingPriority(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int CoreTextureObject2D_GetAlphaBlendMode(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextureObject2D_GetAlphaBlendMode(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextureObject2D_SetTexture(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreTextureObject2D_SetTexture(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextureObject2D_SetSrc(global::System.Runtime.InteropServices.HandleRef jarg1, ace.RectF jarg2)
		{
			ace_core_csPINVOKE.CoreTextureObject2D_SetSrc(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextureObject2D_SetAngle(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2)
		{
			ace_core_csPINVOKE.CoreTextureObject2D_SetAngle(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextureObject2D_SetScale(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Vector2DF jarg2)
		{
			ace_core_csPINVOKE.CoreTextureObject2D_SetScale(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextureObject2D_SetCenterPosition(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Vector2DF jarg2)
		{
			ace_core_csPINVOKE.CoreTextureObject2D_SetCenterPosition(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextureObject2D_SetColor(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Color jarg2)
		{
			ace_core_csPINVOKE.CoreTextureObject2D_SetColor(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextureObject2D_SetTurnLR(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2)
		{
			ace_core_csPINVOKE.CoreTextureObject2D_SetTurnLR(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextureObject2D_SetTurnUL(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2)
		{
			ace_core_csPINVOKE.CoreTextureObject2D_SetTurnUL(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextureObject2D_SetDrawingPriority(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.CoreTextureObject2D_SetDrawingPriority(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextureObject2D_SetAlphaBlendMode(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.CoreTextureObject2D_SetAlphaBlendMode(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextureObject2D_SetTextureFilterType(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.CoreTextureObject2D_SetTextureFilterType(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int CoreTextureObject2D_GetTextureFilterType(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextureObject2D_GetTextureFilterType(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.RectI CoreCameraObject2D_GetSrc(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreCameraObject2D_GetSrc(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreCameraObject2D_SetSrc(global::System.Runtime.InteropServices.HandleRef jarg1, ace.RectI jarg2)
		{
			ace_core_csPINVOKE.CoreCameraObject2D_SetSrc(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.RectI CoreCameraObject2D_GetDst(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreCameraObject2D_GetDst(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreCameraObject2D_SetDst(global::System.Runtime.InteropServices.HandleRef jarg1, ace.RectI jarg2)
		{
			ace_core_csPINVOKE.CoreCameraObject2D_SetDst(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_CoreCameraObject2D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_CoreCameraObject2D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_CoreTextObject2D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_CoreTextObject2D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int CoreTextObject2D_GetWritingDirection(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextObject2D_GetWritingDirection(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreTextObject2D_GetFont(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextObject2D_GetFont(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static System.IntPtr CoreTextObject2D_GetText(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextObject2D_GetText(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector2DF CoreTextObject2D_GetCenterPosition(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextObject2D_GetCenterPosition(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Color CoreTextObject2D_GetColor(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextObject2D_GetColor(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool CoreTextObject2D_GetTurnLR(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextObject2D_GetTurnLR(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool CoreTextObject2D_GetTurnUL(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextObject2D_GetTurnUL(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int CoreTextObject2D_GetDrawingPriority(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextObject2D_GetDrawingPriority(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int CoreTextObject2D_GetAlphaBlendMode(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextObject2D_GetAlphaBlendMode(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextObject2D_SetWritingDirection(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.CoreTextObject2D_SetWritingDirection(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextObject2D_SetFont(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreTextObject2D_SetFont(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextObject2D_SetText(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			ace_core_csPINVOKE.CoreTextObject2D_SetText(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextObject2D_SetCenterPosition(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Vector2DF jarg2)
		{
			ace_core_csPINVOKE.CoreTextObject2D_SetCenterPosition(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextObject2D_SetColor(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Color jarg2)
		{
			ace_core_csPINVOKE.CoreTextObject2D_SetColor(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextObject2D_SetTurnLR(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2)
		{
			ace_core_csPINVOKE.CoreTextObject2D_SetTurnLR(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextObject2D_SetTurnUL(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2)
		{
			ace_core_csPINVOKE.CoreTextObject2D_SetTurnUL(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextObject2D_SetDrawingPriority(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.CoreTextObject2D_SetDrawingPriority(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextObject2D_SetAlphaBlendMode(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.CoreTextObject2D_SetAlphaBlendMode(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTextObject2D_SetTextureFilterType(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.CoreTextObject2D_SetTextureFilterType(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int CoreTextObject2D_GetTextureFilterType(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTextObject2D_GetTextureFilterType(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_CoreEffectObject2D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_CoreEffectObject2D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreEffectObject2D_SetEffect(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreEffectObject2D_SetEffect(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void CoreEffectObject2D_Play(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.CoreEffectObject2D_Play(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void CoreEffectObject2D_Stop(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.CoreEffectObject2D_Stop(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void CoreEffectObject2D_StopRoot(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.CoreEffectObject2D_StopRoot(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool CoreEffectObject2D_IsPlaying(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreEffectObject2D_IsPlaying(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool CoreEffectObject2D_GetSyncEffects(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreEffectObject2D_GetSyncEffects(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreEffectObject2D_SetSyncEffects(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2)
		{
			ace_core_csPINVOKE.CoreEffectObject2D_SetSyncEffects(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float CoreEffectObject2D_GetEffectRotation(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreEffectObject2D_GetEffectRotation(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreEffectObject2D_SetEffectRotation(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2)
		{
			ace_core_csPINVOKE.CoreEffectObject2D_SetEffectRotation(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int CoreEffectObject2D_GetDrawingPriority(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreEffectObject2D_GetDrawingPriority(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreEffectObject2D_SetDrawingPriority(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.CoreEffectObject2D_SetDrawingPriority(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_CoreMapObject2D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_CoreMapObject2D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector2DF CoreMapObject2D_GetCenterPosition(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreMapObject2D_GetCenterPosition(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int CoreMapObject2D_GetDrawingPriority(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreMapObject2D_GetDrawingPriority(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreMapObject2D_SetCenterPosition(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Vector2DF jarg2)
		{
			ace_core_csPINVOKE.CoreMapObject2D_SetCenterPosition(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreMapObject2D_SetDrawingPriority(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.CoreMapObject2D_SetDrawingPriority(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static bool CoreMapObject2D_AddChip(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			return ace_core_csPINVOKE.CoreMapObject2D_AddChip(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static bool CoreMapObject2D_RemoveChip(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			return ace_core_csPINVOKE.CoreMapObject2D_RemoveChip(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void CoreMapObject2D_Clear(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.CoreMapObject2D_Clear(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int CoreLayer_GetDrawingPriority(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreLayer_GetDrawingPriority(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreLayer_SetDrawingPriority(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.CoreLayer_SetDrawingPriority(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool CoreLayer_GetIsDrawn(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreLayer_GetIsDrawn(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreLayer_SetIsDrawn(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2)
		{
			ace_core_csPINVOKE.CoreLayer_SetIsDrawn(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreLayer_AddPostEffect(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreLayer_AddPostEffect(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void CoreLayer_ClearPostEffects(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.CoreLayer_ClearPostEffects(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void CoreLayer_BeginUpdating(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.CoreLayer_BeginUpdating(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void CoreLayer_EndUpdating(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.CoreLayer_EndUpdating(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void CoreLayer_BeginDrawing(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.CoreLayer_BeginDrawing(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void CoreLayer_Draw(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.CoreLayer_Draw(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void CoreLayer_EndDrawing(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.CoreLayer_EndDrawing(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_CoreLayer2D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_CoreLayer2D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreLayer2D_AddObject(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreLayer2D_AddObject(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreLayer2D_RemoveObject(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreLayer2D_RemoveObject(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void CoreLayer2D_Clear(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.CoreLayer2D_Clear(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <param name="jarg5"></param>
		/// <param name="jarg6"></param>
		/// <param name="jarg7"></param>
		/// <param name="jarg8"></param>
		/// <param name="jarg9"></param>
		/// <param name="jarg10"></param>
		/// <param name="jarg11"></param>
		/// <param name="jarg12"></param>
		/// <param name="jarg13"></param>
		/// <param name="jarg14"></param>
		/// <param name="jarg15"></param>
		/// <param name="jarg16"></param>
		public static void CoreLayer2D_DrawSpriteAdditionally(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Vector2DF jarg2, ace.Vector2DF jarg3, ace.Vector2DF jarg4, ace.Vector2DF jarg5, ace.Color jarg6, ace.Color jarg7, ace.Color jarg8, ace.Color jarg9, ace.Vector2DF jarg10, ace.Vector2DF jarg11, ace.Vector2DF jarg12, ace.Vector2DF jarg13, global::System.Runtime.InteropServices.HandleRef jarg14, int jarg15, int jarg16)
		{
			ace_core_csPINVOKE.CoreLayer2D_DrawSpriteAdditionally(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6, jarg7, jarg8, jarg9, jarg10, jarg11, jarg12, jarg13, jarg14, jarg15, jarg16);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <param name="jarg5"></param>
		/// <param name="jarg6"></param>
		/// <param name="jarg7"></param>
		/// <param name="jarg8"></param>
		public static void CoreLayer2D_DrawTextAdditionally(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Vector2DF jarg2, ace.Color jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, string jarg5, int jarg6, int jarg7, int jarg8)
		{
			ace_core_csPINVOKE.CoreLayer2D_DrawTextAdditionally(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6, jarg7, jarg8);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool CoreObject3D_GetIsDrawn(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreObject3D_GetIsDrawn(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreObject3D_SetIsDrawn(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2)
		{
			ace_core_csPINVOKE.CoreObject3D_SetIsDrawn(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector3DF CoreObject3D_GetPosition(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreObject3D_GetPosition(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreObject3D_SetPosition(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Vector3DF jarg2)
		{
			ace_core_csPINVOKE.CoreObject3D_SetPosition(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector3DF CoreObject3D_GetRotation(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreObject3D_GetRotation(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreObject3D_SetRotation(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Vector3DF jarg2)
		{
			ace_core_csPINVOKE.CoreObject3D_SetRotation(jarg1, ref jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector3DF CoreObject3D_GetScale(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreObject3D_GetScale(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreObject3D_SetScale(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Vector3DF jarg2)
		{
			ace_core_csPINVOKE.CoreObject3D_SetScale(jarg1, ref jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int CoreObject3D_GetObjectType(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreObject3D_GetObjectType(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreModelObject3D_SetModel(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreModelObject3D_SetModel(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreModelObject3D_AddMesh(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreModelObject3D_AddMesh(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreModelObject3D_SetDeformer(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreModelObject3D_SetDeformer(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreModelObject3D_GetAnimationClip(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.CoreModelObject3D_GetAnimationClip(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void CoreModelObject3D_PlayAnimation(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, string jarg3)
		{
			ace_core_csPINVOKE.CoreModelObject3D_PlayAnimation(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreModelObject3D_StopAnimation(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.CoreModelObject3D_StopAnimation(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void CoreModelObject3D_SetAnimationWeight(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, float jarg3)
		{
			ace_core_csPINVOKE.CoreModelObject3D_SetAnimationWeight(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		public static void CoreModelObject3D_CrossFadeAnimation(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, string jarg3, float jarg4)
		{
			ace_core_csPINVOKE.CoreModelObject3D_CrossFadeAnimation(jarg1, jarg2, jarg3, jarg4);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static bool CoreModelObject3D_IsAnimationPlaying(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.CoreModelObject3D_IsAnimationPlaying(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		public static void CoreModelObject3D_SetMaterialPropertyBlock(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3, global::System.Runtime.InteropServices.HandleRef jarg4)
		{
			ace_core_csPINVOKE.CoreModelObject3D_SetMaterialPropertyBlock(jarg1, jarg2, jarg3, jarg4);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Color CoreDirectionalLightObject3D_GetColor(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreDirectionalLightObject3D_GetColor(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreDirectionalLightObject3D_SetColor(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Color jarg2)
		{
			ace_core_csPINVOKE.CoreDirectionalLightObject3D_SetColor(jarg1, ref jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float CoreDirectionalLightObject3D_GetIntensity(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreDirectionalLightObject3D_GetIntensity(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreDirectionalLightObject3D_SetIntensity(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2)
		{
			ace_core_csPINVOKE.CoreDirectionalLightObject3D_SetIntensity(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector2DI CoreCameraObject3D_GetWindowSize(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreCameraObject3D_GetWindowSize(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreCameraObject3D_SetWindowSize(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Vector2DI jarg2)
		{
			ace_core_csPINVOKE.CoreCameraObject3D_SetWindowSize(jarg1, ref jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector3DF CoreCameraObject3D_GetFocus(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreCameraObject3D_GetFocus(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreCameraObject3D_SetFocus(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Vector3DF jarg2)
		{
			ace_core_csPINVOKE.CoreCameraObject3D_SetFocus(jarg1, ref jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float CoreCameraObject3D_GetFieldOfView(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreCameraObject3D_GetFieldOfView(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreCameraObject3D_SetFieldOfView(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2)
		{
			ace_core_csPINVOKE.CoreCameraObject3D_SetFieldOfView(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float CoreCameraObject3D_GetZFar(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreCameraObject3D_GetZFar(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreCameraObject3D_SetZFar(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2)
		{
			ace_core_csPINVOKE.CoreCameraObject3D_SetZFar(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float CoreCameraObject3D_GetZNear(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreCameraObject3D_GetZNear(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreCameraObject3D_SetZNear(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2)
		{
			ace_core_csPINVOKE.CoreCameraObject3D_SetZNear(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool CoreCameraObject3D_GetHDRMode(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreCameraObject3D_GetHDRMode(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreCameraObject3D_SetHDRMode(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2)
		{
			ace_core_csPINVOKE.CoreCameraObject3D_SetHDRMode(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreCameraObject3D_BeginPostEffect(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreCameraObject3D_BeginPostEffect(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreCameraObject3D_EndPostEffect(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreCameraObject3D_EndPostEffect(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreCameraObject3D_StartAddingPostEffect(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.CoreCameraObject3D_StartAddingPostEffect(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreCameraObject3D_GetDstForPostEffect(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.CoreCameraObject3D_GetDstForPostEffect(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreCameraObject3D_GetSrcForPostEffect(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.CoreCameraObject3D_GetSrcForPostEffect(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreEffectObject3D_SetEffect(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreEffectObject3D_SetEffect(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void CoreEffectObject3D_Play(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.CoreEffectObject3D_Play(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void CoreEffectObject3D_Stop(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.CoreEffectObject3D_Stop(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void CoreEffectObject3D_StopRoot(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.CoreEffectObject3D_StopRoot(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool CoreEffectObject3D_IsPlaying(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreEffectObject3D_IsPlaying(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool CoreEffectObject3D_GetSyncEffects(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreEffectObject3D_GetSyncEffects(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreEffectObject3D_SetSyncEffects(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2)
		{
			ace_core_csPINVOKE.CoreEffectObject3D_SetSyncEffects(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreMassModelObject3D_SetMaterialPropertyBlock(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreMassModelObject3D_SetMaterialPropertyBlock(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreMassModelObject3D_SetModel(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreMassModelObject3D_SetModel(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreMassModelObject3D_PlayAnimation(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			ace_core_csPINVOKE.CoreMassModelObject3D_PlayAnimation(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void CoreMassModelObject3D_StopAnimation(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.CoreMassModelObject3D_StopAnimation(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void CoreMassModelObject3D_CrossFadeAnimation(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, float jarg3)
		{
			ace_core_csPINVOKE.CoreMassModelObject3D_CrossFadeAnimation(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool CoreMassModelObject3D_IsAnimationPlaying(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreMassModelObject3D_IsAnimationPlaying(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTerrainObject3D_SetMaterialPropertyBlock(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreTerrainObject3D_SetMaterialPropertyBlock(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreTerrainObject3D_SetTerrain(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreTerrainObject3D_SetTerrain(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreLayer3D_GetRenderSettings(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreLayer3D_GetRenderSettings(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreLayer3D_SetRenderSettings(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreLayer3D_SetRenderSettings(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreLayer3D_AddObject(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreLayer3D_AddObject(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreLayer3D_RemoveObject(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreLayer3D_RemoveObject(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float CoreLayer3D_GetAmbientColorIntensity(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreLayer3D_GetAmbientColorIntensity(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreLayer3D_SetAmbientColorIntensity(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2)
		{
			ace_core_csPINVOKE.CoreLayer3D_SetAmbientColorIntensity(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreLayer3D_SetSkyAmbientColor(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Color jarg2)
		{
			ace_core_csPINVOKE.CoreLayer3D_SetSkyAmbientColor(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreLayer3D_SetGroundAmbientColor(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Color jarg2)
		{
			ace_core_csPINVOKE.CoreLayer3D_SetGroundAmbientColor(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void CoreLayer3D_SetEnvironmentColorIntensity(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, float jarg3)
		{
			ace_core_csPINVOKE.CoreLayer3D_SetEnvironmentColorIntensity(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void CoreLayer3D_SetEnvironmentColor(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3)
		{
			ace_core_csPINVOKE.CoreLayer3D_SetEnvironmentColor(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool CoreLayer3D_GetHDRMode(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreLayer3D_GetHDRMode(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreLayer3D_SetHDRMode(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2)
		{
			ace_core_csPINVOKE.CoreLayer3D_SetHDRMode(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float CoreLayer3D_GetSSAO_Radius(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreLayer3D_GetSSAO_Radius(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreLayer3D_SetSSAO_Radius(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2)
		{
			ace_core_csPINVOKE.CoreLayer3D_SetSSAO_Radius(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float CoreLayer3D_GetSSAO_Bias(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreLayer3D_GetSSAO_Bias(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreLayer3D_SetSSAO_Bias(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2)
		{
			ace_core_csPINVOKE.CoreLayer3D_SetSSAO_Bias(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float CoreLayer3D_GetSSAO_Intensity(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreLayer3D_GetSSAO_Intensity(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreLayer3D_SetSSAO_Intensity(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2)
		{
			ace_core_csPINVOKE.CoreLayer3D_SetSSAO_Intensity(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float CoreLayer3D_GetSSAO_FarPlain(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreLayer3D_GetSSAO_FarPlain(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreLayer3D_SetSSAO_FarPlain(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2)
		{
			ace_core_csPINVOKE.CoreLayer3D_SetSSAO_FarPlain(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <param name="jarg5"></param>
		/// <param name="jarg6"></param>
		/// <param name="jarg7"></param>
		/// <param name="jarg8"></param>
		/// <param name="jarg9"></param>
		/// <param name="jarg10"></param>
		/// <param name="jarg11"></param>
		/// <param name="jarg12"></param>
		/// <param name="jarg13"></param>
		/// <param name="jarg14"></param>
		/// <param name="jarg15"></param>
		/// <param name="jarg16"></param>
		/// <param name="jarg17"></param>
		public static void CoreLayer3D_DrawSpriteAdditionally(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Vector3DF jarg2, ace.Vector3DF jarg3, ace.Vector3DF jarg4, ace.Vector3DF jarg5, ace.Color jarg6, ace.Color jarg7, ace.Color jarg8, ace.Color jarg9, ace.Vector2DF jarg10, ace.Vector2DF jarg11, ace.Vector2DF jarg12, ace.Vector2DF jarg13, global::System.Runtime.InteropServices.HandleRef jarg14, int jarg15, bool jarg16, bool jarg17)
		{
			ace_core_csPINVOKE.CoreLayer3D_DrawSpriteAdditionally(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6, jarg7, jarg8, jarg9, jarg10, jarg11, jarg12, jarg13, jarg14, jarg15, jarg16, jarg17);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool CoreScene_GetHDRMode(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreScene_GetHDRMode(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreScene_SetHDRMode(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2)
		{
			ace_core_csPINVOKE.CoreScene_SetHDRMode(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreScene_AddLayer(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreScene_AddLayer(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreScene_RemoveLayer(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreScene_RemoveLayer(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void CoreScene_SetRenderTargetForDrawingLayer(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.CoreScene_SetRenderTargetForDrawingLayer(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreScene_GetBaseTarget(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreScene_GetBaseTarget(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreScene_BeginPostEffect(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreScene_BeginPostEffect(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreScene_EndPostEffect(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.CoreScene_EndPostEffect(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreScene_GetSrcTarget(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreScene_GetSrcTarget(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreScene_GetDstTarget(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreScene_GetDstTarget(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void CoreScene_BeginDrawing(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.CoreScene_BeginDrawing(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void CoreScene_EndDrawing(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.CoreScene_EndDrawing(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		public static void CorePostEffect_DrawOnTexture2DWithMaterial(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3)
		{
			ace_core_csPINVOKE.CorePostEffect_DrawOnTexture2DWithMaterial(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static string CorePostEffect_GetGrayScaleShader(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.CorePostEffect_GetGrayScaleShader(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static string CorePostEffect_GetLightBloomShader(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.CorePostEffect_GetLightBloomShader(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static string CorePostEffect_GetSepiaShader(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.CorePostEffect_GetSepiaShader(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static string CorePostEffect_GetGaussianBlurShader(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.CorePostEffect_GetGaussianBlurShader(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_ObjectSystemFactory(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_ObjectSystemFactory(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr ObjectSystemFactory_CreateTextureObject2D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.ObjectSystemFactory_CreateTextureObject2D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr ObjectSystemFactory_CreateCameraObject2D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.ObjectSystemFactory_CreateCameraObject2D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr ObjectSystemFactory_CreateTextObject2D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.ObjectSystemFactory_CreateTextObject2D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr ObjectSystemFactory_CreateEffectObject2D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.ObjectSystemFactory_CreateEffectObject2D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr ObjectSystemFactory_CreateMapObject2D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.ObjectSystemFactory_CreateMapObject2D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr ObjectSystemFactory_CreateLayer2D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.ObjectSystemFactory_CreateLayer2D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr ObjectSystemFactory_CreateEffectObject3D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.ObjectSystemFactory_CreateEffectObject3D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr ObjectSystemFactory_CreateModelObject3D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.ObjectSystemFactory_CreateModelObject3D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr ObjectSystemFactory_CreateCameraObject3D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.ObjectSystemFactory_CreateCameraObject3D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr ObjectSystemFactory_CreateDirectionalLightObject3D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.ObjectSystemFactory_CreateDirectionalLightObject3D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr ObjectSystemFactory_CreateCoreMassModelObject3D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.ObjectSystemFactory_CreateCoreMassModelObject3D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr ObjectSystemFactory_CreateCoreTerrainObject3D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.ObjectSystemFactory_CreateCoreTerrainObject3D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr ObjectSystemFactory_CreateLayer3D(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			return ace_core_csPINVOKE.ObjectSystemFactory_CreateLayer3D(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr ObjectSystemFactory_CreateScene(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.ObjectSystemFactory_CreateScene(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr ObjectSystemFactory_CreatePostEffect(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.ObjectSystemFactory_CreatePostEffect(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr ObjectSystemFactory_CreateTransition(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.ObjectSystemFactory_CreateTransition(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_CoreTransition(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_CoreTransition(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool CoreTransition_GetIsSceneChanged(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTransition_GetIsSceneChanged(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void CoreTransition_ChangeScene(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.CoreTransition_ChangeScene(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool CoreTransition_IsFinished(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreTransition_IsFinished(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void CoreTransition_Finish(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.CoreTransition_Finish(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <param name="jarg5"></param>
		/// <param name="jarg6"></param>
		/// <param name="jarg7"></param>
		/// <param name="jarg8"></param>
		/// <param name="jarg9"></param>
		/// <param name="jarg10"></param>
		public static void CoreTransition_DrawTriangleWithNextScene(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Vector2DF jarg2, ace.Vector2DF jarg3, ace.Vector2DF jarg4, ace.Color jarg5, ace.Color jarg6, ace.Color jarg7, ace.Vector2DF jarg8, ace.Vector2DF jarg9, ace.Vector2DF jarg10)
		{
			ace_core_csPINVOKE.CoreTransition_DrawTriangleWithNextScene(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6, jarg7, jarg8, jarg9, jarg10);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <param name="jarg5"></param>
		/// <param name="jarg6"></param>
		/// <param name="jarg7"></param>
		/// <param name="jarg8"></param>
		/// <param name="jarg9"></param>
		/// <param name="jarg10"></param>
		/// <param name="jarg11"></param>
		/// <param name="jarg12"></param>
		/// <param name="jarg13"></param>
		public static void CoreTransition_DrawRectangleWithNextScene(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Vector2DF jarg2, ace.Vector2DF jarg3, ace.Vector2DF jarg4, ace.Vector2DF jarg5, ace.Color jarg6, ace.Color jarg7, ace.Color jarg8, ace.Color jarg9, ace.Vector2DF jarg10, ace.Vector2DF jarg11, ace.Vector2DF jarg12, ace.Vector2DF jarg13)
		{
			ace_core_csPINVOKE.CoreTransition_DrawRectangleWithNextScene(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6, jarg7, jarg8, jarg9, jarg10, jarg11, jarg12, jarg13);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <param name="jarg5"></param>
		/// <param name="jarg6"></param>
		/// <param name="jarg7"></param>
		/// <param name="jarg8"></param>
		/// <param name="jarg9"></param>
		/// <param name="jarg10"></param>
		public static void CoreTransition_DrawTriangleWithPreviousScene(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Vector2DF jarg2, ace.Vector2DF jarg3, ace.Vector2DF jarg4, ace.Color jarg5, ace.Color jarg6, ace.Color jarg7, ace.Vector2DF jarg8, ace.Vector2DF jarg9, ace.Vector2DF jarg10)
		{
			ace_core_csPINVOKE.CoreTransition_DrawTriangleWithPreviousScene(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6, jarg7, jarg8, jarg9, jarg10);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <param name="jarg5"></param>
		/// <param name="jarg6"></param>
		/// <param name="jarg7"></param>
		/// <param name="jarg8"></param>
		/// <param name="jarg9"></param>
		/// <param name="jarg10"></param>
		/// <param name="jarg11"></param>
		/// <param name="jarg12"></param>
		/// <param name="jarg13"></param>
		public static void CoreTransition_DrawRectangleWithPreviousScene(global::System.Runtime.InteropServices.HandleRef jarg1, ace.Vector2DF jarg2, ace.Vector2DF jarg3, ace.Vector2DF jarg4, ace.Vector2DF jarg5, ace.Color jarg6, ace.Color jarg7, ace.Color jarg8, ace.Color jarg9, ace.Vector2DF jarg10, ace.Vector2DF jarg11, ace.Vector2DF jarg12, ace.Vector2DF jarg13)
		{
			ace_core_csPINVOKE.CoreTransition_DrawRectangleWithPreviousScene(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6, jarg7, jarg8, jarg9, jarg10, jarg11, jarg12, jarg13);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreOption_IsFullScreen_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2)
		{
			ace_core_csPINVOKE.CoreOption_IsFullScreen_set(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool CoreOption_IsFullScreen_get(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreOption_IsFullScreen_get(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreOption_GraphicsDevice_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.CoreOption_GraphicsDevice_set(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int CoreOption_GraphicsDevice_get(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreOption_GraphicsDevice_get(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void CoreOption_IsReloadingEnabled_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2)
		{
			ace_core_csPINVOKE.CoreOption_IsReloadingEnabled_set(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool CoreOption_IsReloadingEnabled_get(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.CoreOption_IsReloadingEnabled_get(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <returns></returns>
		public static global::System.IntPtr new_CoreOption()
		{
			return ace_core_csPINVOKE.new_CoreOption();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_CoreOption(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_CoreOption(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <param name="jarg5"></param>
		/// <returns></returns>
		public static bool Core_Initialize(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, int jarg4, global::System.Runtime.InteropServices.HandleRef jarg5)
		{
			return ace_core_csPINVOKE.Core_Initialize(jarg1, jarg2, jarg3, jarg4, jarg5);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <param name="jarg5"></param>
		/// <param name="jarg6"></param>
		/// <returns></returns>
		public static bool Core_InitializeByExternalWindow(global::System.Runtime.InteropServices.HandleRef jarg1, System.IntPtr jarg2, System.IntPtr jarg3, int jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6)
		{
			return ace_core_csPINVOKE.Core_InitializeByExternalWindow(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool Core_DoEvents(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_DoEvents(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Core_Update(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Core_Update(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Core_Terminate(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Core_Terminate(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Core_Reload(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Core_Reload(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Core_BeginDrawing(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Core_BeginDrawing(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Core_EndDrawing(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Core_EndDrawing(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Core_DrawSceneToWindow(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.Core_DrawSceneToWindow(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		public static void Core_DrawSceneToWindowWithTransition(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4)
		{
			ace_core_csPINVOKE.Core_DrawSceneToWindowWithTransition(jarg1, jarg2, jarg3, jarg4);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Core_Draw(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Core_Draw(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Core_ChangeScene(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.Core_ChangeScene(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Core_Close(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Core_Close(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Core_TakeScreenshot(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			ace_core_csPINVOKE.Core_TakeScreenshot(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float Core_GetDeltaTime(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_GetDeltaTime(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Core_SetDeltaTime(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2)
		{
			ace_core_csPINVOKE.Core_SetDeltaTime(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float Core_GetCurrentFPS(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_GetCurrentFPS(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Core_GetTargetFPS(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_GetTargetFPS(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Core_SetTargetFPS(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Core_SetTargetFPS(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float Core_GetTimeSpan(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_GetTimeSpan(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Core_SetTimeSpan(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2)
		{
			ace_core_csPINVOKE.Core_SetTimeSpan(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Core_GetFramerateMode(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_GetFramerateMode(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Core_SetFramerateMode(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Core_SetFramerateMode(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static System.IntPtr Core_GetWindowHandle(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_GetWindowHandle(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_GetKeyboard(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_GetKeyboard(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_GetMouse(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_GetMouse(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_GetJoystickContainer(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_GetJoystickContainer(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_GetFile(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_GetFile(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_GetLogger(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_GetLogger(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_GetProfiler(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_GetProfiler(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_GetGraphics(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_GetGraphics(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_GetSound(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_GetSound(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_GetObjectSystemFactory(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_GetObjectSystemFactory(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_GetAnimationSyatem(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_GetAnimationSyatem(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector2DI Core_GetWindowSize(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_GetWindowSize(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void delete_Core(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.delete_Core(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <returns></returns>
		public static global::System.IntPtr Core_Imp_CreateCore()
		{
			return ace_core_csPINVOKE.Core_Imp_CreateCore();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <param name="jarg5"></param>
		/// <returns></returns>
		public static bool Core_Imp_Initialize(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, int jarg4, global::System.Runtime.InteropServices.HandleRef jarg5)
		{
			return ace_core_csPINVOKE.Core_Imp_Initialize(jarg1, jarg2, jarg3, jarg4, jarg5);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		/// <param name="jarg5"></param>
		/// <param name="jarg6"></param>
		/// <returns></returns>
		public static bool Core_Imp_InitializeByExternalWindow(global::System.Runtime.InteropServices.HandleRef jarg1, System.IntPtr jarg2, System.IntPtr jarg3, int jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6)
		{
			return ace_core_csPINVOKE.Core_Imp_InitializeByExternalWindow(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool Core_Imp_DoEvents(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_DoEvents(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Core_Imp_Update(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Core_Imp_Update(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Core_Imp_Terminate(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Core_Imp_Terminate(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Core_Imp_Reload(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Core_Imp_Reload(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Core_Imp_BeginDrawing(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Core_Imp_BeginDrawing(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Core_Imp_EndDrawing(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Core_Imp_EndDrawing(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Core_Imp_DrawSceneToWindow(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.Core_Imp_DrawSceneToWindow(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <param name="jarg4"></param>
		public static void Core_Imp_DrawSceneToWindowWithTransition(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4)
		{
			ace_core_csPINVOKE.Core_Imp_DrawSceneToWindowWithTransition(jarg1, jarg2, jarg3, jarg4);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Core_Imp_Draw(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Core_Imp_Draw(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Core_Imp_ChangeScene(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2)
		{
			ace_core_csPINVOKE.Core_Imp_ChangeScene(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		public static void Core_Imp_Close(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			ace_core_csPINVOKE.Core_Imp_Close(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Core_Imp_TakeScreenshot(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			ace_core_csPINVOKE.Core_Imp_TakeScreenshot(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float Core_Imp_GetDeltaTime(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_GetDeltaTime(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Core_Imp_SetDeltaTime(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2)
		{
			ace_core_csPINVOKE.Core_Imp_SetDeltaTime(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float Core_Imp_GetCurrentFPS(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_GetCurrentFPS(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Core_Imp_GetTargetFPS(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_GetTargetFPS(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Core_Imp_SetTargetFPS(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Core_Imp_SetTargetFPS(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static float Core_Imp_GetTimeSpan(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_GetTimeSpan(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Core_Imp_SetTimeSpan(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2)
		{
			ace_core_csPINVOKE.Core_Imp_SetTimeSpan(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static int Core_Imp_GetFramerateMode(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_GetFramerateMode(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		public static void Core_Imp_SetFramerateMode(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			ace_core_csPINVOKE.Core_Imp_SetFramerateMode(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static System.IntPtr Core_Imp_GetWindowHandle(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_GetWindowHandle(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_Imp_GetWindow(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_GetWindow(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_Imp_GetKeyboard(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_GetKeyboard(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_Imp_GetMouse(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_GetMouse(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_Imp_GetJoystickContainer(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_GetJoystickContainer(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_Imp_GetFile(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_GetFile(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_Imp_GetFile_Imp(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_GetFile_Imp(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_Imp_GetLogger(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_GetLogger(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_Imp_GetProfiler(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_GetProfiler(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_Imp_GetGraphics(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_GetGraphics(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_Imp_GetGraphics_Imp(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_GetGraphics_Imp(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_Imp_GetSound(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_GetSound(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_Imp_GetObjectSystemFactory(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_GetObjectSystemFactory(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_Imp_GetAnimationSyatem(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_GetAnimationSyatem(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static ace.Vector2DI Core_Imp_GetWindowSize(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_GetWindowSize(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static bool Core_Imp_IsReloadingEnabeld(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_IsReloadingEnabeld(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <returns></returns>
		public static global::System.IntPtr CreateCore()
		{
			return ace_core_csPINVOKE.CreateCore();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <param name="jarg3"></param>
		/// <returns></returns>
		public static global::System.IntPtr Accessor_Sound_CreateSoundSource(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, bool jarg3)
		{
			return ace_core_csPINVOKE.Accessor_Sound_CreateSoundSource(jarg1, jarg2, jarg3);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Accessor_AnimationClip_GetSource(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Accessor_AnimationClip_GetSource(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr Accessor_Material2D_GetTexture2D(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Accessor_Material2D_GetTexture2D(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Accessor_Material2D_GetShader2D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Accessor_Material2D_GetShader2D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr Accessor_Material3D_GetTexture2D(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Accessor_Material3D_GetTexture2D(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Accessor_Material3D_GetShader3D(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Accessor_Material3D_GetShader3D(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr Accessor_MaterialPropertyBlock_GetTexture2D(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2)
		{
			return ace_core_csPINVOKE.Accessor_MaterialPropertyBlock_GetTexture2D(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Accessor_AnimationSyatem_CreateAnimationClip(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Accessor_AnimationSyatem_CreateAnimationClip(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Accessor_AnimationSyatem_CreateAnimationSource(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Accessor_AnimationSyatem_CreateAnimationSource(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Accessor_AnimationSyatem_CreateKeyframeAnimation(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Accessor_AnimationSyatem_CreateKeyframeAnimation(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr Accessor_Model_GetAnimationClip(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.Accessor_Model_GetAnimationClip(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <param name="jarg2"></param>
		/// <returns></returns>
		public static global::System.IntPtr Accessor_Model_GetMesh(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2)
		{
			return ace_core_csPINVOKE.Accessor_Model_GetMesh(jarg1, jarg2);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Accessor_CoreEffectObject2D_GetEffect(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Accessor_CoreEffectObject2D_GetEffect(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Accessor_Chip2D_GetTexture(global::System.Runtime.InteropServices.HandleRef jarg1)
		{
			return ace_core_csPINVOKE.Accessor_Chip2D_GetTexture(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr ReferenceObject_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.ReferenceObject_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Window_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Window_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Window_Imp_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Window_Imp_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Log_Imp_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Log_Imp_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Profiler_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Profiler_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Profiler_Imp_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Profiler_Imp_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr IMouseWheelableButtonState_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.IMouseWheelableButtonState_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr MiddleButton_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.MiddleButton_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr SideButton_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.SideButton_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Mouse_Imp_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Mouse_Imp_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Keyboard_Imp_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Keyboard_Imp_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Joystick_Imp_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Joystick_Imp_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr JoystickContainer_Imp_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.JoystickContainer_Imp_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr File_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.File_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr File_Imp_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.File_Imp_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr StaticFile_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.StaticFile_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr SoundSource_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.SoundSource_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Sound_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Sound_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Shader2D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Shader2D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Shader2D_Imp_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Shader2D_Imp_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Material2D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Material2D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Shader3D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Shader3D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Material3D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Material3D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr MaterialPropertyBlock_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.MaterialPropertyBlock_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Texture_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Texture_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Texture2D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Texture2D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Texture2D_Imp_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Texture2D_Imp_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr RenderTexture2D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.RenderTexture2D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr RenderTexture2D_Imp_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.RenderTexture2D_Imp_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CubemapTexture_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.CubemapTexture_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Effect_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Effect_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Font_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Font_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Chip2D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Chip2D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Deformer_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Deformer_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Mesh_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Mesh_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Model_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Model_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr MassModel_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.MassModel_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Terrain3D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Terrain3D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr KeyframeAnimation_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.KeyframeAnimation_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr AnimationSource_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.AnimationSource_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr AnimationClip_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.AnimationClip_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Graphics_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Graphics_Imp_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Graphics_Imp_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreObject2D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.CoreObject2D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreTextureObject2D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.CoreTextureObject2D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreCameraObject2D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.CoreCameraObject2D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreTextObject2D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.CoreTextObject2D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreEffectObject2D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.CoreEffectObject2D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreMapObject2D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.CoreMapObject2D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreLayer_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.CoreLayer_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreLayer2D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.CoreLayer2D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreObject3D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.CoreObject3D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreModelObject3D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.CoreModelObject3D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreDirectionalLightObject3D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.CoreDirectionalLightObject3D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreCameraObject3D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.CoreCameraObject3D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreEffectObject3D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.CoreEffectObject3D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreMassModelObject3D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.CoreMassModelObject3D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreTerrainObject3D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.CoreTerrainObject3D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreLayer3D_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.CoreLayer3D_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreScene_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.CoreScene_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CorePostEffect_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.CorePostEffect_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr CoreTransition_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.CoreTransition_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Core_SWIGUpcast(jarg1);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jarg1"></param>
		/// <returns></returns>
		public static global::System.IntPtr Core_Imp_SWIGUpcast(global::System.IntPtr jarg1)
		{
			return ace_core_csPINVOKE.Core_Imp_SWIGUpcast(jarg1);
		}

	}


	/// <summary>
	/// 
	/// </summary>
	public partial class Chip2D
	{
		internal ace.swig.Chip2D CoreInstance { get; set; }

		/// <summary>
		/// 
		/// </summary>
		public ace.RectF Src
		{
			get { return CoreInstance.GetSrc(); }
		}

		/// <summary>
		/// 
		/// </summary>
		public float Angle
		{
			get { return CoreInstance.GetAngle(); }
		}

		/// <summary>
		/// 
		/// </summary>
		public ace.Vector2DF Scale
		{
			get { return CoreInstance.GetScale(); }
		}

		/// <summary>
		/// 
		/// </summary>
		public ace.Vector2DF CenterPosition
		{
			get { return CoreInstance.GetCenterPosition(); }
		}

		/// <summary>
		/// 
		/// </summary>
		public ace.Color Color
		{
			get { return CoreInstance.GetColor(); }
		}

		/// <summary>
		/// 
		/// </summary>
		public bool TurnLR
		{
			get { return CoreInstance.GetTurnLR(); }
		}

		/// <summary>
		/// 
		/// </summary>
		public bool TurnUL
		{
			get { return CoreInstance.GetTurnUL(); }
		}

		/// <summary>
		/// 
		/// </summary>
		public int DrawingPriority
		{
			get { return CoreInstance.GetDrawingPriority(); }
		}

		/// <summary>
		/// 
		/// </summary>
		public AlphaBlendMode AlphaBlendMode
		{
			get { return (ace.AlphaBlendMode)CoreInstance.GetAlphaBlendMode(); }
		}

		/// <summary>
		/// 
		/// </summary>
		public TextureFilterType TextureFilterType
		{
			get { return (ace.TextureFilterType)CoreInstance.GetTextureFilterType(); }
		}


	}


	/// <summary>
	/// 
	/// </summary>
	public partial class Arc
	{
		internal ace.swig.CoreArc CoreInstance { get; set; }

		/// <summary>
		/// 
		/// </summary>
		public ace.Vector2DF Position
		{
			get { return CoreInstance.GetPosition(); }
			set { CoreInstance.SetPosition(value); }
		}

		/// <summary>
		/// 
		/// </summary>
		public float OuterDiameter
		{
			get { return CoreInstance.GetOuterDiameter(); }
			set { CoreInstance.SetOuterDiameter(value); }
		}

		/// <summary>
		/// 
		/// </summary>
		public float InnerDiameter
		{
			get { return CoreInstance.GetInnerDiameter(); }
			set { CoreInstance.SetInnerDiameter(value); }
		}

		/// <summary>
		/// 
		/// </summary>
		public float Angle
		{
			get { return CoreInstance.GetAngle(); }
			set { CoreInstance.SetAngle(value); }
		}

		/// <summary>
		/// 
		/// </summary>
		public int StartingCorner
		{
			get { return CoreInstance.GetStartingCorner(); }
			set { CoreInstance.SetStartingCorner(value); }
		}

		/// <summary>
		/// 
		/// </summary>
		public int EndingCorner
		{
			get { return CoreInstance.GetEndingCorner(); }
			set { CoreInstance.SetEndingCorner(value); }
		}

		/// <summary>
		/// 
		/// </summary>
		public int NumberOfCorners
		{
			get { return CoreInstance.GetNumberOfCorners(); }
			set { CoreInstance.SetNumberOfCorners(value); }
		}


	}


	/// <summary>
	/// 
	/// </summary>
	public partial class Circle
	{
		internal ace.swig.CoreCircle CoreInstance { get; set; }

		/// <summary>
		/// 
		/// </summary>
		public ace.Vector2DF Position
		{
			get { return CoreInstance.GetPosition(); }
			set { CoreInstance.SetPosition(value); }
		}

		/// <summary>
		/// 
		/// </summary>
		public float OuterDiameter
		{
			get { return CoreInstance.GetOuterDiameter(); }
			set { CoreInstance.SetOuterDiameter(value); }
		}

		/// <summary>
		/// 
		/// </summary>
		public float InnerDiameter
		{
			get { return CoreInstance.GetInnerDiameter(); }
			set { CoreInstance.SetInnerDiameter(value); }
		}

		/// <summary>
		/// 
		/// </summary>
		public float Angle
		{
			get { return CoreInstance.GetAngle(); }
			set { CoreInstance.SetAngle(value); }
		}

		/// <summary>
		/// 
		/// </summary>
		public int NumberOfCorners
		{
			get { return CoreInstance.GetNumberOfCorners(); }
			set { CoreInstance.SetNumberOfCorners(value); }
		}


	}


	/// <summary>
	/// 
	/// </summary>
	public partial class Line
	{
		internal ace.swig.CoreLine CoreInstance { get; set; }

		/// <summary>
		/// 
		/// </summary>
		public ace.Vector2DF StartingPosition
		{
			get { return CoreInstance.GetStartingPosition(); }
			set { CoreInstance.SetStartingPosition(value); }
		}

		/// <summary>
		/// 
		/// </summary>
		public ace.Vector2DF EndingPosition
		{
			get { return CoreInstance.GetEndingPosition(); }
			set { CoreInstance.SetEndingPosition(value); }
		}

		/// <summary>
		/// 
		/// </summary>
		public float Thickness
		{
			get { return CoreInstance.GetThickness(); }
			set { CoreInstance.SetThickness(value); }
		}


	}


	/// <summary>
	/// 
	/// </summary>
	public partial class Rectangle
	{
		internal ace.swig.CoreRectangle CoreInstance { get; set; }

		/// <summary>
		/// 
		/// </summary>
		public ace.RectF DrawingArea
		{
			get { return CoreInstance.GetDrawingArea(); }
			set { CoreInstance.SetDrawingArea(value); }
		}

		/// <summary>
		/// 
		/// </summary>
		public ace.RectF UV
		{
			get { return CoreInstance.GetUV(); }
			set { CoreInstance.SetUV(value); }
		}

		/// <summary>
		/// 
		/// </summary>
		public float Angle
		{
			get { return CoreInstance.GetAngle(); }
			set { CoreInstance.SetAngle(value); }
		}

		/// <summary>
		/// 
		/// </summary>
		public ace.Vector2DF CenterPosition
		{
			get { return CoreInstance.GetCenterPosition(); }
			set { CoreInstance.SetCenterPosition(value); }
		}


	}


	/// <summary>
	/// 
	/// </summary>
	public partial class Triangle
	{
		internal ace.swig.CoreTriangle CoreInstance { get; set; }


		/// <summary>
		/// 
		/// </summary>
		/// <param name="index"></param>
		/// <returns></returns>
		public ace.Vector2DF GetPointByIndex(int index)
		{
			return CoreInstance.GetPointByIndex(index);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="point"></param>
		/// <param name="index"></param>
		public void SetPointByIndex(ace.Vector2DF point, int index)
		{
			CoreInstance.SetPointByIndex(point, index);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="index"></param>
		/// <returns></returns>
		public ace.Vector2DF GetUVByIndex(int index)
		{
			return CoreInstance.GetUVByIndex(index);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="uv"></param>
		/// <param name="index"></param>
		public void SetUVByIndex(ace.Vector2DF uv, int index)
		{
			CoreInstance.SetUVByIndex(uv, index);
		}

	}


	/// <summary>
	/// エフェクトの情報が記録されているクラス 
	/// </summary>
	public partial class Effect
	{
		internal ace.swig.Effect CoreInstance { get; set; }


	}


	/// <summary>
	/// ファイルの操作に関する処理を提供するクラス 
	/// </summary>
	public partial class File
	{
		internal ace.swig.File_Imp CoreInstance { get; set; }

		/// <summary>
		/// 
		/// </summary>
		public int Ref
		{
			get { return CoreInstance.GetRef(); }
		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="path"></param>
		public void AddRootDirectories(string path)
		{
			CoreInstance.AddRootDirectories(path);
		}

		/// <summary>
		/// ファイル操作する時のルートのパッケージを追加する。 
		/// </summary>
		/// <param name="path">パッケージのパス </param>
		/// <param name="key"></param>
		public void AddRootPackage(string path, string key)
		{
			CoreInstance.AddRootPackage(path, key);
		}

		/// <summary>
		/// 追加されたパッケージを全て消去する。 
		/// </summary>
		public void ClearRootDirectories()
		{
			CoreInstance.ClearRootDirectories();
		}

		/// <summary>
		/// ファイルが存在するか取得する。 
		/// </summary>
		/// <param name="path">ファイルのパス </param>
		/// <returns>ファイルが存在するか? </returns>
		public bool Exists(string path)
		{
			return CoreInstance.Exists(path);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <returns></returns>
		public int AddRef()
		{
			return CoreInstance.AddRef();
		}

		/// <summary>
		/// 
		/// </summary>
		/// <returns></returns>
		public int Release()
		{
			return CoreInstance.Release();
		}

	}


	/// <summary>
	/// フォントの情報が記録されているクラス 
	/// </summary>
	public partial class Font
	{
		internal ace.swig.Font CoreInstance { get; set; }


		/// <summary>
		/// 描画テキストと描画方向を与えると、その文字の描画領域を返す。 
		/// </summary>
		/// <param name="text">描画テキスト </param>
		/// <param name="writingDirection">描画方向 </param>
		/// <returns>文字の描画領域 </returns>
		public ace.Vector2DI CalcTextureSize(string text, WritingDirection writingDirection)
		{
			return CoreInstance.CalcTextureSize(text, (ace.swig.WritingDirection)writingDirection);
		}

	}


	/// <summary>
	/// 複数の画像が格納されているクラス 
	/// </summary>
	public partial class ImagePackage
	{
		internal ace.swig.ImagePackage CoreInstance { get; set; }

		/// <summary>
		/// 格納されている画像の枚数を取得する。
		/// </summary>
		public int ImageCount
		{
			get { return CoreInstance.GetImageCount(); }
		}


		/// <summary>
		/// 格納されている画像の名称を取得する。 
		/// </summary>
		/// <param name="index">インデックス </param>
		/// <returns>名称 </returns>
		public string GetImageName(int index)
		{
			return CoreInstance.GetImageName(index);
		}

		/// <summary>
		/// 格納されている画像が配置される領域を取得する。 
		/// </summary>
		/// <param name="index">インデックス </param>
		/// <returns>領域 </returns>
		public ace.RectI GetImageArea(int index)
		{
			return CoreInstance.GetImageArea(index);
		}

	}


	/// <summary>
	/// 
	/// </summary>
	public partial class JoystickContainer
	{
		internal ace.swig.JoystickContainer_Imp CoreInstance { get; set; }


		/// <summary>
		/// 
		/// </summary>
		public void RefreshJoysticks()
		{
			CoreInstance.RefreshJoysticks();
		}

		/// <summary>
		/// 引数に指定した番号のジョイスティックが接続されているかを取得する。 
		/// </summary>
		/// <param name="at">何番目のジョイスティックの接続を確認するか </param>
		/// <returns>接続されているか否か </returns>
		public bool GetIsPresentAt(int at)
		{
			return CoreInstance.GetIsPresentAt(at);
		}

		/// <summary>
		/// 全てのジョイスティックの接続状態を更新する。 
		/// </summary>
		public void RefreshAllJoysticks()
		{
			CoreInstance.RefreshAllJoysticks();
		}

	}


	/// <summary>
	/// 指定したコンポーネントをこのインスタンスに追加する。 
	/// </summary>
	public partial class Joystick
	{
		internal ace.swig.Joystick_Imp CoreInstance { get; set; }

		/// <summary>
		/// 
		/// </summary>
		public string JoystickName
		{
			get { return CoreInstance.GetJoystickName(); }
		}

		/// <summary>
		/// 
		/// </summary>
		public int ButtonsCount
		{
			get { return CoreInstance.GetButtonsCount(); }
		}

		/// <summary>
		/// 
		/// </summary>
		public int AxesCount
		{
			get { return CoreInstance.GetAxesCount(); }
		}


		/// <summary>
		/// 
		/// </summary>
		public void RefreshInputState()
		{
			CoreInstance.RefreshInputState();
		}

		/// <summary>
		/// 指定したボタンの押し状態を返す 
		/// </summary>
		/// <param name="at">何番目のボタンの押し状態を取得するか </param>
		/// <returns>押し状態 </returns>
		public JoystickButtonState GetButtonState(int at)
		{
			return (ace.JoystickButtonState)CoreInstance.GetButtonState(at);
		}

		/// <summary>
		/// 指定した軸の倒し具合を返す 
		/// </summary>
		/// <param name="at">何番目の軸配列の倒し具合を取得するか </param>
		/// <returns>倒し具合 </returns>
		public float GetAxisState(int at)
		{
			return CoreInstance.GetAxisState(at);
		}

	}


	/// <summary>
	/// キーボードからの入力を取得するクラス 
	/// </summary>
	public partial class Keyboard
	{
		internal ace.swig.Keyboard_Imp CoreInstance { get; set; }


		/// <summary>
		/// 
		/// </summary>
		public void RefreshInputState()
		{
			CoreInstance.RefreshInputState();
		}

		/// <summary>
		/// 特定のキーの押し状態をKeyState列挙型で返す 
		/// </summary>
		/// <param name="key"></param>
		/// <returns>押し状態 </returns>
		public KeyState GetKeyState(Keys key)
		{
			return (ace.KeyState)CoreInstance.GetKeyState((ace.swig.Keys)key);
		}

	}


	/// <summary>
	/// 
	/// </summary>
	public partial class Log
	{
		internal ace.swig.Log_Imp CoreInstance { get; set; }

		/// <summary>
		/// ログの出力が可能であるかどうかを表す真偽値を取得する。
		/// </summary>
		public bool IsValid
		{
			get { return CoreInstance.GetIsValid(); }
		}

		/// <summary>
		/// ログの出力レベルを設定する。
		/// </summary>
		public LogLevel OutputLevel
		{
			set { CoreInstance.SetOutputLevel((ace.swig.LogLevel)value); }
		}


		/// <summary>
		/// ログ ファイルへ文字列を書き込む。 
		/// </summary>
		/// <param name="text">[in] 書き込む文字列 </param>
		/// <param name="level">[in] ログの出力レベル </param>
		public void Write(string text, LogLevel level)
		{
			CoreInstance.Write(text, (ace.swig.LogLevel)level);
		}

		/// <summary>
		/// ログ ファイルへ文字列を書き込む。 
		/// </summary>
		/// <param name="text">[in] 書き込む文字列 </param>
		public void Write(string text)
		{
			CoreInstance.Write(text);
		}

		/// <summary>
		/// ログ ファイルへ文字列を書き込み、改行する。 
		/// </summary>
		/// <param name="text">[in] 書き込む文字列 </param>
		/// <param name="level">[in] ログの出力レベル </param>
		public void WriteLine(string text, LogLevel level)
		{
			CoreInstance.WriteLine(text, (ace.swig.LogLevel)level);
		}

		/// <summary>
		/// ログ ファイルへ文字列を書き込み、改行する。 
		/// </summary>
		/// <param name="text">[in] 書き込む文字列 </param>
		public void WriteLine(string text)
		{
			CoreInstance.WriteLine(text);
		}

		/// <summary>
		/// ログ ファイルへ強調された文字列を書き込む。 
		/// </summary>
		/// <param name="text">[in] 書き込む文字列 </param>
		/// <param name="level">[in] ログの出力レベル </param>
		public void WriteStrongly(string text, LogLevel level)
		{
			CoreInstance.WriteStrongly(text, (ace.swig.LogLevel)level);
		}

		/// <summary>
		/// ログ ファイルへ強調された文字列を書き込む。 
		/// </summary>
		/// <param name="text">[in] 書き込む文字列 </param>
		public void WriteStrongly(string text)
		{
			CoreInstance.WriteStrongly(text);
		}

		/// <summary>
		/// ログ ファイルへ強調された文字列を書き込み、改行する。 
		/// </summary>
		/// <param name="text">[in] 書き込む文字列 </param>
		/// <param name="level">[in] ログの出力レベル </param>
		public void WriteLineStrongly(string text, LogLevel level)
		{
			CoreInstance.WriteLineStrongly(text, (ace.swig.LogLevel)level);
		}

		/// <summary>
		/// ログ ファイルへ強調された文字列を書き込み、改行する。 
		/// </summary>
		/// <param name="text">[in] 書き込む文字列 </param>
		public void WriteLineStrongly(string text)
		{
			CoreInstance.WriteLineStrongly(text);
		}

		/// <summary>
		/// ログ ファイルへ見出しとして文字列を書き込む。 
		/// </summary>
		/// <param name="text">[in] 書き込む文字列 </param>
		/// <param name="level">[in] ログの出力レベル </param>
		public void WriteHeading(string text, LogLevel level)
		{
			CoreInstance.WriteHeading(text, (ace.swig.LogLevel)level);
		}

		/// <summary>
		/// ログ ファイルへ見出しとして文字列を書き込む。 
		/// </summary>
		/// <param name="text">[in] 書き込む文字列 </param>
		public void WriteHeading(string text)
		{
			CoreInstance.WriteHeading(text);
		}

		/// <summary>
		/// ログ ファイルへ水平線を書き込む。 
		/// </summary>
		/// <param name="level">[in] ログの出力レベル </param>
		public void WriteHorizontalRule(LogLevel level)
		{
			CoreInstance.WriteHorizontalRule((ace.swig.LogLevel)level);
		}

		/// <summary>
		/// ログ ファイルへ水平線を書き込む。 
		/// </summary>
		public void WriteHorizontalRule()
		{
			CoreInstance.WriteHorizontalRule();
		}

		/// <summary>
		/// ログ ファイルへ表形式( 
		/// </summary>
		/// <param name="level">[in] ログの出力レベル </param>
		public void BeginTable(LogLevel level)
		{
			CoreInstance.BeginTable((ace.swig.LogLevel)level);
		}

		/// <summary>
		/// ログ ファイルへ表形式( 
		/// </summary>
		public void BeginTable()
		{
			CoreInstance.BeginTable();
		}

		/// <summary>
		/// ログ ファイルへの表形式( 
		/// </summary>
		/// <param name="level">[in] ログの出力レベル </param>
		public void EndTable(LogLevel level)
		{
			CoreInstance.EndTable((ace.swig.LogLevel)level);
		}

		/// <summary>
		/// ログ ファイルへの表形式( 
		/// </summary>
		public void EndTable()
		{
			CoreInstance.EndTable();
		}

		/// <summary>
		/// 表形式での出力において、新しい行に移動する。 
		/// </summary>
		/// <param name="level">[in] ログの出力レベル </param>
		public void ChangeRow(LogLevel level)
		{
			CoreInstance.ChangeRow((ace.swig.LogLevel)level);
		}

		/// <summary>
		/// 表形式での出力において、新しい行に移動する。 
		/// </summary>
		public void ChangeRow()
		{
			CoreInstance.ChangeRow();
		}

		/// <summary>
		/// 表形式での出力において、新しい列に移動する。 
		/// </summary>
		/// <param name="level">[in] ログの出力レベル </param>
		public void ChangeColumn(LogLevel level)
		{
			CoreInstance.ChangeColumn((ace.swig.LogLevel)level);
		}

		/// <summary>
		/// 表形式での出力において、新しい列に移動する。 
		/// </summary>
		public void ChangeColumn()
		{
			CoreInstance.ChangeColumn();
		}

	}


	/// <summary>
	/// 大量描画が可能な3Dモデルクラス 
	/// </summary>
	public partial class MassModel
	{
		internal ace.swig.MassModel CoreInstance { get; set; }

		/// <summary>
		/// モデルが持つアニメーションの個数を取得する。
		/// </summary>
		public int AnimationCount
		{
			get { return CoreInstance.GetAnimationCount(); }
		}


		/// <summary>
		/// モデルが持つアニメーションの名称を取得する。 
		/// </summary>
		/// <param name="index">アニメーションのインデックス </param>
		/// <returns>アニメーションの名称 </returns>
		public string GetAnimationName(int index)
		{
			return CoreInstance.GetAnimationName(index);
		}

		/// <summary>
		/// モデルが持つアニメーションの長さ(60フレーム単位)を取得する。 
		/// </summary>
		/// <param name="name">アニメーション名 </param>
		/// <returns>アニメーションの長さ </returns>
		public float GetAnimationLength(string name)
		{
			return CoreInstance.GetAnimationLength(name);
		}

		/// <summary>
		/// アニメーションがループするかを取得する。 
		/// </summary>
		/// <param name="name">アニメーション名 </param>
		/// <returns>ループするか? </returns>
		public bool GetIsAnimationLoopingMode(string name)
		{
			return CoreInstance.GetIsAnimationLoopingMode(name);
		}

		/// <summary>
		/// アニメーションがループするかを設定する。 
		/// </summary>
		/// <param name="name">アニメーション名 </param>
		/// <param name="isLoopingMode"></param>
		public void SetIsAnimationLoopingMode(string name, bool isLoopingMode)
		{
			CoreInstance.SetIsAnimationLoopingMode(name, isLoopingMode);
		}

	}


	/// <summary>
	/// 
	/// </summary>
	public partial class Material2D
	{
		internal ace.swig.Material2D CoreInstance { get; set; }


		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <returns></returns>
		public float GetFloat(string name)
		{
			return CoreInstance.GetFloat(name);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <param name="value"></param>
		public void SetFloat(string name, float value)
		{
			CoreInstance.SetFloat(name, value);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <returns></returns>
		public ace.Vector2DF GetVector2DF(string name)
		{
			return CoreInstance.GetVector2DF(name);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <param name="value"></param>
		public void SetVector2DF(string name, ace.Vector2DF value)
		{
			CoreInstance.SetVector2DF(name, value);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <returns></returns>
		public ace.Vector3DF GetVector3DF(string name)
		{
			return CoreInstance.GetVector3DF(name);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <param name="value"></param>
		public void SetVector3DF(string name, ace.Vector3DF value)
		{
			CoreInstance.SetVector3DF(name, value);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <returns></returns>
		public ace.Vector4DF GetVector4DF(string name)
		{
			return CoreInstance.GetVector4DF(name);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <param name="value"></param>
		public void SetVector4DF(string name, ace.Vector4DF value)
		{
			CoreInstance.SetVector4DF(name, value);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <param name="value"></param>
		public void SetTexture2D(string name, Texture2D value)
		{
			var valueCore = value != null ? value.CoreInstance : null;
			CoreInstance.SetTexture2D(name, valueCore);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <returns></returns>
		public TextureFilterType GetTextureFilterType(string name)
		{
			return (ace.TextureFilterType)CoreInstance.GetTextureFilterType(name);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <param name="filter"></param>
		public void SetTextureFilterType(string name, TextureFilterType filter)
		{
			CoreInstance.SetTextureFilterType(name, (ace.swig.TextureFilterType)filter);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <returns></returns>
		public TextureWrapType GetTextureWrapType(string name)
		{
			return (ace.TextureWrapType)CoreInstance.GetTextureWrapType(name);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <param name="wrap"></param>
		public void SetTextureWrapType(string name, TextureWrapType wrap)
		{
			CoreInstance.SetTextureWrapType(name, (ace.swig.TextureWrapType)wrap);
		}

	}


	/// <summary>
	/// 
	/// </summary>
	public partial class Material3D
	{
		internal ace.swig.Material3D CoreInstance { get; set; }


		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <returns></returns>
		public float GetFloat(string name)
		{
			return CoreInstance.GetFloat(name);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <param name="value"></param>
		public void SetFloat(string name, float value)
		{
			CoreInstance.SetFloat(name, value);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <returns></returns>
		public ace.Vector2DF GetVector2DF(string name)
		{
			return CoreInstance.GetVector2DF(name);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <param name="value"></param>
		public void SetVector2DF(string name, ace.Vector2DF value)
		{
			CoreInstance.SetVector2DF(name, value);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <returns></returns>
		public ace.Vector3DF GetVector3DF(string name)
		{
			return CoreInstance.GetVector3DF(name);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <param name="value"></param>
		public void SetVector3DF(string name, ace.Vector3DF value)
		{
			CoreInstance.SetVector3DF(name, value);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <returns></returns>
		public ace.Vector4DF GetVector4DF(string name)
		{
			return CoreInstance.GetVector4DF(name);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <param name="value"></param>
		public void SetVector4DF(string name, ace.Vector4DF value)
		{
			CoreInstance.SetVector4DF(name, value);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <param name="value"></param>
		public void SetTexture2D(string name, Texture2D value)
		{
			var valueCore = value != null ? value.CoreInstance : null;
			CoreInstance.SetTexture2D(name, valueCore);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <returns></returns>
		public TextureFilterType GetTextureFilterType(string name)
		{
			return (ace.TextureFilterType)CoreInstance.GetTextureFilterType(name);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <param name="filter"></param>
		public void SetTextureFilterType(string name, TextureFilterType filter)
		{
			CoreInstance.SetTextureFilterType(name, (ace.swig.TextureFilterType)filter);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <returns></returns>
		public TextureWrapType GetTextureWrapType(string name)
		{
			return (ace.TextureWrapType)CoreInstance.GetTextureWrapType(name);
		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="name"></param>
		/// <param name="wrap"></param>
		public void SetTextureWrapType(string name, TextureWrapType wrap)
		{
			CoreInstance.SetTextureWrapType(name, (ace.swig.TextureWrapType)wrap);
		}

	}


	/// <summary>
	/// 3Dメッシュのクラス 
	/// </summary>
	public partial class Mesh
	{
		internal ace.swig.Mesh CoreInstance { get; set; }


		/// <summary>
		/// 頂点を追加する。 
		/// </summary>
		/// <param name="position">座標 </param>
		/// <param name="normal">法線 </param>
		/// <param name="binormal">従法線 </param>
		/// <param name="uv1">UV1 </param>
		/// <param name="uv2">UV2 </param>
		/// <param name="color">頂点色 </param>
		/// <param name="boneWeights">ボーンのウエイト </param>
		/// <param name="boneIndexes">ボーンのインデックス </param>
		public void AddVertex(ace.Vector3DF position, ace.Vector3DF normal, ace.Vector3DF binormal, ace.Vector2DF uv1, ace.Vector2DF uv2, ace.Color color, int boneWeights, int boneIndexes)
		{
			CoreInstance.AddVertex(ref position, ref normal, ref binormal, ref uv1, ref uv2, ref color, boneWeights, boneIndexes);
		}

		/// <summary>
		/// 面を追加する。 
		/// </summary>
		/// <param name="index1">頂点インデックス1 </param>
		/// <param name="index2">頂点インデックス2 </param>
		/// <param name="index3">頂点インデックス3 </param>
		/// <param name="materialIndex">材質インデックス </param>
		public void AddFace(int index1, int index2, int index3, int materialIndex)
		{
			CoreInstance.AddFace(index1, index2, index3, materialIndex);
		}

		/// <summary>
		/// ボーンとの接続設定を追加する。 
		/// </summary>
		/// <param name="targetIndex">対象ボーンインデックス </param>
		/// <param name="boneToMesh">ボーンの行列をメッシュの行列に変換する行列 </param>
		public void AddBoneConnector(int targetIndex, ace.Matrix44 boneToMesh)
		{
			CoreInstance.AddBoneConnector(targetIndex, ref boneToMesh);
		}

		/// <summary>
		/// 材質を追加する。 
		/// </summary>
		/// <returns>材質のインデックス </returns>
		public int AddMaterial()
		{
			return CoreInstance.AddMaterial();
		}

		/// <summary>
		/// 設定した値をGPUに送信する。 
		/// </summary>
		public void SendToGPUMemory()
		{
			CoreInstance.SendToGPUMemory();
		}

		/// <summary>
		/// 内部シェーダーを使用する場合のカラーテクスチャを設定する。 
		/// </summary>
		/// <param name="materialIndex">材質のインデックス </param>
		/// <param name="texture"></param>
		public void SetColorTexture(int materialIndex, Texture2D texture)
		{
			var textureCore = texture != null ? texture.CoreInstance : null;
			CoreInstance.SetColorTexture(materialIndex, textureCore);
		}

		/// <summary>
		/// 内部シェーダーを使用する場合の法線テクスチャを設定する。 
		/// </summary>
		/// <param name="materialIndex">材質のインデックス </param>
		/// <param name="texture"></param>
		public void SetNormalTexture(int materialIndex, Texture2D texture)
		{
			var textureCore = texture != null ? texture.CoreInstance : null;
			CoreInstance.SetNormalTexture(materialIndex, textureCore);
		}

		/// <summary>
		/// 内部シェーダーを使用する場合の金属度テクスチャを設定する。 
		/// </summary>
		/// <param name="materialIndex">材質のインデックス </param>
		/// <param name="texture"></param>
		public void SetMetalnessTexture(int materialIndex, Texture2D texture)
		{
			var textureCore = texture != null ? texture.CoreInstance : null;
			CoreInstance.SetMetalnessTexture(materialIndex, textureCore);
		}

		/// <summary>
		/// 内部シェーダーを使用する場合の面平滑度テクスチャを設定する。 
		/// </summary>
		/// <param name="materialIndex">材質のインデックス </param>
		/// <param name="texture"></param>
		public void SetSmoothnessTexture(int materialIndex, Texture2D texture)
		{
			var textureCore = texture != null ? texture.CoreInstance : null;
			CoreInstance.SetSmoothnessTexture(materialIndex, textureCore);
		}

	}


	/// <summary>
	/// 3Dモデルクラス 
	/// </summary>
	public partial class Model
	{
		internal ace.swig.Model CoreInstance { get; set; }

		/// <summary>
		/// モデルが持つメッシュの個数を取得する。
		/// </summary>
		public int MeshCount
		{
			get { return CoreInstance.GetMeshCount(); }
		}

		/// <summary>
		/// モデルが持つアニメーションクリップの個数を取得する。
		/// </summary>
		public int AnimationClipCount
		{
			get { return CoreInstance.GetAnimationClipCount(); }
		}


		/// <summary>
		/// モデルが持つアニメーションクリップの名称を取得する。 
		/// </summary>
		/// <param name="index">アニメーションクリップのインデックス </param>
		/// <returns>アニメーションクリップの名称 </returns>
		public string GetAnimationClipName(int index)
		{
			return CoreInstance.GetAnimationClipName(index);
		}

	}


	/// <summary>
	/// 
	/// </summary>
	public partial class Mouse
	{
		internal ace.swig.Mouse_Imp CoreInstance { get; set; }

		/// <summary>
		/// 
		/// </summary>
		public ace.Vector2DF Position
		{
			get { return CoreInstance.GetPosition(); }
		}


		/// <summary>
		/// 
		/// </summary>
		public void RefreshInputState()
		{
			CoreInstance.RefreshInputState();
		}

	}


	/// <summary>
	/// 
	/// </summary>
	public partial class Path
	{
		internal ace.swig.Path CoreInstance { get; set; }


		/// <summary>
		/// 
		/// </summary>
		/// <returns></returns>
		public string ToAstring()
		{
			return CoreInstance.ToAstring();
		}

	}


	/// <summary>
	/// プログラムの実行状況(計算時間や、使っているプロセッサ)を記録するクラス。 
	/// </summary>
	public partial class Profiler
	{
		internal ace.swig.Profiler_Imp CoreInstance { get; set; }


		/// <summary>
		/// 計算の開始時間と、使用するプロセッサ番号を記録する。 
		/// </summary>
		/// <param name="id">プロファイリングを識別するID。Start関数は、IDの一致するEnd関数と対応する。 </param>
		public void Start(int id)
		{
			CoreInstance.Start(id);
		}

		/// <summary>
		/// 計算の終了時間を記録し、プロファイリング結果を蓄積する。 
		/// </summary>
		/// <param name="id">プロファイリングを識別するID。End関数は、IDの一致するStart関数と対応する。 </param>
		public void End(int id)
		{
			CoreInstance.End(id);
		}

	}


	/// <summary>
	/// シェーダー(2D) 
	/// </summary>
	public partial class Shader2D
	{
		internal ace.swig.Shader2D_Imp CoreInstance { get; set; }


	}


	/// <summary>
	/// シェーダー(3D) 
	/// </summary>
	public partial class Shader3D
	{
		internal ace.swig.Shader3D CoreInstance { get; set; }


	}


	/// <summary>
	/// 音を管理するクラス 
	/// </summary>
	public partial class Sound
	{
		internal ace.swig.Sound CoreInstance { get; set; }


		/// <summary>
		/// 音を再生する。 
		/// </summary>
		/// <param name="soundSource">音源 </param>
		/// <returns>ID </returns>
		public int Play(SoundSource soundSource)
		{
			var soundSourceCore = soundSource != null ? soundSource.CoreInstance : null;
			return CoreInstance.Play(soundSourceCore);
		}

		/// <summary>
		/// 音が再生中か、取得する。 
		/// </summary>
		/// <param name="id">ID </param>
		/// <returns>再生中か? </returns>
		public bool GetIsPlaying(int id)
		{
			return CoreInstance.GetIsPlaying(id);
		}

		/// <summary>
		/// 全ての再生中の音を停止する。 
		/// </summary>
		public void StopAll()
		{
			CoreInstance.StopAll();
		}

		/// <summary>
		/// 指定した音を停止する。 
		/// </summary>
		/// <param name="id">ID </param>
		public void Stop(int id)
		{
			CoreInstance.Stop(id);
		}

		/// <summary>
		/// 指定した音を一時停止する。 
		/// </summary>
		/// <param name="id">ID </param>
		public void Pause(int id)
		{
			CoreInstance.Pause(id);
		}

		/// <summary>
		/// 指定した一時停止中の音の一時停止を解除する。 
		/// </summary>
		/// <param name="id">ID </param>
		public void Resume(int id)
		{
			CoreInstance.Resume(id);
		}

		/// <summary>
		/// 指定した音の音量を設定する。 
		/// </summary>
		/// <param name="id">ID </param>
		/// <param name="volume">音量(0.0～1.0) </param>
		public void SetVolume(int id, float volume)
		{
			CoreInstance.SetVolume(id, volume);
		}

		/// <summary>
		/// 指定した音をフェードインさせる。 
		/// </summary>
		/// <param name="id">ID </param>
		/// <param name="second">フェードインに使用する時間(秒) </param>
		public void FadeIn(int id, float second)
		{
			CoreInstance.FadeIn(id, second);
		}

		/// <summary>
		/// 指定した音をフェードアウトさせる。 
		/// </summary>
		/// <param name="id">ID </param>
		/// <param name="second">フェードアウトに使用する時間(秒) </param>
		public void FadeOut(int id, float second)
		{
			CoreInstance.FadeOut(id, second);
		}

	}


	/// <summary>
	/// 音源のクラス 
	/// </summary>
	public partial class SoundSource
	{
		internal ace.swig.SoundSource CoreInstance { get; set; }

		/// <summary>
		/// ループポイントの開始地点(秒)を取得または設定する。
		/// </summary>
		public float LoopStartingPoint
		{
			get { return CoreInstance.GetLoopStartingPoint(); }
			set { CoreInstance.SetLoopStartingPoint(value); }
		}

		/// <summary>
		/// ループポイントの終了地点(秒)を取得または設定する。
		/// </summary>
		public float LoopEndPoint
		{
			get { return CoreInstance.GetLoopEndPoint(); }
			set { CoreInstance.SetLoopEndPoint(value); }
		}

		/// <summary>
		/// ループするかを取得または設定する。
		/// </summary>
		public bool IsLoopingMode
		{
			get { return CoreInstance.GetIsLoopingMode(); }
			set { CoreInstance.SetIsLoopingMode(value); }
		}

		/// <summary>
		/// 音の長さを取得する。
		/// </summary>
		public float Length
		{
			get { return CoreInstance.GetLength(); }
		}


	}


	/// <summary>
	/// 一括してファイルを読み込むクラス 
	/// </summary>
	public partial class StaticFile
	{
		internal ace.swig.StaticFile CoreInstance { get; set; }

		/// <summary>
		/// ファイルのパスを取得する。
		/// </summary>
		public string FullPath
		{
			get { return CoreInstance.GetFullPath(); }
		}

		/// <summary>
		/// 読み込まれたバッファの先頭のポインタを取得する。
		/// </summary>
		public System.IntPtr Data
		{
			get { return CoreInstance.GetData(); }
		}

		/// <summary>
		/// 読み込まれたバッファのサイズを取得する。
		/// </summary>
		public int Size
		{
			get { return CoreInstance.GetSize(); }
		}


	}


	/// <summary>
	/// 部分的にファイルを読み込むクラス 
	/// </summary>
	public partial class StreamFile
	{
		internal ace.swig.StreamFile CoreInstance { get; set; }

		/// <summary>
		/// ファイルのサイズを取得する。
		/// </summary>
		public int Size
		{
			get { return CoreInstance.GetSize(); }
		}

		/// <summary>
		/// ファイル内で現在読み込んでいる位置を取得する。
		/// </summary>
		public int CurrentPosition
		{
			get { return CoreInstance.GetCurrentPosition(); }
		}


	}


	/// <summary>
	/// 
	/// </summary>
	public partial class SWIGTYPE_p_ace__Chip2D
	{
		internal ace.swig.SWIGTYPE_p_ace__Chip2D CoreInstance { get; set; }


	}


	/// <summary>
	/// 
	/// </summary>
	public partial class SWIGTYPE_p_Chip2D
	{
		internal ace.swig.SWIGTYPE_p_Chip2D CoreInstance { get; set; }


	}


	/// <summary>
	/// 
	/// </summary>
	public partial class SWIGTYPE_p_CoreArc
	{
		internal ace.swig.SWIGTYPE_p_CoreArc CoreInstance { get; set; }


	}


	/// <summary>
	/// 
	/// </summary>
	public partial class SWIGTYPE_p_CoreCircle
	{
		internal ace.swig.SWIGTYPE_p_CoreCircle CoreInstance { get; set; }


	}


	/// <summary>
	/// 
	/// </summary>
	public partial class SWIGTYPE_p_CoreLine
	{
		internal ace.swig.SWIGTYPE_p_CoreLine CoreInstance { get; set; }


	}


	/// <summary>
	/// 
	/// </summary>
	public partial class SWIGTYPE_p_CoreRectangle
	{
		internal ace.swig.SWIGTYPE_p_CoreRectangle CoreInstance { get; set; }


	}


	/// <summary>
	/// 
	/// </summary>
	public partial class SWIGTYPE_p_CoreTriangle
	{
		internal ace.swig.SWIGTYPE_p_CoreTriangle CoreInstance { get; set; }


	}


	/// <summary>
	/// 
	/// </summary>
	public partial class SWIGTYPE_p_std__iteratorT_std__forward_iterator_tag_ace__Path_t
	{
		internal ace.swig.SWIGTYPE_p_std__iteratorT_std__forward_iterator_tag_ace__Path_t CoreInstance { get; set; }


	}


	/// <summary>
	/// 
	/// </summary>
	public partial class SWIGTYPE_p_std__vectorT_std__reference_wrapperT_ace__Path_t_t
	{
		internal ace.swig.SWIGTYPE_p_std__vectorT_std__reference_wrapperT_ace__Path_t_t CoreInstance { get; set; }


	}


	/// <summary>
	/// 
	/// </summary>
	public partial class SWIGTYPE_p_TransformInfo2D
	{
		internal ace.swig.SWIGTYPE_p_TransformInfo2D CoreInstance { get; set; }


	}


	/// <summary>
	/// 地形のクラス 
	/// </summary>
	public partial class Terrain3D
	{
		internal ace.swig.Terrain3D CoreInstance { get; set; }


		/// <summary>
		/// 新規に地形を作成する。 
		/// </summary>
		/// <param name="gridSize">グリッド1つ当たりの大きさ </param>
		/// <param name="gridWidthCount">横方向のグリッド数 </param>
		/// <param name="gridHeightCount">縦方向のグリッド数 </param>
		public void New(float gridSize, int gridWidthCount, int gridHeightCount)
		{
			CoreInstance.New(gridSize, gridWidthCount, gridHeightCount);
		}

		/// <summary>
		/// 素材を追加する。 
		/// </summary>
		/// <param name="name">素材名 </param>
		/// <param name="size">素材のテクスチャ1枚あたりの大きさ </param>
		/// <param name="color">色テクスチャのパス </param>
		/// <param name="normal">法線テクスチャのパス </param>
		/// <param name="metalness">スペキュラテクスチャのパス </param>
		public void AddSurface(string name, float size, string color, string normal, string metalness)
		{
			CoreInstance.AddSurface(name, size, color, normal, metalness);
		}

		/// <summary>
		/// 素材インデックスを取得する。 
		/// </summary>
		/// <param name="name">素材名 </param>
		/// <returns>素材インデックス </returns>
		public int GetSurfaceIndex(string name)
		{
			return CoreInstance.GetSurfaceIndex(name);
		}

		/// <summary>
		/// 素材を円形に割り当てる。 
		/// </summary>
		/// <param name="surfaceIndex">素材インデックス </param>
		/// <param name="x">円形の中心座標 </param>
		/// <param name="y">円形の中心座標 </param>
		/// <param name="radius">円形の半径 </param>
		/// <param name="value">割り当てる値(-255～255) </param>
		/// <param name="fallout">周囲のぼかし(0～1) </param>
		public void AssignSurfaceWithCircle(int surfaceIndex, float x, float y, float radius, float value, float fallout)
		{
			CoreInstance.AssignSurfaceWithCircle(surfaceIndex, x, y, radius, value, fallout);
		}

		/// <summary>
		/// 円形に地形を上下させる。 
		/// </summary>
		/// <param name="x">円形の中心座標 </param>
		/// <param name="y">円形の中心座標 </param>
		/// <param name="radius">円形の半径 </param>
		/// <param name="value">値 </param>
		/// <param name="fallout">周囲のぼかし(0～1) </param>
		public void RaiseWithCircle(float x, float y, float radius, float value, float fallout)
		{
			CoreInstance.RaiseWithCircle(x, y, radius, value, fallout);
		}

		/// <summary>
		/// 円形に崖の生成を伴う地形の上下をさせる。 
		/// </summary>
		/// <param name="x">円形の中心座標 </param>
		/// <param name="y">円形の中心座標 </param>
		/// <param name="radius">円形の半径 </param>
		/// <param name="value">値 </param>
		public void ChangeCliffesWithCircle(float x, float y, float radius, int value)
		{
			CoreInstance.ChangeCliffesWithCircle(x, y, radius, value);
		}

		/// <summary>
		/// 光線を飛ばし、衝突した位置を取得する。 
		/// </summary>
		/// <param name="from">光線を飛ばす元の位置 </param>
		/// <param name="to">光線を飛ばす先の位置 </param>
		/// <returns>光線が地形に衝突した位置。衝突しない場合、NaNを返す。 </returns>
		public ace.Vector3DF CastRay(ace.Vector3DF from, ace.Vector3DF to)
		{
			return CoreInstance.CastRay(ref from, ref to);
		}

	}


	/// <summary>
	/// 
	/// </summary>
	public partial class Texture2D
	{
		internal ace.swig.Texture2D CoreInstance { get; set; }

		/// <summary>
		/// テクスチャのサイズを取得する。
		/// </summary>
		public ace.Vector2DI Size
		{
			get { return CoreInstance.GetSize(); }
		}

		/// <summary>
		/// テクスチャのフォーマットを取得する。
		/// </summary>
		public TextureFormat Format
		{
			get { return (ace.TextureFormat)CoreInstance.GetFormat(); }
		}

		/// <summary>
		/// テクスチャのクラスの種類を取得する。
		/// </summary>
		public TextureClassType Type
		{
			get { return (ace.TextureClassType)CoreInstance.GetType(); }
		}


		/// <summary>
		/// テクスチャをファイルに保存する。 
		/// </summary>
		/// <param name="path">出力先 </param>
		/// <returns>成否 </returns>
		public bool Save(string path)
		{
			return CoreInstance.Save(path);
		}

		/// <summary>
		/// テクスチャをアンロックする。 
		/// </summary>
		public void Unlock()
		{
			CoreInstance.Unlock();
		}

	}


}
