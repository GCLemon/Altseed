/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace ace.swig {

unsafe partial class StreamFile : IReference {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal StreamFile(global::System.IntPtr cPtr, bool cMemoryOwn) : base(ace_corePINVOKE.StreamFile_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(StreamFile obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~StreamFile() {
    Dispose();
  }

  public override void Dispose() {
	lock(this)
	{
		System.GC.SuppressFinalize(this);
	}
}

    public System.IntPtr GetPtr()
    {
    return  swigCPtr.Handle;
    }

  public virtual int GetSize() {
    int ret = ace_corePINVOKE.StreamFile_GetSize(swigCPtr);
    return ret;
  }

  public virtual int GetCurrentPosition() {
    int ret = ace_corePINVOKE.StreamFile_GetCurrentPosition(swigCPtr);
    return ret;
  }

}

}
