
//----------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------
#include "ace.RenderState_Imp.h"

//----------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------
namespace ace {
//-----------------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------------
RenderState_Imp::State::State()
{
	Reset();
}

//-----------------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------------
void RenderState_Imp::State::Reset()
{
	DepthTest = false;
	DepthWrite = false;
	AlphaBlendState = AlphaBlend::Blend;
	CullingType = CULLING_DOUBLE;

	for (auto i = 0; i < TextureCount; i++)
	{
		TextureFilterTypes[i] = TextureFilterType::Nearest;
		TextureWrapTypes[i] = TextureWrapType::Clamp;
	}
}

//-----------------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------------
void RenderState_Imp::State::CopyTo(State& state)
{
	state.DepthTest = DepthTest;
	state.DepthWrite = DepthWrite;
	state.AlphaBlendState = AlphaBlendState;
	state.CullingType = CullingType;

	for (auto i = 0; i < TextureCount; i++)
	{
		state.TextureFilterTypes[i] = TextureFilterTypes[i];
		state.TextureWrapTypes[i] = TextureWrapTypes[i];
	}
}

//-----------------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------------
RenderState_Imp::RenderState_Imp()
{
}

//-----------------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------------
RenderState_Imp::~RenderState_Imp()
{
}

//-----------------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------------
RenderState_Imp::State& RenderState_Imp::Push()
{
	State newState;
	m_next.CopyTo(newState);
	m_stateStack.push(m_next);
	m_next = newState;
	return m_next;
}

//-----------------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------------
void RenderState_Imp::Pop()
{
	assert(!m_stateStack.empty());

	State top = m_stateStack.top();
	m_stateStack.pop();

	m_next = top;
}

//-----------------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------------
RenderState_Imp::State& RenderState_Imp::GetActiveState()
{
	return m_next;
}

//-----------------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------------
}