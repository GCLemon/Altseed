
// float4 g_weight;
// g_blurredTexture;
// g_blurredSampler;
// g_originalTexture;
// g_originalSampler;

float4 GetOriginalColor(float2 uv)
{
	return SampleTexture(g_originalTexture, g_originalSampler, uv);
}

float4 GetColor(float2 uv)
{
	return SampleTexture(g_blurredTexture, g_blurredSampler, uv);
}

float4 CalcBlurredColor(float2 uv)
{
	float2 size = GetTextureSize(g_texture,g_sampler);

#if BLUR_X
	float2 shift_p = float2(0.5/size.x, 0.5/size.y);
	float2 shift_m = float2(-0.5/size.x, 0.5/size.y);
	float2 adder = float2(2.0f/size.x,0.0);
#endif

#if BLUR_Y
	float2 shift_p = float2(0.5/size.x, 0.5/size.y);
	float2 shift_m = float2(0.5/size.x, -0.5/size.y);
	float2 adder = float2(0.0,2.0/size.y);
#endif

	float4 sum = float4(0.0,0.0,0.0,0.0);

	sum += g_weight.x * GetColor( uv + shift_p + adder * 0.0 );
	sum += g_weight.x * GetColor( uv + shift_m - adder * 0.0 );
	
	sum += g_weight.y * GetColor( uv + shift_p + adder * 1.0 );
	sum += g_weight.y * GetColor( uv + shift_m - adder * 1.0 );
	
	sum += g_weight.z * GetColor( uv + shift_p + adder * 2.0 );
	sum += g_weight.z * GetColor( uv + shift_m - adder * 2.0 );
	
	sum += g_weight.w * GetColor( uv + shift_p + adder * 3.0 );
	sum += g_weight.w * GetColor( uv + shift_m - adder * 3.0 );

	return sum;
}

float4 Main_(float2 uv)
{
#if BLUR_X
	return CalcBlurredColor(uv);
#endif

#if BLUR_Y
	return max(CalcBlurredColor(uv) - float4(1.0,1.0,1.0,1.0), float4(0.0,0.0,0.0,0.0)) + GetOriginalColor(uv);
#endif
}