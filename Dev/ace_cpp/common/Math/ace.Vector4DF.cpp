
//----------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------
#include "ace.Vector4DF.h"


//----------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------
namespace ace {
	//----------------------------------------------------------------------------------
	//
	//----------------------------------------------------------------------------------
	Vector4DF::Vector4DF()
		: X(0)
		, Y(0)
		, Z(0)
		, W(0)
	{
	}

	Vector4DF::Vector4DF(float x, float y, float z, float w)
		: X(x)
		, Y(y)
		, Z(z)
		, W(w)
	{

	}

	//-----------------------------------------------------------------------------------
	//
	//-----------------------------------------------------------------------------------
	bool Vector4DF::operator == (const Vector4DF& o)
	{
		return X == o.X && Y == o.Y && Z == o.Z && W == o.W;
	}

	//-----------------------------------------------------------------------------------
	//
	//-----------------------------------------------------------------------------------
	bool Vector4DF::operator != (const Vector4DF& o)
	{
		return !(X == o.X && Y == o.Y && Z == o.Z && W == o.W);
	}

	//----------------------------------------------------------------------------------
	//
	//----------------------------------------------------------------------------------
	Vector4DF Vector4DF::operator-()
	{
		return Vector4DF(-X, -Y, -Z, -W);
	}

	//-----------------------------------------------------------------------------------
	//
	//-----------------------------------------------------------------------------------
	Vector4DF Vector4DF::operator + (const Vector4DF& o) const
	{
		return Vector4DF(X + o.X, Y + o.Y, Z + o.Z, W + o.W);
	}

	//-----------------------------------------------------------------------------------
	//
	//-----------------------------------------------------------------------------------
	Vector4DF Vector4DF::operator - (const Vector4DF& o) const
	{
		return Vector4DF(X - o.X, Y - o.Y, Z - o.Z, W - o.W);
	}

	//-----------------------------------------------------------------------------------
	//
	//-----------------------------------------------------------------------------------
	Vector4DF Vector4DF::operator * (const Vector4DF& o) const
	{
		return Vector4DF(X * o.X, Y * o.Y, Z * o.Z, W * o.W);
	}

	//-----------------------------------------------------------------------------------
	//
	//-----------------------------------------------------------------------------------
	Vector4DF Vector4DF::operator / (const Vector4DF& o) const
	{
		return Vector4DF(X / o.X, Y / o.Y, Z / o.Z, W / o.W);
	}

	//-----------------------------------------------------------------------------------
	//
	//-----------------------------------------------------------------------------------
	Vector4DF Vector4DF::operator * (const float& o) const
	{
		return Vector4DF(X * o, Y * o, Z * o, W * o);
	}

	//-----------------------------------------------------------------------------------
	//
	//-----------------------------------------------------------------------------------
	Vector4DF Vector4DF::operator / (const float& o) const
	{
		return Vector4DF(X / o, Y / o, Z * o, W * o);
	}

	//----------------------------------------------------------------------------------
	//
	//----------------------------------------------------------------------------------

}